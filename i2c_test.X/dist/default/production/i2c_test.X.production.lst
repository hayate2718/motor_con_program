

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 25 01:50:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F1827 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011D                     	;# 
   144  011E                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  0219                     	;# 
   185  021A                     	;# 
   186  021B                     	;# 
   187  021C                     	;# 
   188  021D                     	;# 
   189  021E                     	;# 
   190  021F                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0294                     	;# 
   196  0295                     	;# 
   197  0295                     	;# 
   198  0296                     	;# 
   199  0298                     	;# 
   200  0298                     	;# 
   201  0299                     	;# 
   202  029A                     	;# 
   203  029B                     	;# 
   204  029C                     	;# 
   205  029C                     	;# 
   206  029D                     	;# 
   207  029E                     	;# 
   208  029E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  0394                     	;# 
   218  0395                     	;# 
   219  0396                     	;# 
   220  039A                     	;# 
   221  039C                     	;# 
   222  039D                     	;# 
   223  039E                     	;# 
   224  039F                     	;# 
   225  0415                     	;# 
   226  0416                     	;# 
   227  0417                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011A                     	;# 
   300  011B                     	;# 
   301  011D                     	;# 
   302  011E                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020D                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0219                     	;# 
   343  021A                     	;# 
   344  021B                     	;# 
   345  021C                     	;# 
   346  021D                     	;# 
   347  021E                     	;# 
   348  021F                     	;# 
   349  0291                     	;# 
   350  0291                     	;# 
   351  0292                     	;# 
   352  0293                     	;# 
   353  0294                     	;# 
   354  0295                     	;# 
   355  0295                     	;# 
   356  0296                     	;# 
   357  0298                     	;# 
   358  0298                     	;# 
   359  0299                     	;# 
   360  029A                     	;# 
   361  029B                     	;# 
   362  029C                     	;# 
   363  029C                     	;# 
   364  029D                     	;# 
   365  029E                     	;# 
   366  029E                     	;# 
   367  0311                     	;# 
   368  0311                     	;# 
   369  0312                     	;# 
   370  0313                     	;# 
   371  0318                     	;# 
   372  0318                     	;# 
   373  0319                     	;# 
   374  031A                     	;# 
   375  0394                     	;# 
   376  0395                     	;# 
   377  0396                     	;# 
   378  039A                     	;# 
   379  039C                     	;# 
   380  039D                     	;# 
   381  039E                     	;# 
   382  039F                     	;# 
   383  0415                     	;# 
   384  0416                     	;# 
   385  0417                     	;# 
   386  041C                     	;# 
   387  041D                     	;# 
   388  041E                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE9                     	;# 
   395  0FEA                     	;# 
   396  0FEB                     	;# 
   397  0FED                     	;# 
   398  0FEE                     	;# 
   399  0FEF                     	;# 
   400                           
   401                           	psect	idataBANK1
   402  0FD3                     __pidataBANK1:	
   403                           
   404                           ;initializer for _pwm_freq
   405  0FD3  34B8               	retlw	184
   406  0FD4  3488               	retlw	136
   407  0FD5  3400               	retlw	0
   408  0FD6  3400               	retlw	0
   409  001B                     _PR2	set	27
   410  001C                     _T2CON	set	28
   411  0068                     _RB0	set	104
   412  0060                     _RA0	set	96
   413  0064                     _RA4	set	100
   414  0061                     _RA1	set	97
   415  008B                     _SSP1IF	set	139
   416  009B                     _ADRES	set	155
   417  009E                     _ADCON1	set	158
   418  009D                     _ADCON0	set	157
   419  008D                     _TRISB	set	141
   420  008C                     _TRISA	set	140
   421  0099                     _OSCCON	set	153
   422  04E9                     _GO	set	1257
   423  018D                     _ANSELB	set	397
   424  018C                     _ANSELA	set	396
   425  0216                     _SSP1CON2bits	set	534
   426  0211                     _SSP1BUF	set	529
   427  0216                     _SSPCON2bits	set	534
   428  0212                     _SSP1ADD	set	530
   429  0217                     _SSP1CON3	set	535
   430  0215                     _SSP1CON1	set	533
   431  0214                     _SSP1STAT	set	532
   432  029E                     _CCPTMRS	set	670
   433  0311                     _CCPR3L	set	785
   434  0313                     _CCP3CON	set	787
   435                           
   436                           	psect	stringtext1
   437  0800                     __pstringtext1:	
   438  0800                     STR_1:	
   439  0800  3450               	retlw	80	;'P'
   440  0801  3457               	retlw	87	;'W'
   441  0802  344D               	retlw	77	;'M'
   442  0803  345F               	retlw	95	;'_'
   443  0804  3444               	retlw	68	;'D'
   444  0805  3475               	retlw	117	;'u'
   445  0806  3474               	retlw	116	;'t'
   446  0807  3479               	retlw	121	;'y'
   447  0808  343A               	retlw	58	;':'
   448  0809  3425               	retlw	37	;'%'
   449  080A  3464               	retlw	100	;'d'
   450  080B  3420               	retlw	32	;' '
   451  080C  3400               	retlw	0
   452                           
   453                           	psect	stringtext2
   454  080D                     __pstringtext2:	
   455  080D                     STR_5:	
   456  080D  3452               	retlw	82	;'R'
   457  080E  3465               	retlw	101	;'e'
   458  080F  3473               	retlw	115	;'s'
   459  0810  3465               	retlw	101	;'e'
   460  0811  3474               	retlw	116	;'t'
   461  0812  343A               	retlw	58	;':'
   462  0813  3448               	retlw	72	;'H'
   463  0814  3420               	retlw	32	;' '
   464  0815  3400               	retlw	0
   465                           
   466                           	psect	stringtext3
   467  0816                     __pstringtext3:	
   468  0816                     STR_4:	
   469  0816  3452               	retlw	82	;'R'
   470  0817  3465               	retlw	101	;'e'
   471  0818  3473               	retlw	115	;'s'
   472  0819  3465               	retlw	101	;'e'
   473  081A  3474               	retlw	116	;'t'
   474  081B  343A               	retlw	58	;':'
   475  081C  344C               	retlw	76	;'L'
   476  081D  3420               	retlw	32	;' '
   477  081E  3400               	retlw	0
   478                           
   479                           	psect	stringtext4
   480  081F                     __pstringtext4:	
   481  081F                     STR_3:	
   482  081F  3444               	retlw	68	;'D'
   483  0820  3469               	retlw	105	;'i'
   484  0821  3472               	retlw	114	;'r'
   485  0822  343A               	retlw	58	;':'
   486  0823  3442               	retlw	66	;'B'
   487  0824  3400               	retlw	0
   488                           
   489                           	psect	stringtext5
   490  0825                     __pstringtext5:	
   491  0825                     STR_2:	
   492  0825  3444               	retlw	68	;'D'
   493  0826  3469               	retlw	105	;'i'
   494  0827  3472               	retlw	114	;'r'
   495  0828  343A               	retlw	58	;':'
   496  0829  3446               	retlw	70	;'F'
   497  082A  3400               	retlw	0
   498                           
   499                           	psect	stringtext6
   500  0000                     __pstringtext6:	
   501                           
   502                           ; #config settings
   503  0000                     
   504                           	psect	cinit
   505  07E4                     start_initialization:	
   506  07E4                     __initialization:	
   507                           
   508                           ; Initialize objects allocated to BANK1
   509  07E4  0021               	movlb	1	; select bank1
   510  07E5  318F  27D3  3187   	fcall	__pidataBANK1	;fetch initializer
   511  07E8  00CE               	movwf	__pdataBANK1& (0+127)
   512  07E9  318F  27D4  3187   	fcall	__pidataBANK1+1	;fetch initializer
   513  07EC  00CF               	movwf	(__pdataBANK1+1)& (0+127)
   514  07ED  318F  27D5  3187   	fcall	__pidataBANK1+2	;fetch initializer
   515  07F0  00D0               	movwf	(__pdataBANK1+2)& (0+127)
   516  07F1  318F  27D6  3187   	fcall	__pidataBANK1+3	;fetch initializer
   517  07F4  00D1               	movwf	(__pdataBANK1+3)& (0+127)
   518                           
   519                           ; Clear objects allocated to BANK1
   520  07F5  30A0               	movlw	low __pbssBANK1
   521  07F6  0084               	movwf	4
   522  07F7  3000               	movlw	high __pbssBANK1
   523  07F8  0085               	movwf	5
   524  07F9  3028               	movlw	40
   525  07FA  3180  2005  3187   	fcall	clear_ram0
   526  07FD                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  07FD                     __end_of__initialization:	
   530  07FD  0020               	movlb	0
   531  07FE  3183  2B45         	ljmp	_main	;jump to C main() function
   532                           
   533                           	psect	bssBANK1
   534  00A0                     __pbssBANK1:	
   535  00A0                     _nout:	
   536  00A0                     	ds	2
   537  00A2                     _width:	
   538  00A2                     	ds	2
   539  00A4                     _prec:	
   540  00A4                     	ds	2
   541  00A6                     _flags:	
   542  00A6                     	ds	2
   543  00A8                     _dbuf:	
   544  00A8                     	ds	32
   545                           
   546                           	psect	dataBANK1
   547  00CE                     __pdataBANK1:	
   548  00CE                     _pwm_freq:	
   549  00CE                     	ds	4
   550                           
   551                           	psect	clrtext
   552  0005                     clear_ram0:	
   553                           ;	Called with FSR0 containing the base address, and
   554                           ;	WREG with the size to clear
   555                           
   556  0005  0064               	clrwdt	;clear the watchdog before getting into this loop
   557  0006                     clrloop0:	
   558  0006  0180               	clrf	0	;clear RAM location pointed to by FSR
   559  0007  3101               	addfsr 0,1
   560  0008  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   561  0009  2806               	goto	clrloop0	;have we reached the end yet?
   562  000A  3400               	retlw	0	;all done for this memory range, return
   563                           
   564                           	psect	cstackBANK1
   565  00C8                     __pcstackBANK1:	
   566  00C8                     ?_pwm_lcd:	
   567  00C8                     pwm_lcd@duty:	
   568                           ; 1 bytes @ 0x0
   569                           
   570                           
   571                           ; 2 bytes @ 0x0
   572  00C8                     	ds	2
   573  00CA                     ??_main:	
   574                           
   575                           ; 1 bytes @ 0x2
   576  00CA                     	ds	4
   577                           
   578                           	psect	cstackCOMMON
   579  0070                     __pcstackCOMMON:	
   580  0070                     ?_picinit:	
   581  0070                     ??_i2c_start:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_i2c_stop:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ??_i2c_send:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_lcd_init:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_putch:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_dir_o:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_reset_o:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??___aodiv:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??___aomod:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_strlen:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_i2c_start:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ?_i2c_stop:	
   615                           ; 2 bytes @ 0x0
   616                           
   617  0070                     ?_i2c_send:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     ?_lcd_send_com:	
   621                           ; 2 bytes @ 0x0
   622                           
   623  0070                     ?_lcd_send_char:	
   624                           ; 2 bytes @ 0x0
   625                           
   626  0070                     ?_adc_h:	
   627                           ; 2 bytes @ 0x0
   628                           
   629  0070                     ?_main:	
   630                           ; 2 bytes @ 0x0
   631                           
   632  0070                     ?___wmul:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0070                     ?___lldiv:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     i2c_send@data:	
   639                           ; 4 bytes @ 0x0
   640                           
   641  0070                     ___wmul@multiplier:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ___lldiv@divisor:	
   645                           ; 2 bytes @ 0x0
   646                           
   647                           
   648                           ; 4 bytes @ 0x0
   649  0070                     	ds	1
   650  0071                     ?_lcd_i2c:	
   651  0071                     lcd_i2c@data:	
   652                           ; 2 bytes @ 0x1
   653                           
   654  0071                     ___aodiv@counter:	
   655                           ; 1 bytes @ 0x1
   656                           
   657  0071                     ___aomod@counter:	
   658                           ; 1 bytes @ 0x1
   659                           
   660                           
   661                           ; 1 bytes @ 0x1
   662  0071                     	ds	1
   663  0072                     ??_strlen:	
   664  0072                     ??_lcd_i2c:	
   665                           ; 1 bytes @ 0x2
   666                           
   667  0072                     ??_adc_h:	
   668                           ; 1 bytes @ 0x2
   669                           
   670  0072                     lcd_i2c@con:	
   671                           ; 1 bytes @ 0x2
   672                           
   673  0072                     ___aodiv@sign:	
   674                           ; 1 bytes @ 0x2
   675                           
   676  0072                     ___aomod@sign:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     adc_h@adc:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     ___wmul@multiplicand:	
   683                           ; 2 bytes @ 0x2
   684                           
   685                           
   686                           ; 2 bytes @ 0x2
   687  0072                     	ds	1
   688  0073                     ??_lcd_send_com:	
   689  0073                     ??_lcd_send_char:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ?_abs:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     strlen@a:	
   696                           ; 2 bytes @ 0x3
   697                           
   698  0073                     abs@a:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ___aodiv@quotient:	
   702                           ; 2 bytes @ 0x3
   703                           
   704                           
   705                           ; 8 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     ??___wmul:	
   708  0074                     lcd_send_com@command:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     lcd_send_char@data:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     strlen@s:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ___wmul@product:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ___lldiv@dividend:	
   721                           ; 2 bytes @ 0x4
   722                           
   723                           
   724                           ; 4 bytes @ 0x4
   725  0074                     	ds	1
   726  0075                     ??_abs:	
   727  0075                     ??_lcd_init:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ??_putch:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ?_lcd_pos:	
   734                           ; 1 bytes @ 0x5
   735                           
   736  0075                     lcd_pos@pos_y:	
   737                           ; 2 bytes @ 0x5
   738                           
   739  0075                     putch@character:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 1 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     ??_lcd_pos:	
   746  0076                     ?_fputc:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0076                     ?_pwm_h:	
   750                           ; 2 bytes @ 0x6
   751                           
   752  0076                     ?___awdiv:	
   753                           ; 2 bytes @ 0x6
   754                           
   755  0076                     ___awdiv@divisor:	
   756                           ; 2 bytes @ 0x6
   757                           
   758  0076                     fputc@c:	
   759                           ; 2 bytes @ 0x6
   760                           
   761  0076                     pwm_h@volt:	
   762                           ; 2 bytes @ 0x6
   763                           
   764                           
   765                           ; 4 bytes @ 0x6
   766  0076                     	ds	1
   767  0077                     lcd_pos@pos_x:	
   768                           
   769                           ; 1 bytes @ 0x7
   770  0077                     	ds	1
   771  0078                     ??___lldiv:	
   772  0078                     fputc@fp:	
   773                           ; 1 bytes @ 0x8
   774                           
   775  0078                     ___awdiv@dividend:	
   776                           ; 1 bytes @ 0x8
   777                           
   778                           
   779                           ; 2 bytes @ 0x8
   780  0078                     	ds	1
   781  0079                     ??_fputc:	
   782  0079                     ___lldiv@quotient:	
   783                           ; 1 bytes @ 0x9
   784                           
   785                           
   786                           ; 4 bytes @ 0x9
   787  0079                     	ds	1
   788  007A                     ??_pwm_h:	
   789  007A                     ??___awdiv:	
   790                           ; 1 bytes @ 0xA
   791                           
   792                           
   793                           ; 1 bytes @ 0xA
   794  007A                     	ds	3
   795  007D                     ___lldiv@counter:	
   796                           
   797                           ; 1 bytes @ 0xD
   798  007D                     	ds	1
   799  007E                     ??_picinit:	
   800  007E                     ??_pwm_lcd:	
   801                           ; 1 bytes @ 0xE
   802                           
   803  007E                     ??_dir_o:	
   804                           ; 1 bytes @ 0xE
   805                           
   806  007E                     ??_reset_o:	
   807                           ; 1 bytes @ 0xE
   808                           
   809                           
   810                           	psect	cstackBANK0
   811  0020                     __pcstackBANK0:	
   812                           ; 1 bytes @ 0xE
   813                           
   814  0020                     ?_fputs:	
   815  0020                     ?___aodiv:	
   816                           ; 2 bytes @ 0x0
   817                           
   818  0020                     ?___aomod:	
   819                           ; 8 bytes @ 0x0
   820                           
   821  0020                     ___awdiv@counter:	
   822                           ; 8 bytes @ 0x0
   823                           
   824  0020                     fputs@fp:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0020                     pwm_h@pwm:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     ___aodiv@divisor:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0020                     ___aomod@divisor:	
   834                           ; 8 bytes @ 0x0
   835                           
   836                           
   837                           ; 8 bytes @ 0x0
   838  0020                     	ds	1
   839  0021                     ??_fputs:	
   840  0021                     ___awdiv@sign:	
   841                           ; 1 bytes @ 0x1
   842                           
   843                           
   844                           ; 1 bytes @ 0x1
   845  0021                     	ds	1
   846  0022                     pwm_h@poripori:	
   847  0022                     ___awdiv@quotient:	
   848                           ; 2 bytes @ 0x2
   849                           
   850                           
   851                           ; 2 bytes @ 0x2
   852  0022                     	ds	2
   853  0024                     fputs@c:	
   854                           
   855                           ; 1 bytes @ 0x4
   856  0024                     	ds	1
   857  0025                     fputs@i:	
   858                           
   859                           ; 2 bytes @ 0x5
   860  0025                     	ds	2
   861  0027                     fputs@s:	
   862                           
   863                           ; 1 bytes @ 0x7
   864  0027                     	ds	1
   865  0028                     ?_pad:	
   866  0028                     pad@buf:	
   867                           ; 2 bytes @ 0x8
   868                           
   869  0028                     ___aodiv@dividend:	
   870                           ; 1 bytes @ 0x8
   871                           
   872  0028                     ___aomod@dividend:	
   873                           ; 8 bytes @ 0x8
   874                           
   875                           
   876                           ; 8 bytes @ 0x8
   877  0028                     	ds	1
   878  0029                     pad@p:	
   879                           
   880                           ; 2 bytes @ 0x9
   881  0029                     	ds	2
   882  002B                     ??_pad:	
   883                           
   884                           ; 1 bytes @ 0xB
   885  002B                     	ds	1
   886  002C                     pad@i:	
   887                           
   888                           ; 2 bytes @ 0xC
   889  002C                     	ds	2
   890  002E                     pad@w:	
   891                           
   892                           ; 2 bytes @ 0xE
   893  002E                     	ds	2
   894  0030                     pad@fp:	
   895                           
   896                           ; 1 bytes @ 0x10
   897  0030                     	ds	1
   898  0031                     ?_dtoa:	
   899  0031                     dtoa@d:	
   900                           ; 2 bytes @ 0x11
   901                           
   902                           
   903                           ; 8 bytes @ 0x11
   904  0031                     	ds	8
   905  0039                     ??_dtoa:	
   906                           
   907                           ; 1 bytes @ 0x19
   908  0039                     	ds	3
   909  003C                     _dtoa$403:	
   910                           
   911                           ; 2 bytes @ 0x1C
   912  003C                     	ds	2
   913  003E                     dtoa@p:	
   914                           
   915                           ; 2 bytes @ 0x1E
   916  003E                     	ds	2
   917  0040                     dtoa@fp:	
   918                           
   919                           ; 1 bytes @ 0x20
   920  0040                     	ds	1
   921  0041                     dtoa@w:	
   922                           
   923                           ; 2 bytes @ 0x21
   924  0041                     	ds	2
   925  0043                     dtoa@s:	
   926                           
   927                           ; 2 bytes @ 0x23
   928  0043                     	ds	2
   929  0045                     dtoa@n:	
   930                           
   931                           ; 8 bytes @ 0x25
   932  0045                     	ds	8
   933  004D                     dtoa@i:	
   934                           
   935                           ; 2 bytes @ 0x2D
   936  004D                     	ds	2
   937  004F                     ?_vfpfcnvrt:	
   938  004F                     vfpfcnvrt@fmt:	
   939                           ; 2 bytes @ 0x2F
   940                           
   941                           
   942                           ; 1 bytes @ 0x2F
   943  004F                     	ds	1
   944  0050                     vfpfcnvrt@ap:	
   945                           
   946                           ; 1 bytes @ 0x30
   947  0050                     	ds	1
   948  0051                     ??_vfpfcnvrt:	
   949                           
   950                           ; 1 bytes @ 0x31
   951  0051                     	ds	5
   952  0056                     vfpfcnvrt@ll:	
   953                           
   954                           ; 8 bytes @ 0x36
   955  0056                     	ds	8
   956  005E                     vfpfcnvrt@fp:	
   957                           
   958                           ; 1 bytes @ 0x3E
   959  005E                     	ds	1
   960  005F                     ?_vfprintf:	
   961  005F                     vfprintf@fmt:	
   962                           ; 2 bytes @ 0x3F
   963                           
   964                           
   965                           ; 2 bytes @ 0x3F
   966  005F                     	ds	2
   967  0061                     vfprintf@ap:	
   968                           
   969                           ; 1 bytes @ 0x41
   970  0061                     	ds	1
   971  0062                     ??_vfprintf:	
   972                           
   973                           ; 1 bytes @ 0x42
   974  0062                     	ds	2
   975  0064                     vfprintf@fp:	
   976                           
   977                           ; 1 bytes @ 0x44
   978  0064                     	ds	1
   979  0065                     vfprintf@cfmt:	
   980                           
   981                           ; 2 bytes @ 0x45
   982  0065                     	ds	2
   983  0067                     ?_printf:	
   984  0067                     printf@fmt:	
   985                           ; 2 bytes @ 0x47
   986                           
   987                           
   988                           ; 2 bytes @ 0x47
   989  0067                     	ds	4
   990  006B                     ??_printf:	
   991                           
   992                           ; 1 bytes @ 0x4B
   993  006B                     	ds	3
   994  006E                     printf@ap:	
   995                           
   996                           ; 1 bytes @ 0x4E
   997  006E                     	ds	1
   998                           
   999                           	psect	maintext
  1000  0345                     __pmaintext:	
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 178 in file "newfile.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2  128[None  ] int 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : B1F/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1020 ;;      Params:         0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0
  1022 ;;      Temps:          0       0       4       0       0       0
  1023 ;;      Totals:         0       0       4       0       0       0
  1024 ;;Total ram usage:        4 bytes
  1025 ;; Hardware stack levels required when called:   12
  1026 ;; This function calls:
  1027 ;;		___awdiv
  1028 ;;		___wmul
  1029 ;;		_adc_h
  1030 ;;		_dir_o
  1031 ;;		_lcd_init
  1032 ;;		_lcd_pos
  1033 ;;		_picinit
  1034 ;;		_pwm_h
  1035 ;;		_pwm_lcd
  1036 ;;		_reset_o
  1037 ;; This function is called by:
  1038 ;;		Startup code after reset
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _main
  1044  0345                     _main:	
  1045  0345                     l1772:	
  1046                           ;incstack = 0
  1047                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1048                           
  1049                           
  1050                           ;newfile.c: 179:     picinit();
  1051  0345  3181  21B8  3183   	fcall	_picinit
  1052  0348                     l1774:	
  1053                           
  1054                           ;newfile.c: 180:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1055  0348  3002               	movlw	2
  1056  0349  0021               	movlb	1	; select bank1
  1057  034A  00CB               	movwf	(??_main^(0+128)+1)
  1058  034B  3004               	movlw	4
  1059  034C  00CA               	movwf	??_main^(0+128)
  1060  034D  30BA               	movlw	186
  1061  034E                     u1667:	
  1062  034E  0B89               	decfsz	9,f
  1063  034F  2B4E               	goto	u1667
  1064  0350  0BCA               	decfsz	??_main^(0+128),f
  1065  0351  2B4E               	goto	u1667
  1066  0352  0BCB               	decfsz	(??_main^(0+128)+1),f
  1067  0353  2B4E               	goto	u1667
  1068  0354  0000               	nop
  1069  0355                     l1776:	
  1070                           
  1071                           ;newfile.c: 181:     lcd_init();
  1072  0355  3181  2187  3183   	fcall	_lcd_init
  1073  0358                     l1778:	
  1074                           
  1075                           ;newfile.c: 182:     lcd_pos(0,0);
  1076  0358  01F5               	clrf	lcd_pos@pos_y
  1077  0359  3000               	movlw	0
  1078  035A  3180  201A  3183   	fcall	_lcd_pos
  1079  035D                     l1780:	
  1080                           
  1081                           ;newfile.c: 184:         CCPR3L = pwm_h(adc_h());
  1082  035D  3180  200B  3183   	fcall	_adc_h
  1083  0360  0870               	movf	?_adc_h,w
  1084  0361  00F6               	movwf	pwm_h@volt
  1085  0362  0871               	movf	?_adc_h+1,w
  1086  0363  00F7               	movwf	pwm_h@volt+1
  1087  0364  0D89               	rlf	9,f
  1088  0365  3B89               	subwfb	9,f
  1089  0366  0989               	comf	9,f
  1090  0367  00F8               	movwf	pwm_h@volt+2
  1091  0368  00F9               	movwf	pwm_h@volt+3
  1092  0369  3181  212E  3183   	fcall	_pwm_h
  1093  036C  0876               	movf	?_pwm_h,w
  1094  036D  0026               	movlb	6	; select bank6
  1095  036E  0091               	movwf	17	;volatile
  1096  036F                     l1782:	
  1097                           
  1098                           ;newfile.c: 185:         lcd_pos(0,1);
  1099  036F  01F5               	clrf	lcd_pos@pos_y
  1100  0370  0AF5               	incf	lcd_pos@pos_y,f
  1101  0371  3000               	movlw	0
  1102  0372  3180  201A  3183   	fcall	_lcd_pos
  1103  0375                     l1784:	
  1104                           
  1105                           ;newfile.c: 186:         pwm_lcd(100*CCPR3L/PR2);
  1106  0375  0020               	movlb	0	; select bank0
  1107  0376  081B               	movf	27,w	;volatile
  1108  0377  0021               	movlb	1	; select bank1
  1109  0378  00CA               	movwf	??_main^(0+128)
  1110  0379  01CB               	clrf	(??_main^(0+128)+1)
  1111  037A  084A               	movf	??_main^(0+128),w
  1112  037B  00F6               	movwf	___awdiv@divisor
  1113  037C  084B               	movf	(??_main+1)^(0+128),w
  1114  037D  00F7               	movwf	___awdiv@divisor+1
  1115  037E  0026               	movlb	6	; select bank6
  1116  037F  0811               	movf	17,w	;volatile
  1117  0380  0021               	movlb	1	; select bank1
  1118  0381  00CC               	movwf	(??_main+2)^(0+128)
  1119  0382  01CD               	clrf	((??_main+2)^(0+128)+1)
  1120  0383  084C               	movf	(??_main+2)^(0+128),w
  1121  0384  00F0               	movwf	___wmul@multiplier
  1122  0385  084D               	movf	(??_main+3)^(0+128),w
  1123  0386  00F1               	movwf	___wmul@multiplier+1
  1124  0387  3064               	movlw	100
  1125  0388  00F2               	movwf	___wmul@multiplicand
  1126  0389  3000               	movlw	0
  1127  038A  00F3               	movwf	___wmul@multiplicand+1
  1128  038B  3180  20E7  3183   	fcall	___wmul
  1129  038E  0871               	movf	?___wmul+1,w
  1130  038F  00F9               	movwf	___awdiv@dividend+1
  1131  0390  0870               	movf	?___wmul,w
  1132  0391  00F8               	movwf	___awdiv@dividend
  1133  0392  3182  22E5  3183   	fcall	___awdiv
  1134  0395  0877               	movf	?___awdiv+1,w
  1135  0396  0021               	movlb	1	; select bank1
  1136  0397  00C9               	movwf	(pwm_lcd@duty+1)^(0+128)
  1137  0398  0876               	movf	?___awdiv,w
  1138  0399  00C8               	movwf	pwm_lcd@duty^(0+128)
  1139  039A  3180  204B  3183   	fcall	_pwm_lcd
  1140  039D                     l1786:	
  1141                           
  1142                           ;newfile.c: 187:         lcd_pos(0,0);
  1143  039D  01F5               	clrf	lcd_pos@pos_y
  1144  039E  3000               	movlw	0
  1145  039F  3180  201A  3183   	fcall	_lcd_pos
  1146  03A2                     l1788:	
  1147                           
  1148                           ;newfile.c: 188:         dir_o();
  1149  03A2  3180  209B  3183   	fcall	_dir_o
  1150  03A5                     l1790:	
  1151                           
  1152                           ;newfile.c: 189:         lcd_pos(7,0);
  1153  03A5  01F5               	clrf	lcd_pos@pos_y
  1154  03A6  3007               	movlw	7
  1155  03A7  3180  201A  3183   	fcall	_lcd_pos
  1156  03AA                     l1792:	
  1157                           
  1158                           ;newfile.c: 190:         reset_o();
  1159  03AA  3180  20B4  3183   	fcall	_reset_o
  1160  03AD  2B5D               	goto	l1780
  1161  03AE  3180  2802         	ljmp	start
  1162  03B0                     __end_of_main:	
  1163                           
  1164                           	psect	text1
  1165  00B4                     __ptext1:	
  1166 ;; *************** function _reset_o *****************
  1167 ;; Defined at:
  1168 ;;		line 168 in file "newfile.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1182 ;;      Params:         0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:   11
  1189 ;; This function calls:
  1190 ;;		_printf
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _reset_o
  1198  00B4                     _reset_o:	
  1199  00B4                     l1718:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _reset_o: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1202                           
  1203                           
  1204                           ;newfile.c: 169:     if(RA0 == 1){
  1205  00B4  0020               	movlb	0	; select bank0
  1206  00B5  1C0C               	btfss	12,0	;volatile
  1207  00B6  28B8               	goto	u1551
  1208  00B7  28B9               	goto	u1550
  1209  00B8                     u1551:	
  1210  00B8  28C3               	goto	l1724
  1211  00B9                     u1550:	
  1212  00B9                     l1720:	
  1213                           
  1214                           ;newfile.c: 170:         printf("Reset:L ");
  1215  00B9  3016               	movlw	low (STR_4| (0+32768))
  1216  00BA  00E7               	movwf	printf@fmt
  1217  00BB  3088               	movlw	high (STR_4| (0+32768))
  1218  00BC  00E8               	movwf	printf@fmt+1
  1219  00BD  3180  205C  3180   	fcall	_printf
  1220  00C0                     l1722:	
  1221                           
  1222                           ;newfile.c: 171:         RB0 = 0;
  1223  00C0  0020               	movlb	0	; select bank0
  1224  00C1  100D               	bcf	13,0	;volatile
  1225                           
  1226                           ;newfile.c: 172:     } else{
  1227  00C2  28CC               	goto	l124
  1228  00C3                     l1724:	
  1229                           
  1230                           ;newfile.c: 173:         printf("Reset:H ");
  1231  00C3  300D               	movlw	low (STR_5| (0+32768))
  1232  00C4  00E7               	movwf	printf@fmt
  1233  00C5  3088               	movlw	high (STR_5| (0+32768))
  1234  00C6  00E8               	movwf	printf@fmt+1
  1235  00C7  3180  205C  3180   	fcall	_printf
  1236  00CA                     l1726:	
  1237                           
  1238                           ;newfile.c: 174:         RB0 = 1;
  1239  00CA  0020               	movlb	0	; select bank0
  1240  00CB  140D               	bsf	13,0	;volatile
  1241  00CC                     l124:	
  1242  00CC  0008               	return
  1243  00CD                     __end_of_reset_o:	
  1244                           
  1245                           	psect	text2
  1246  004B                     __ptext2:	
  1247 ;; *************** function _pwm_lcd *****************
  1248 ;; Defined at:
  1249 ;;		line 154 in file "newfile.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  duty            2    0[BANK1 ] unsigned int 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1263 ;;      Params:         0       0       2       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0
  1266 ;;      Totals:         0       0       2       0       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:   11
  1270 ;; This function calls:
  1271 ;;		_printf
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _pwm_lcd
  1279  004B                     _pwm_lcd:	
  1280  004B                     l1706:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _pwm_lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1283                           
  1284                           
  1285                           ;newfile.c: 155:     printf("PWM_Duty:%d ",duty);
  1286  004B  3000               	movlw	low (STR_1| (0+32768))
  1287  004C  0020               	movlb	0	; select bank0
  1288  004D  00E7               	movwf	printf@fmt
  1289  004E  3088               	movlw	high (STR_1| (0+32768))
  1290  004F  00E8               	movwf	printf@fmt+1
  1291  0050  0021               	movlb	1	; select bank1
  1292  0051  0849               	movf	(pwm_lcd@duty+1)^(0+128),w
  1293  0052  0020               	movlb	0	; select bank0
  1294  0053  00EA               	movwf	?_printf+3
  1295  0054  0021               	movlb	1	; select bank1
  1296  0055  0848               	movf	pwm_lcd@duty^(0+128),w
  1297  0056  0020               	movlb	0	; select bank0
  1298  0057  00E9               	movwf	?_printf+2
  1299  0058  3180  205C  3180   	fcall	_printf
  1300  005B                     l114:	
  1301  005B  0008               	return
  1302  005C                     __end_of_pwm_lcd:	
  1303                           
  1304                           	psect	text3
  1305  012E                     __ptext3:	
  1306 ;; *************** function _pwm_h *****************
  1307 ;; Defined at:
  1308 ;;		line 146 in file "newfile.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  volt            4    6[COMMON] unsigned long 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  poripori        2    2[BANK0 ] unsigned int 
  1313 ;;  pwm             2    0[BANK0 ] unsigned int 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2    6[COMMON] int 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1323 ;;      Params:         4       0       0       0       0       0
  1324 ;;      Locals:         0       4       0       0       0       0
  1325 ;;      Temps:          2       0       0       0       0       0
  1326 ;;      Totals:         6       4       0       0       0       0
  1327 ;;Total ram usage:       10 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		___wmul
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _pwm_h
  1339  012E                     _pwm_h:	
  1340  012E                     l1696:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _pwm_h: [wreg+status,2+status,0+pclath+cstack]
  1343                           
  1344                           
  1345                           ;newfile.c: 148:     unsigned int poripori = 0;
  1346  012E  0020               	movlb	0	; select bank0
  1347  012F  01A2               	clrf	pwm_h@poripori
  1348  0130  01A3               	clrf	pwm_h@poripori+1
  1349  0131                     l1698:	
  1350                           
  1351                           ;newfile.c: 149:     poripori = volt * (PR2+1);
  1352  0131  081B               	movf	27,w	;volatile
  1353  0132  3E01               	addlw	1
  1354  0133  00F0               	movwf	___wmul@multiplier
  1355  0134  3000               	movlw	0
  1356  0135  1803               	skipnc
  1357  0136  3001               	movlw	1
  1358  0137  00F1               	movwf	___wmul@multiplier+1
  1359  0138  0877               	movf	pwm_h@volt+1,w
  1360  0139  00F3               	movwf	___wmul@multiplicand+1
  1361  013A  0876               	movf	pwm_h@volt,w
  1362  013B  00F2               	movwf	___wmul@multiplicand
  1363  013C  3180  20E7  3181   	fcall	___wmul
  1364  013F  0871               	movf	?___wmul+1,w
  1365  0140  0020               	movlb	0	; select bank0
  1366  0141  00A3               	movwf	pwm_h@poripori+1
  1367  0142  0870               	movf	?___wmul,w
  1368  0143  00A2               	movwf	pwm_h@poripori
  1369  0144                     l1700:	
  1370                           
  1371                           ;newfile.c: 150:     pwm = poripori / 1024;
  1372  0144  0823               	movf	pwm_h@poripori+1,w
  1373  0145  00FB               	movwf	??_pwm_h+1
  1374  0146  0822               	movf	pwm_h@poripori,w
  1375  0147  00FA               	movwf	??_pwm_h
  1376  0148  300A               	movlw	10
  1377  0149                     u1535:	
  1378  0149  36FB               	lsrf	??_pwm_h+1,f
  1379  014A  0CFA               	rrf	??_pwm_h,f
  1380  014B  0B89               	decfsz	9,f
  1381  014C  2949               	goto	u1535
  1382  014D  087A               	movf	??_pwm_h,w
  1383  014E  00A0               	movwf	pwm_h@pwm
  1384  014F  087B               	movf	??_pwm_h+1,w
  1385  0150  00A1               	movwf	pwm_h@pwm+1
  1386  0151                     l1702:	
  1387                           
  1388                           ;newfile.c: 151:     return pwm;
  1389  0151  0821               	movf	pwm_h@pwm+1,w
  1390  0152  00F7               	movwf	?_pwm_h+1
  1391  0153  0820               	movf	pwm_h@pwm,w
  1392  0154  00F6               	movwf	?_pwm_h
  1393  0155                     l111:	
  1394  0155  0008               	return
  1395  0156                     __end_of_pwm_h:	
  1396                           
  1397                           	psect	text4
  1398  00E7                     __ptext4:	
  1399 ;; *************** function ___wmul *****************
  1400 ;; Defined at:
  1401 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  multiplier      2    0[COMMON] unsigned int 
  1404 ;;  multiplicand    2    2[COMMON] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  product         2    4[COMMON] unsigned int 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    0[COMMON] unsigned int 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1416 ;;      Params:         4       0       0       0       0       0
  1417 ;;      Locals:         2       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0
  1419 ;;      Totals:         6       0       0       0       0       0
  1420 ;;Total ram usage:        6 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_pwm_h
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function ___wmul
  1432  00E7                     ___wmul:	
  1433  00E7                     l1608:	
  1434                           ;incstack = 0
  1435                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1436                           
  1437  00E7  01F4               	clrf	___wmul@product
  1438  00E8  01F5               	clrf	___wmul@product+1
  1439  00E9                     l1610:	
  1440  00E9  1C70               	btfss	___wmul@multiplier,0
  1441  00EA  28EC               	goto	u1401
  1442  00EB  28ED               	goto	u1400
  1443  00EC                     u1401:	
  1444  00EC  28F1               	goto	l354
  1445  00ED                     u1400:	
  1446  00ED                     l1612:	
  1447  00ED  0872               	movf	___wmul@multiplicand,w
  1448  00EE  07F4               	addwf	___wmul@product,f
  1449  00EF  0873               	movf	___wmul@multiplicand+1,w
  1450  00F0  3DF5               	addwfc	___wmul@product+1,f
  1451  00F1                     l354:	
  1452  00F1  3001               	movlw	1
  1453  00F2                     u1415:	
  1454  00F2  35F2               	lslf	___wmul@multiplicand,f
  1455  00F3  0DF3               	rlf	___wmul@multiplicand+1,f
  1456  00F4  0B89               	decfsz	9,f
  1457  00F5  28F2               	goto	u1415
  1458  00F6                     l1614:	
  1459  00F6  3001               	movlw	1
  1460  00F7                     u1425:	
  1461  00F7  36F1               	lsrf	___wmul@multiplier+1,f
  1462  00F8  0CF0               	rrf	___wmul@multiplier,f
  1463  00F9  0B89               	decfsz	9,f
  1464  00FA  28F7               	goto	u1425
  1465  00FB                     l1616:	
  1466  00FB  0870               	movf	___wmul@multiplier,w
  1467  00FC  0471               	iorwf	___wmul@multiplier+1,w
  1468  00FD  1D03               	btfss	3,2
  1469  00FE  2900               	goto	u1431
  1470  00FF  2901               	goto	u1430
  1471  0100                     u1431:	
  1472  0100  28E9               	goto	l1610
  1473  0101                     u1430:	
  1474  0101                     l1618:	
  1475  0101  0875               	movf	___wmul@product+1,w
  1476  0102  00F1               	movwf	?___wmul+1
  1477  0103  0874               	movf	___wmul@product,w
  1478  0104  00F0               	movwf	?___wmul
  1479  0105                     l356:	
  1480  0105  0008               	return
  1481  0106                     __end_of___wmul:	
  1482                           
  1483                           	psect	text5
  1484  01B8                     __ptext5:	
  1485 ;; *************** function _picinit *****************
  1486 ;; Defined at:
  1487 ;;		line 35 in file "newfile.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1501 ;;      Params:         0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		___lldiv
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _picinit
  1517  01B8                     _picinit:	
  1518  01B8                     l1646:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _picinit: [wreg+status,2+status,0+pclath+cstack]
  1521                           
  1522                           
  1523                           ;newfile.c: 36:     OSCCON = 0b01110010;
  1524  01B8  3072               	movlw	114
  1525  01B9  0021               	movlb	1	; select bank1
  1526  01BA  0099               	movwf	25	;volatile
  1527                           
  1528                           ;newfile.c: 37:     ANSELA = 0b00000100;
  1529  01BB  3004               	movlw	4
  1530  01BC  0023               	movlb	3	; select bank3
  1531  01BD  008C               	movwf	12	;volatile
  1532  01BE                     l1648:	
  1533                           
  1534                           ;newfile.c: 38:     ANSELB = 0;
  1535  01BE  018D               	clrf	13	;volatile
  1536  01BF                     l1650:	
  1537                           
  1538                           ;newfile.c: 39:     TRISA = 0b00000111;
  1539  01BF  3007               	movlw	7
  1540  01C0  0021               	movlb	1	; select bank1
  1541  01C1  008C               	movwf	12	;volatile
  1542  01C2                     l1652:	
  1543                           
  1544                           ;newfile.c: 40:     TRISB = 0b00010010;
  1545  01C2  3012               	movlw	18
  1546  01C3  008D               	movwf	13	;volatile
  1547  01C4                     l1654:	
  1548                           
  1549                           ;newfile.c: 41:     SSP1STAT = 0b00000000;
  1550  01C4  0024               	movlb	4	; select bank4
  1551  01C5  0194               	clrf	20	;volatile
  1552                           
  1553                           ;newfile.c: 42:     SSP1CON1 = 0b00101000;
  1554  01C6  3028               	movlw	40
  1555  01C7  0095               	movwf	21	;volatile
  1556  01C8                     l1656:	
  1557                           
  1558                           ;newfile.c: 43:     SSP1CON3 = 0b00000000;
  1559  01C8  0197               	clrf	23	;volatile
  1560  01C9                     l1658:	
  1561                           
  1562                           ;newfile.c: 44:     SSP1ADD = (8000000/(4*100000))-1;
  1563  01C9  3013               	movlw	19
  1564  01CA  0092               	movwf	18	;volatile
  1565  01CB                     l1660:	
  1566                           
  1567                           ;newfile.c: 45:     ADCON0 = 0b00001001;
  1568  01CB  3009               	movlw	9
  1569  01CC  0021               	movlb	1	; select bank1
  1570  01CD  009D               	movwf	29	;volatile
  1571  01CE                     l1662:	
  1572                           
  1573                           ;newfile.c: 46:     ADCON1 = 0b11000000;
  1574  01CE  30C0               	movlw	192
  1575  01CF  009E               	movwf	30	;volatile
  1576  01D0                     l1664:	
  1577                           
  1578                           ;newfile.c: 47:     CCP3CON = 0b00001100;
  1579  01D0  300C               	movlw	12
  1580  01D1  0026               	movlb	6	; select bank6
  1581  01D2  0093               	movwf	19	;volatile
  1582  01D3                     l1666:	
  1583                           
  1584                           ;newfile.c: 48:     CCPTMRS =0;
  1585  01D3  0025               	movlb	5	; select bank5
  1586  01D4  019E               	clrf	30	;volatile
  1587                           
  1588                           ;newfile.c: 49:     T2CON = 0b00000100;
  1589  01D5  3004               	movlw	4
  1590  01D6  0020               	movlb	0	; select bank0
  1591  01D7  009C               	movwf	28	;volatile
  1592  01D8                     l1668:	
  1593                           
  1594                           ;newfile.c: 50:     PR2 = 2000000/pwm_freq-1;
  1595  01D8  0021               	movlb	1	; select bank1
  1596  01D9  0851               	movf	(_pwm_freq+3)^(0+128),w
  1597  01DA  00F3               	movwf	___lldiv@divisor+3
  1598  01DB  0850               	movf	(_pwm_freq+2)^(0+128),w
  1599  01DC  00F2               	movwf	___lldiv@divisor+2
  1600  01DD  084F               	movf	(_pwm_freq+1)^(0+128),w
  1601  01DE  00F1               	movwf	___lldiv@divisor+1
  1602  01DF  084E               	movf	_pwm_freq^(0+128),w
  1603  01E0  00F0               	movwf	___lldiv@divisor
  1604  01E1  3000               	movlw	0
  1605  01E2  00F7               	movwf	___lldiv@dividend+3
  1606  01E3  301E               	movlw	30
  1607  01E4  00F6               	movwf	___lldiv@dividend+2
  1608  01E5  3084               	movlw	132
  1609  01E6  00F5               	movwf	___lldiv@dividend+1
  1610  01E7  3080               	movlw	128
  1611  01E8  00F4               	movwf	___lldiv@dividend
  1612  01E9  3182  228B  3181   	fcall	___lldiv
  1613  01EC  0870               	movf	?___lldiv,w
  1614  01ED  3EFF               	addlw	255
  1615  01EE  0020               	movlb	0	; select bank0
  1616  01EF  009B               	movwf	27	;volatile
  1617  01F0                     l1670:	
  1618                           
  1619                           ;newfile.c: 51:     CCPR3L = 0;
  1620  01F0  0026               	movlb	6	; select bank6
  1621  01F1  0191               	clrf	17	;volatile
  1622  01F2                     l61:	
  1623  01F2  0008               	return
  1624  01F3                     __end_of_picinit:	
  1625                           
  1626                           	psect	text6
  1627  028B                     __ptext6:	
  1628 ;; *************** function ___lldiv *****************
  1629 ;; Defined at:
  1630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         4    0[COMMON] unsigned long 
  1633 ;;  dividend        4    4[COMMON] unsigned long 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  quotient        4    9[COMMON] unsigned long 
  1636 ;;  counter         1   13[COMMON] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  4    0[COMMON] unsigned long 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1646 ;;      Params:         8       0       0       0       0       0
  1647 ;;      Locals:         5       0       0       0       0       0
  1648 ;;      Temps:          1       0       0       0       0       0
  1649 ;;      Totals:        14       0       0       0       0       0
  1650 ;;Total ram usage:       14 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_picinit
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function ___lldiv
  1661  028B                     ___lldiv:	
  1662  028B                     l1622:	
  1663                           ;incstack = 0
  1664                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1665                           
  1666  028B  3000               	movlw	0
  1667  028C  00FC               	movwf	___lldiv@quotient+3
  1668  028D  3000               	movlw	0
  1669  028E  00FB               	movwf	___lldiv@quotient+2
  1670  028F  3000               	movlw	0
  1671  0290  00FA               	movwf	___lldiv@quotient+1
  1672  0291  3000               	movlw	0
  1673  0292  00F9               	movwf	___lldiv@quotient
  1674  0293  0873               	movf	___lldiv@divisor+3,w
  1675  0294  0472               	iorwf	___lldiv@divisor+2,w
  1676  0295  0471               	iorwf	___lldiv@divisor+1,w
  1677  0296  0470               	iorwf	___lldiv@divisor,w
  1678  0297  1903               	skipnz
  1679  0298  2A9A               	goto	u1441
  1680  0299  2A9B               	goto	u1440
  1681  029A                     u1441:	
  1682  029A  2ADC               	goto	l1642
  1683  029B                     u1440:	
  1684  029B                     l1624:	
  1685  029B  01FD               	clrf	___lldiv@counter
  1686  029C  0AFD               	incf	___lldiv@counter,f
  1687  029D  2AA9               	goto	l1628
  1688  029E                     l1626:	
  1689  029E  3001               	movlw	1
  1690  029F                     u1455:	
  1691  029F  35F0               	lslf	___lldiv@divisor,f
  1692  02A0  0DF1               	rlf	___lldiv@divisor+1,f
  1693  02A1  0DF2               	rlf	___lldiv@divisor+2,f
  1694  02A2  0DF3               	rlf	___lldiv@divisor+3,f
  1695  02A3  0B89               	decfsz	9,f
  1696  02A4  2A9F               	goto	u1455
  1697  02A5  3001               	movlw	1
  1698  02A6  00F8               	movwf	??___lldiv
  1699  02A7  0878               	movf	??___lldiv,w
  1700  02A8  07FD               	addwf	___lldiv@counter,f
  1701  02A9                     l1628:	
  1702  02A9  1FF3               	btfss	___lldiv@divisor+3,7
  1703  02AA  2AAC               	goto	u1461
  1704  02AB  2AAD               	goto	u1460
  1705  02AC                     u1461:	
  1706  02AC  2A9E               	goto	l1626
  1707  02AD                     u1460:	
  1708  02AD                     l1630:	
  1709  02AD  3001               	movlw	1
  1710  02AE                     u1475:	
  1711  02AE  35F9               	lslf	___lldiv@quotient,f
  1712  02AF  0DFA               	rlf	___lldiv@quotient+1,f
  1713  02B0  0DFB               	rlf	___lldiv@quotient+2,f
  1714  02B1  0DFC               	rlf	___lldiv@quotient+3,f
  1715  02B2  0B89               	decfsz	9,f
  1716  02B3  2AAE               	goto	u1475
  1717  02B4                     l1632:	
  1718  02B4  0873               	movf	___lldiv@divisor+3,w
  1719  02B5  0277               	subwf	___lldiv@dividend+3,w
  1720  02B6  1D03               	skipz
  1721  02B7  2AC2               	goto	u1485
  1722  02B8  0872               	movf	___lldiv@divisor+2,w
  1723  02B9  0276               	subwf	___lldiv@dividend+2,w
  1724  02BA  1D03               	skipz
  1725  02BB  2AC2               	goto	u1485
  1726  02BC  0871               	movf	___lldiv@divisor+1,w
  1727  02BD  0275               	subwf	___lldiv@dividend+1,w
  1728  02BE  1D03               	skipz
  1729  02BF  2AC2               	goto	u1485
  1730  02C0  0870               	movf	___lldiv@divisor,w
  1731  02C1  0274               	subwf	___lldiv@dividend,w
  1732  02C2                     u1485:	
  1733  02C2  1C03               	skipc
  1734  02C3  2AC5               	goto	u1481
  1735  02C4  2AC6               	goto	u1480
  1736  02C5                     u1481:	
  1737  02C5  2ACF               	goto	l1638
  1738  02C6                     u1480:	
  1739  02C6                     l1634:	
  1740  02C6  0870               	movf	___lldiv@divisor,w
  1741  02C7  02F4               	subwf	___lldiv@dividend,f
  1742  02C8  0871               	movf	___lldiv@divisor+1,w
  1743  02C9  3BF5               	subwfb	___lldiv@dividend+1,f
  1744  02CA  0872               	movf	___lldiv@divisor+2,w
  1745  02CB  3BF6               	subwfb	___lldiv@dividend+2,f
  1746  02CC  0873               	movf	___lldiv@divisor+3,w
  1747  02CD  3BF7               	subwfb	___lldiv@dividend+3,f
  1748  02CE                     l1636:	
  1749  02CE  1479               	bsf	___lldiv@quotient,0
  1750  02CF                     l1638:	
  1751  02CF  3001               	movlw	1
  1752  02D0                     u1495:	
  1753  02D0  36F3               	lsrf	___lldiv@divisor+3,f
  1754  02D1  0CF2               	rrf	___lldiv@divisor+2,f
  1755  02D2  0CF1               	rrf	___lldiv@divisor+1,f
  1756  02D3  0CF0               	rrf	___lldiv@divisor,f
  1757  02D4  0B89               	decfsz	9,f
  1758  02D5  2AD0               	goto	u1495
  1759  02D6                     l1640:	
  1760  02D6  3001               	movlw	1
  1761  02D7  02FD               	subwf	___lldiv@counter,f
  1762  02D8  1D03               	btfss	3,2
  1763  02D9  2ADB               	goto	u1501
  1764  02DA  2ADC               	goto	u1500
  1765  02DB                     u1501:	
  1766  02DB  2AAD               	goto	l1630
  1767  02DC                     u1500:	
  1768  02DC                     l1642:	
  1769  02DC  087C               	movf	___lldiv@quotient+3,w
  1770  02DD  00F3               	movwf	?___lldiv+3
  1771  02DE  087B               	movf	___lldiv@quotient+2,w
  1772  02DF  00F2               	movwf	?___lldiv+2
  1773  02E0  087A               	movf	___lldiv@quotient+1,w
  1774  02E1  00F1               	movwf	?___lldiv+1
  1775  02E2  0879               	movf	___lldiv@quotient,w
  1776  02E3  00F0               	movwf	?___lldiv
  1777  02E4                     l390:	
  1778  02E4  0008               	return
  1779  02E5                     __end_of___lldiv:	
  1780                           
  1781                           	psect	text7
  1782  001A                     __ptext7:	
  1783 ;; *************** function _lcd_pos *****************
  1784 ;; Defined at:
  1785 ;;		line 128 in file "newfile.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  pos_x           1    wreg     unsigned char 
  1788 ;;  pos_y           1    5[COMMON] unsigned char 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  pos_x           1    7[COMMON] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2    5[COMMON] int 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1800 ;;      Params:         1       0       0       0       0       0
  1801 ;;      Locals:         1       0       0       0       0       0
  1802 ;;      Temps:          1       0       0       0       0       0
  1803 ;;      Totals:         3       0       0       0       0       0
  1804 ;;Total ram usage:        3 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    3
  1807 ;; This function calls:
  1808 ;;		_lcd_send_com
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _lcd_pos
  1816  001A                     _lcd_pos:	
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _lcd_pos: [wreg+status,2+status,0+pclath+cstack]
  1820                           ;lcd_pos@pos_x stored from wreg
  1821  001A  00F7               	movwf	lcd_pos@pos_x
  1822  001B                     l1684:	
  1823                           
  1824                           ;newfile.c: 129:     lcd_send_com(0x80 + 0x40 * pos_y + pos_x);
  1825  001B  0875               	movf	lcd_pos@pos_y,w
  1826  001C  00F6               	movwf	??_lcd_pos
  1827  001D  3005               	movlw	5
  1828  001E                     u1515:	
  1829  001E  35F6               	lslf	??_lcd_pos,f
  1830  001F  3EFF               	addlw	-1
  1831  0020  1D03               	skipz
  1832  0021  281E               	goto	u1515
  1833  0022  3576               	lslf	??_lcd_pos,w
  1834  0023  0777               	addwf	lcd_pos@pos_x,w
  1835  0024  3E80               	addlw	128
  1836  0025  3180  203A  3180   	fcall	_lcd_send_com
  1837  0028                     l99:	
  1838  0028  0008               	return
  1839  0029                     __end_of_lcd_pos:	
  1840                           
  1841                           	psect	text8
  1842  0187                     __ptext8:	
  1843 ;; *************** function _lcd_init *****************
  1844 ;; Defined at:
  1845 ;;		line 114 in file "newfile.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1859 ;;      Params:         0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0
  1861 ;;      Temps:          2       0       0       0       0       0
  1862 ;;      Totals:         2       0       0       0       0       0
  1863 ;;Total ram usage:        2 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		_lcd_send_com
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _lcd_init
  1875  0187                     _lcd_init:	
  1876  0187                     l1672:	
  1877                           ;incstack = 0
  1878                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1879                           
  1880                           
  1881                           ;newfile.c: 115:     lcd_send_com(0x38);
  1882  0187  3038               	movlw	56
  1883  0188  3180  203A  3181   	fcall	_lcd_send_com
  1884                           
  1885                           ;newfile.c: 116:     lcd_send_com(0x39);
  1886  018B  3039               	movlw	57
  1887  018C  3180  203A  3181   	fcall	_lcd_send_com
  1888                           
  1889                           ;newfile.c: 117:     lcd_send_com(0x14);
  1890  018F  3014               	movlw	20
  1891  0190  3180  203A  3181   	fcall	_lcd_send_com
  1892                           
  1893                           ;newfile.c: 118:     lcd_send_com(0x73);
  1894  0193  3073               	movlw	115
  1895  0194  3180  203A  3181   	fcall	_lcd_send_com
  1896                           
  1897                           ;newfile.c: 119:     lcd_send_com(0x52);
  1898  0197  3052               	movlw	82
  1899  0198  3180  203A  3181   	fcall	_lcd_send_com
  1900                           
  1901                           ;newfile.c: 120:     lcd_send_com(0x6c);
  1902  019B  306C               	movlw	108
  1903  019C  3180  203A  3181   	fcall	_lcd_send_com
  1904  019F                     l1674:	
  1905                           
  1906                           ;newfile.c: 121:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1907  019F  3003               	movlw	3
  1908  01A0  00F6               	movwf	??_lcd_init+1
  1909  01A1  3008               	movlw	8
  1910  01A2  00F5               	movwf	??_lcd_init
  1911  01A3  3077               	movlw	119
  1912  01A4                     u1677:	
  1913  01A4  0B89               	decfsz	9,f
  1914  01A5  29A4               	goto	u1677
  1915  01A6  0BF5               	decfsz	??_lcd_init,f
  1916  01A7  29A4               	goto	u1677
  1917  01A8  0BF6               	decfsz	??_lcd_init+1,f
  1918  01A9  29A4               	goto	u1677
  1919  01AA  0000               	nop
  1920  01AB                     l1676:	
  1921                           
  1922                           ;newfile.c: 122:     lcd_send_com(0x38);
  1923  01AB  3038               	movlw	56
  1924  01AC  3180  203A  3181   	fcall	_lcd_send_com
  1925  01AF                     l1678:	
  1926                           
  1927                           ;newfile.c: 123:     lcd_send_com(0x01);
  1928  01AF  3001               	movlw	1
  1929  01B0  3180  203A  3181   	fcall	_lcd_send_com
  1930  01B3                     l1680:	
  1931                           
  1932                           ;newfile.c: 124:     lcd_send_com(0x0c);
  1933  01B3  300C               	movlw	12
  1934  01B4  3180  203A  3181   	fcall	_lcd_send_com
  1935  01B7                     l96:	
  1936  01B7  0008               	return
  1937  01B8                     __end_of_lcd_init:	
  1938                           
  1939                           	psect	text9
  1940  003A                     __ptext9:	
  1941 ;; *************** function _lcd_send_com *****************
  1942 ;; Defined at:
  1943 ;;		line 102 in file "newfile.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  command         1    wreg     unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  command         1    4[COMMON] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  2   89[None  ] int 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1957 ;;      Params:         0       0       0       0       0       0
  1958 ;;      Locals:         1       0       0       0       0       0
  1959 ;;      Temps:          1       0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    2
  1964 ;; This function calls:
  1965 ;;		_lcd_i2c
  1966 ;; This function is called by:
  1967 ;;		_lcd_init
  1968 ;;		_lcd_pos
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _lcd_send_com
  1974  003A                     _lcd_send_com:	
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _lcd_send_com: [wreg+status,2+status,0+pclath+cstack]
  1978                           ;lcd_send_com@command stored from wreg
  1979  003A  00F4               	movwf	lcd_send_com@command
  1980  003B                     l1596:	
  1981                           
  1982                           ;newfile.c: 103:     lcd_i2c(0x00,command);
  1983  003B  0874               	movf	lcd_send_com@command,w
  1984  003C  00F3               	movwf	??_lcd_send_com
  1985  003D  0873               	movf	??_lcd_send_com,w
  1986  003E  00F1               	movwf	lcd_i2c@data
  1987  003F  3000               	movlw	0
  1988  0040  3180  206E  3180   	fcall	_lcd_i2c
  1989  0043                     l1598:	
  1990                           
  1991                           ;newfile.c: 104:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1992  0043  3003               	movlw	3
  1993  0044  00F3               	movwf	??_lcd_send_com
  1994  0045  3098               	movlw	152
  1995  0046                     u1687:	
  1996  0046  0B89               	decfsz	9,f
  1997  0047  2846               	goto	u1687
  1998  0048  0BF3               	decfsz	??_lcd_send_com,f
  1999  0049  2846               	goto	u1687
  2000  004A                     l90:	
  2001  004A  0008               	return
  2002  004B                     __end_of_lcd_send_com:	
  2003                           
  2004                           	psect	text10
  2005  009B                     __ptext10:	
  2006 ;; *************** function _dir_o *****************
  2007 ;; Defined at:
  2008 ;;		line 158 in file "newfile.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2022 ;;      Params:         0       0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:   11
  2029 ;; This function calls:
  2030 ;;		_printf
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _dir_o
  2038  009B                     _dir_o:	
  2039  009B                     l1708:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _dir_o: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2042                           
  2043                           
  2044                           ;newfile.c: 159:     if(RA1 == 1){
  2045  009B  0020               	movlb	0	; select bank0
  2046  009C  1C8C               	btfss	12,1	;volatile
  2047  009D  289F               	goto	u1541
  2048  009E  28A0               	goto	u1540
  2049  009F                     u1541:	
  2050  009F  28AA               	goto	l1714
  2051  00A0                     u1540:	
  2052  00A0                     l1710:	
  2053                           
  2054                           ;newfile.c: 160:         printf("Dir:F");
  2055  00A0  3025               	movlw	low (STR_2| (0+32768))
  2056  00A1  00E7               	movwf	printf@fmt
  2057  00A2  3088               	movlw	high (STR_2| (0+32768))
  2058  00A3  00E8               	movwf	printf@fmt+1
  2059  00A4  3180  205C  3180   	fcall	_printf
  2060  00A7                     l1712:	
  2061                           
  2062                           ;newfile.c: 161:         RA4 =1;
  2063  00A7  0020               	movlb	0	; select bank0
  2064  00A8  160C               	bsf	12,4	;volatile
  2065                           
  2066                           ;newfile.c: 162:     }else{
  2067  00A9  28B3               	goto	l119
  2068  00AA                     l1714:	
  2069                           
  2070                           ;newfile.c: 163:         printf("Dir:B");
  2071  00AA  301F               	movlw	low (STR_3| (0+32768))
  2072  00AB  00E7               	movwf	printf@fmt
  2073  00AC  3088               	movlw	high (STR_3| (0+32768))
  2074  00AD  00E8               	movwf	printf@fmt+1
  2075  00AE  3180  205C  3180   	fcall	_printf
  2076  00B1                     l1716:	
  2077                           
  2078                           ;newfile.c: 164:         RA4 = 0;
  2079  00B1  0020               	movlb	0	; select bank0
  2080  00B2  120C               	bcf	12,4	;volatile
  2081  00B3                     l119:	
  2082  00B3  0008               	return
  2083  00B4                     __end_of_dir_o:	
  2084                           
  2085                           	psect	text11
  2086  005C                     __ptext11:	
  2087 ;; *************** function _printf *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  2092 ;;		 -> STR_5(9), STR_4(9), STR_3(6), STR_2(6), 
  2093 ;;		 -> STR_1(13), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  ret             2    0        int 
  2096 ;;  ap              1   78[BANK0 ] PTR void [1]
  2097 ;;		 -> ?_printf(2), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2   71[BANK0 ] int 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2107 ;;      Params:         0       4       0       0       0       0
  2108 ;;      Locals:         0       3       0       0       0       0
  2109 ;;      Temps:          0       1       0       0       0       0
  2110 ;;      Totals:         0       8       0       0       0       0
  2111 ;;Total ram usage:        8 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:   10
  2114 ;; This function calls:
  2115 ;;		_vfprintf
  2116 ;; This function is called by:
  2117 ;;		_pwm_lcd
  2118 ;;		_dir_o
  2119 ;;		_reset_o
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _printf
  2125  005C                     _printf:	
  2126  005C                     l1602:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2129                           
  2130  005C  3069               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2131  005D  0020               	movlb	0	; select bank0
  2132  005E  00EB               	movwf	??_printf
  2133  005F  086B               	movf	??_printf,w
  2134  0060  00EE               	movwf	printf@ap
  2135  0061                     l1604:	
  2136  0061  0868               	movf	printf@fmt+1,w
  2137  0062  00E0               	movwf	vfprintf@fmt+1
  2138  0063  0867               	movf	printf@fmt,w
  2139  0064  00DF               	movwf	vfprintf@fmt
  2140  0065  306E               	movlw	(low (printf@ap| 0))& (0+255)
  2141  0066  00EB               	movwf	??_printf
  2142  0067  086B               	movf	??_printf,w
  2143  0068  00E1               	movwf	vfprintf@ap
  2144  0069  3000               	movlw	0
  2145  006A  3181  2156  3180   	fcall	_vfprintf
  2146  006D                     l838:	
  2147  006D  0008               	return
  2148  006E                     __end_of_printf:	
  2149                           
  2150                           	psect	text12
  2151  0156                     __ptext12:	
  2152 ;; *************** function _vfprintf *****************
  2153 ;; Defined at:
  2154 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  fp              1    wreg     PTR struct _IO_FILE
  2157 ;;		 -> NULL(0), 
  2158 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  2159 ;;		 -> STR_5(9), STR_4(9), STR_3(6), STR_2(6), 
  2160 ;;		 -> STR_1(13), 
  2161 ;;  ap              1   65[BANK0 ] PTR PTR void 
  2162 ;;		 -> printf@ap(1), 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  2165 ;;		 -> NULL(0), 
  2166 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  2167 ;;		 -> STR_5(9), STR_4(9), STR_3(6), STR_2(6), 
  2168 ;;		 -> STR_1(13), 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2   63[BANK0 ] int 
  2171 ;; Registers used:
  2172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2178 ;;      Params:         0       3       0       0       0       0
  2179 ;;      Locals:         0       3       0       0       0       0
  2180 ;;      Temps:          0       2       0       0       0       0
  2181 ;;      Totals:         0       8       0       0       0       0
  2182 ;;Total ram usage:        8 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    9
  2185 ;; This function calls:
  2186 ;;		_vfpfcnvrt
  2187 ;; This function is called by:
  2188 ;;		_printf
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _vfprintf
  2194  0156                     _vfprintf:	
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2198                           ;vfprintf@fp stored from wreg
  2199  0156  0020               	movlb	0	; select bank0
  2200  0157  00E4               	movwf	vfprintf@fp
  2201  0158                     l1584:	
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2204  0158  0860               	movf	vfprintf@fmt+1,w
  2205  0159  00E6               	movwf	vfprintf@cfmt+1
  2206  015A  085F               	movf	vfprintf@fmt,w
  2207  015B  00E5               	movwf	vfprintf@cfmt
  2208  015C                     l1586:	
  2209                           
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2211  015C  0021               	movlb	1	; select bank1
  2212  015D  01A0               	clrf	_nout^(0+128)
  2213  015E  01A1               	clrf	(_nout+1)^(0+128)
  2214                           
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2216  015F  2974               	goto	l1590
  2217  0160                     l1588:	
  2218                           
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2220  0160  3065               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2221  0161  00E2               	movwf	??_vfprintf
  2222  0162  0862               	movf	??_vfprintf,w
  2223  0163  00CF               	movwf	vfpfcnvrt@fmt
  2224  0164  0861               	movf	vfprintf@ap,w
  2225  0165  00E3               	movwf	??_vfprintf+1
  2226  0166  0863               	movf	??_vfprintf+1,w
  2227  0167  00D0               	movwf	vfpfcnvrt@ap
  2228  0168  0864               	movf	vfprintf@fp,w
  2229  0169  3183  23B0  3181   	fcall	_vfpfcnvrt
  2230  016C  0020               	movlb	0	; select bank0
  2231  016D  084F               	movf	?_vfpfcnvrt,w
  2232  016E  0021               	movlb	1	; select bank1
  2233  016F  07A0               	addwf	_nout^(0+128),f
  2234  0170  0020               	movlb	0	; select bank0
  2235  0171  0850               	movf	?_vfpfcnvrt+1,w
  2236  0172  0021               	movlb	1	; select bank1
  2237  0173  3DA1               	addwfc	(_nout+1)^(0+128),f
  2238  0174                     l1590:	
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2241  0174  0020               	movlb	0	; select bank0
  2242  0175  0865               	movf	vfprintf@cfmt,w
  2243  0176  0084               	movwf	4
  2244  0177  0866               	movf	vfprintf@cfmt+1,w
  2245  0178  0085               	movwf	5
  2246  0179  0012               	moviw fsr0++
  2247  017A  1D03               	btfss	3,2
  2248  017B  297D               	goto	u1391
  2249  017C  297E               	goto	u1390
  2250  017D                     u1391:	
  2251  017D  2960               	goto	l1588
  2252  017E                     u1390:	
  2253  017E                     l1592:	
  2254                           
  2255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2256  017E  0021               	movlb	1	; select bank1
  2257  017F  0821               	movf	(_nout+1)^(0+128),w
  2258  0180  0020               	movlb	0	; select bank0
  2259  0181  00E0               	movwf	?_vfprintf+1
  2260  0182  0021               	movlb	1	; select bank1
  2261  0183  0820               	movf	_nout^(0+128),w
  2262  0184  0020               	movlb	0	; select bank0
  2263  0185  00DF               	movwf	?_vfprintf
  2264  0186                     l350:	
  2265  0186  0008               	return
  2266  0187                     __end_of_vfprintf:	
  2267                           
  2268                           	psect	text13
  2269  03B0                     __ptext13:	
  2270 ;; *************** function _vfpfcnvrt *****************
  2271 ;; Defined at:
  2272 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  fp              1    wreg     PTR struct _IO_FILE
  2275 ;;		 -> NULL(0), 
  2276 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  2277 ;;		 -> vfprintf@cfmt(2), 
  2278 ;;  ap              1   48[BANK0 ] PTR PTR void 
  2279 ;;		 -> printf@ap(1), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  fp              1   62[BANK0 ] PTR struct _IO_FILE
  2282 ;;		 -> NULL(0), 
  2283 ;;  ll              8   54[BANK0 ] long long 
  2284 ;;  llu             8    0        unsigned long long 
  2285 ;;  f               4    0        unsigned long long 
  2286 ;;  ct              3    0        unsigned char [3]
  2287 ;;  vp              2    0        PTR void 
  2288 ;;  i               2    0        int 
  2289 ;;  done            2    0        int 
  2290 ;;  cp              2    0        PTR unsigned char 
  2291 ;;  c               1    0        unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2   47[BANK0 ] int 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2301 ;;      Params:         0       2       0       0       0       0
  2302 ;;      Locals:         0       9       0       0       0       0
  2303 ;;      Temps:          0       5       0       0       0       0
  2304 ;;      Totals:         0      16       0       0       0       0
  2305 ;;Total ram usage:       16 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    8
  2308 ;; This function calls:
  2309 ;;		_dtoa
  2310 ;;		_fputc
  2311 ;; This function is called by:
  2312 ;;		_vfprintf
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _vfpfcnvrt
  2318  03B0                     _vfpfcnvrt:	
  2319                           
  2320                           ;incstack = 0
  2321                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2322                           ;vfpfcnvrt@fp stored from wreg
  2323  03B0  0020               	movlb	0	; select bank0
  2324  03B1  00DE               	movwf	vfpfcnvrt@fp
  2325  03B2                     l1540:	
  2326                           
  2327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2328  03B2  084F               	movf	vfpfcnvrt@fmt,w
  2329  03B3  0086               	movwf	6
  2330  03B4  0187               	clrf	7
  2331  03B5  3F40               	moviw [0]fsr1
  2332  03B6  00D1               	movwf	??_vfpfcnvrt
  2333  03B7  3F41               	moviw [1]fsr1
  2334  03B8  00D2               	movwf	??_vfpfcnvrt+1
  2335  03B9  0851               	movf	??_vfpfcnvrt,w
  2336  03BA  0084               	movwf	4
  2337  03BB  0852               	movf	??_vfpfcnvrt+1,w
  2338  03BC  0085               	movwf	5
  2339  03BD  0012               	moviw fsr0++
  2340  03BE  3A25               	xorlw	37
  2341  03BF  1D03               	btfss	3,2
  2342  03C0  2BC2               	goto	u1351
  2343  03C1  2BC3               	goto	u1350
  2344  03C2                     u1351:	
  2345  03C2  2C67               	goto	l1576
  2346  03C3                     u1350:	
  2347  03C3                     l1542:	
  2348                           
  2349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2350  03C3  084F               	movf	vfpfcnvrt@fmt,w
  2351  03C4  0086               	movwf	6
  2352  03C5  0187               	clrf	7
  2353  03C6  3001               	movlw	1
  2354  03C7  0781               	addwf	1,f
  2355  03C8  3141               	addfsr 1,1
  2356  03C9  1803               	skipnc
  2357  03CA  0A81               	incf	1,f
  2358  03CB                     l1544:	
  2359                           
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2361  03CB  0021               	movlb	1	; select bank1
  2362  03CC  01A2               	clrf	_width^(0+128)
  2363  03CD  01A3               	clrf	(_width+1)^(0+128)
  2364  03CE  01A6               	clrf	_flags^(0+128)
  2365  03CF  01A7               	clrf	(_flags+1)^(0+128)
  2366  03D0                     l1546:	
  2367                           
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2369  03D0  30FF               	movlw	255
  2370  03D1  00A4               	movwf	_prec^(0+128)
  2371  03D2  30FF               	movlw	255
  2372  03D3  00A5               	movwf	(_prec^(0+128)+1)
  2373  03D4                     l1548:	
  2374                           
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2376  03D4  0020               	movlb	0	; select bank0
  2377  03D5  084F               	movf	vfpfcnvrt@fmt,w
  2378  03D6  0086               	movwf	6
  2379  03D7  0187               	clrf	7
  2380  03D8  3F40               	moviw [0]fsr1
  2381  03D9  00D1               	movwf	??_vfpfcnvrt
  2382  03DA  3F41               	moviw [1]fsr1
  2383  03DB  00D2               	movwf	??_vfpfcnvrt+1
  2384  03DC  0851               	movf	??_vfpfcnvrt,w
  2385  03DD  0084               	movwf	4
  2386  03DE  0852               	movf	??_vfpfcnvrt+1,w
  2387  03DF  0085               	movwf	5
  2388  03E0  0012               	moviw fsr0++
  2389  03E1  3A64               	xorlw	100
  2390  03E2  1903               	btfsc	3,2
  2391  03E3  2BE5               	goto	u1361
  2392  03E4  2BE6               	goto	u1360
  2393  03E5                     u1361:	
  2394  03E5  2BF7               	goto	l1552
  2395  03E6                     u1360:	
  2396  03E6                     l1550:	
  2397  03E6  084F               	movf	vfpfcnvrt@fmt,w
  2398  03E7  0086               	movwf	6
  2399  03E8  0187               	clrf	7
  2400  03E9  3F40               	moviw [0]fsr1
  2401  03EA  00D1               	movwf	??_vfpfcnvrt
  2402  03EB  3F41               	moviw [1]fsr1
  2403  03EC  00D2               	movwf	??_vfpfcnvrt+1
  2404  03ED  0851               	movf	??_vfpfcnvrt,w
  2405  03EE  0084               	movwf	4
  2406  03EF  0852               	movf	??_vfpfcnvrt+1,w
  2407  03F0  0085               	movwf	5
  2408  03F1  0012               	moviw fsr0++
  2409  03F2  3A69               	xorlw	105
  2410  03F3  1D03               	btfss	3,2
  2411  03F4  2BF6               	goto	u1371
  2412  03F5  2BF7               	goto	u1370
  2413  03F6                     u1371:	
  2414  03F6  2C32               	goto	l1560
  2415  03F7                     u1370:	
  2416  03F7                     l1552:	
  2417                           
  2418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2419  03F7  084F               	movf	vfpfcnvrt@fmt,w
  2420  03F8  0086               	movwf	6
  2421  03F9  0187               	clrf	7
  2422  03FA  3001               	movlw	1
  2423  03FB  0781               	addwf	1,f
  2424  03FC  3141               	addfsr 1,1
  2425  03FD  1803               	skipnc
  2426  03FE  0A81               	incf	1,f
  2427  03FF                     l1554:	
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2430  03FF  0850               	movf	vfpfcnvrt@ap,w
  2431  0400  0086               	movwf	6
  2432  0401  0187               	clrf	7
  2433  0402  0801               	movf	1,w
  2434  0403  0084               	movwf	4
  2435  0404  0185               	clrf	5
  2436  0405  3002               	movlw	2
  2437  0406  0781               	addwf	1,f
  2438  0407  3F00               	moviw [0]fsr0
  2439  0408  00D1               	movwf	??_vfpfcnvrt
  2440  0409  3F01               	moviw [1]fsr0
  2441  040A  00D2               	movwf	??_vfpfcnvrt+1
  2442  040B  0851               	movf	??_vfpfcnvrt,w
  2443  040C  00D6               	movwf	vfpfcnvrt@ll
  2444  040D  0852               	movf	??_vfpfcnvrt+1,w
  2445  040E  00D7               	movwf	vfpfcnvrt@ll+1
  2446  040F  0D89               	rlf	9,f
  2447  0410  3B89               	subwfb	9,f
  2448  0411  0989               	comf	9,f
  2449  0412  00D8               	movwf	vfpfcnvrt@ll+2
  2450  0413  00D9               	movwf	vfpfcnvrt@ll+3
  2451  0414  00DA               	movwf	vfpfcnvrt@ll+4
  2452  0415  00DB               	movwf	vfpfcnvrt@ll+5
  2453  0416  00DC               	movwf	vfpfcnvrt@ll+6
  2454  0417  00DD               	movwf	vfpfcnvrt@ll+7
  2455  0418                     l1556:	
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2458  0418  0856               	movf	vfpfcnvrt@ll,w
  2459  0419  00B1               	movwf	dtoa@d
  2460  041A  0857               	movf	vfpfcnvrt@ll+1,w
  2461  041B  00B2               	movwf	dtoa@d+1
  2462  041C  0858               	movf	vfpfcnvrt@ll+2,w
  2463  041D  00B3               	movwf	dtoa@d+2
  2464  041E  0859               	movf	vfpfcnvrt@ll+3,w
  2465  041F  00B4               	movwf	dtoa@d+3
  2466  0420  085A               	movf	vfpfcnvrt@ll+4,w
  2467  0421  00B5               	movwf	dtoa@d+4
  2468  0422  085B               	movf	vfpfcnvrt@ll+5,w
  2469  0423  00B6               	movwf	dtoa@d+5
  2470  0424  085C               	movf	vfpfcnvrt@ll+6,w
  2471  0425  00B7               	movwf	dtoa@d+6
  2472  0426  085D               	movf	vfpfcnvrt@ll+7,w
  2473  0427  00B8               	movwf	dtoa@d+7
  2474  0428  085E               	movf	vfpfcnvrt@fp,w
  2475  0429  3186  2676  3183   	fcall	_dtoa
  2476  042C  0020               	movlb	0	; select bank0
  2477  042D  0832               	movf	?_dtoa+1,w
  2478  042E  00D0               	movwf	?_vfpfcnvrt+1
  2479  042F  0831               	movf	?_dtoa,w
  2480  0430  00CF               	movwf	?_vfpfcnvrt
  2481  0431  2C8A               	goto	l343
  2482  0432                     l1560:	
  2483                           
  2484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2485  0432  084F               	movf	vfpfcnvrt@fmt,w
  2486  0433  0086               	movwf	6
  2487  0434  0187               	clrf	7
  2488  0435  3F40               	moviw [0]fsr1
  2489  0436  00D1               	movwf	??_vfpfcnvrt
  2490  0437  3F41               	moviw [1]fsr1
  2491  0438  00D2               	movwf	??_vfpfcnvrt+1
  2492  0439  0851               	movf	??_vfpfcnvrt,w
  2493  043A  0084               	movwf	4
  2494  043B  0852               	movf	??_vfpfcnvrt+1,w
  2495  043C  0085               	movwf	5
  2496  043D  0012               	moviw fsr0++
  2497  043E  3A25               	xorlw	37
  2498  043F  1D03               	btfss	3,2
  2499  0440  2C42               	goto	u1381
  2500  0441  2C43               	goto	u1380
  2501  0442                     u1381:	
  2502  0442  2C5C               	goto	l1570
  2503  0443                     u1380:	
  2504  0443                     l1562:	
  2505                           
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2507  0443  084F               	movf	vfpfcnvrt@fmt,w
  2508  0444  0086               	movwf	6
  2509  0445  0187               	clrf	7
  2510  0446  3001               	movlw	1
  2511  0447  0781               	addwf	1,f
  2512  0448  3141               	addfsr 1,1
  2513  0449  1803               	skipnc
  2514  044A  0A81               	incf	1,f
  2515  044B                     l1564:	
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2518  044B  3025               	movlw	37
  2519  044C  00F6               	movwf	fputc@c
  2520  044D  3000               	movlw	0
  2521  044E  00F7               	movwf	fputc@c+1
  2522  044F  085E               	movf	vfpfcnvrt@fp,w
  2523  0450  00D1               	movwf	??_vfpfcnvrt
  2524  0451  0851               	movf	??_vfpfcnvrt,w
  2525  0452  00F8               	movwf	fputc@fp
  2526  0453  3181  21F3  3183   	fcall	_fputc
  2527  0456                     l1566:	
  2528                           
  2529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2530  0456  3001               	movlw	1
  2531  0457  0020               	movlb	0	; select bank0
  2532  0458  00CF               	movwf	?_vfpfcnvrt
  2533  0459  3000               	movlw	0
  2534  045A  00D0               	movwf	?_vfpfcnvrt+1
  2535  045B  2C8A               	goto	l343
  2536  045C                     l1570:	
  2537                           
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2539  045C  084F               	movf	vfpfcnvrt@fmt,w
  2540  045D  0086               	movwf	6
  2541  045E  0187               	clrf	7
  2542  045F  3001               	movlw	1
  2543  0460  0781               	addwf	1,f
  2544  0461  3141               	addfsr 1,1
  2545  0462  1803               	skipnc
  2546  0463  0A81               	incf	1,f
  2547  0464                     l1572:	
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2550  0464  01CF               	clrf	?_vfpfcnvrt
  2551  0465  01D0               	clrf	?_vfpfcnvrt+1
  2552  0466  2C8A               	goto	l343
  2553  0467                     l1576:	
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2556  0467  084F               	movf	vfpfcnvrt@fmt,w
  2557  0468  0086               	movwf	6
  2558  0469  0187               	clrf	7
  2559  046A  3F40               	moviw [0]fsr1
  2560  046B  00D1               	movwf	??_vfpfcnvrt
  2561  046C  3F41               	moviw [1]fsr1
  2562  046D  00D2               	movwf	??_vfpfcnvrt+1
  2563  046E  0851               	movf	??_vfpfcnvrt,w
  2564  046F  0084               	movwf	4
  2565  0470  0852               	movf	??_vfpfcnvrt+1,w
  2566  0471  0085               	movwf	5
  2567  0472  0800               	movf	0,w	;code access
  2568  0473  00D3               	movwf	??_vfpfcnvrt+2
  2569  0474  01D4               	clrf	??_vfpfcnvrt+3
  2570  0475  0853               	movf	??_vfpfcnvrt+2,w
  2571  0476  00F6               	movwf	fputc@c
  2572  0477  0854               	movf	??_vfpfcnvrt+3,w
  2573  0478  00F7               	movwf	fputc@c+1
  2574  0479  085E               	movf	vfpfcnvrt@fp,w
  2575  047A  00D5               	movwf	??_vfpfcnvrt+4
  2576  047B  0855               	movf	??_vfpfcnvrt+4,w
  2577  047C  00F8               	movwf	fputc@fp
  2578  047D  3181  21F3  3183   	fcall	_fputc
  2579  0480                     l1578:	
  2580                           
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2582  0480  0020               	movlb	0	; select bank0
  2583  0481  084F               	movf	vfpfcnvrt@fmt,w
  2584  0482  0086               	movwf	6
  2585  0483  0187               	clrf	7
  2586  0484  3001               	movlw	1
  2587  0485  0781               	addwf	1,f
  2588  0486  3141               	addfsr 1,1
  2589  0487  1803               	skipnc
  2590  0488  0A81               	incf	1,f
  2591  0489  2C56               	goto	l1566
  2592  048A                     l343:	
  2593  048A  0008               	return
  2594  048B                     __end_of_vfpfcnvrt:	
  2595                           
  2596                           	psect	text14
  2597  0676                     __ptext14:	
  2598 ;; *************** function _dtoa *****************
  2599 ;; Defined at:
  2600 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  fp              1    wreg     PTR struct _IO_FILE
  2603 ;;		 -> NULL(0), 
  2604 ;;  d               8   17[BANK0 ] long long 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  fp              1   32[BANK0 ] PTR struct _IO_FILE
  2607 ;;		 -> NULL(0), 
  2608 ;;  n               8   37[BANK0 ] long long 
  2609 ;;  i               2   45[BANK0 ] int 
  2610 ;;  s               2   35[BANK0 ] int 
  2611 ;;  w               2   33[BANK0 ] int 
  2612 ;;  p               2   30[BANK0 ] int 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2   17[BANK0 ] int 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2622 ;;      Params:         0       8       0       0       0       0
  2623 ;;      Locals:         0      19       0       0       0       0
  2624 ;;      Temps:          0       3       0       0       0       0
  2625 ;;      Totals:         0      30       0       0       0       0
  2626 ;;Total ram usage:       30 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    7
  2629 ;; This function calls:
  2630 ;;		___aodiv
  2631 ;;		___aomod
  2632 ;;		_abs
  2633 ;;		_pad
  2634 ;; This function is called by:
  2635 ;;		_vfpfcnvrt
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _dtoa
  2641  0676                     _dtoa:	
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2645                           ;dtoa@fp stored from wreg
  2646  0676  0020               	movlb	0	; select bank0
  2647  0677  00C0               	movwf	dtoa@fp
  2648  0678                     l1482:	
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2651  0678  0831               	movf	dtoa@d,w
  2652  0679  00C5               	movwf	dtoa@n
  2653  067A  0832               	movf	dtoa@d+1,w
  2654  067B  00C6               	movwf	dtoa@n+1
  2655  067C  0833               	movf	dtoa@d+2,w
  2656  067D  00C7               	movwf	dtoa@n+2
  2657  067E  0834               	movf	dtoa@d+3,w
  2658  067F  00C8               	movwf	dtoa@n+3
  2659  0680  0835               	movf	dtoa@d+4,w
  2660  0681  00C9               	movwf	dtoa@n+4
  2661  0682  0836               	movf	dtoa@d+5,w
  2662  0683  00CA               	movwf	dtoa@n+5
  2663  0684  0837               	movf	dtoa@d+6,w
  2664  0685  00CB               	movwf	dtoa@n+6
  2665  0686  0838               	movf	dtoa@d+7,w
  2666  0687  00CC               	movwf	dtoa@n+7
  2667  0688                     l1484:	
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2670  0688  3045               	movlw	low dtoa@n
  2671  0689  0086               	movwf	6
  2672  068A  3000               	movlw	high dtoa@n
  2673  068B  0087               	movwf	7
  2674  068C  3F47               	moviw [7]fsr1
  2675  068D  00B9               	movwf	??_dtoa
  2676  068E  1BB9               	btfsc	??_dtoa,7
  2677  068F  2E91               	goto	u1191
  2678  0690  2E93               	goto	u1190
  2679  0691                     u1191:	
  2680  0691  3001               	movlw	1
  2681  0692  2E94               	goto	u1200
  2682  0693                     u1190:	
  2683  0693  3000               	movlw	0
  2684  0694                     u1200:	
  2685  0694  0020               	movlb	0	; select bank0
  2686  0695  00BA               	movwf	??_dtoa+1
  2687  0696  01BB               	clrf	??_dtoa+2
  2688  0697  083A               	movf	??_dtoa+1,w
  2689  0698  00C3               	movwf	dtoa@s
  2690  0699  083B               	movf	??_dtoa+2,w
  2691  069A  00C4               	movwf	dtoa@s+1
  2692  069B                     l1486:	
  2693                           
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2695  069B  0843               	movf	dtoa@s,w
  2696  069C  0444               	iorwf	dtoa@s+1,w
  2697  069D  1903               	btfsc	3,2
  2698  069E  2EA0               	goto	u1211
  2699  069F  2EA1               	goto	u1210
  2700  06A0                     u1211:	
  2701  06A0  2EBF               	goto	l313
  2702  06A1                     u1210:	
  2703  06A1                     l1488:	
  2704                           
  2705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2706  06A1  09C5               	comf	dtoa@n,f
  2707  06A2  09C6               	comf	dtoa@n+1,f
  2708  06A3  09C7               	comf	dtoa@n+2,f
  2709  06A4  09C8               	comf	dtoa@n+3,f
  2710  06A5  09C9               	comf	dtoa@n+4,f
  2711  06A6  09CA               	comf	dtoa@n+5,f
  2712  06A7  09CB               	comf	dtoa@n+6,f
  2713  06A8  09CC               	comf	dtoa@n+7,f
  2714  06A9  0AC5               	incf	dtoa@n,f
  2715  06AA  1D03               	skipz
  2716  06AB  2EBF               	goto	u122lld
  2717  06AC  0AC6               	incf	dtoa@n+1,f
  2718  06AD  1D03               	skipz
  2719  06AE  2EBF               	goto	u122lld
  2720  06AF  0AC7               	incf	dtoa@n+2,f
  2721  06B0  1D03               	skipz
  2722  06B1  2EBF               	goto	u122lld
  2723  06B2  0AC8               	incf	dtoa@n+3,f
  2724  06B3  1D03               	skipz
  2725  06B4  2EBF               	goto	u122lld
  2726  06B5  0AC9               	incf	dtoa@n+4,f
  2727  06B6  1D03               	skipz
  2728  06B7  2EBF               	goto	u122lld
  2729  06B8  0ACA               	incf	dtoa@n+5,f
  2730  06B9  1D03               	skipz
  2731  06BA  2EBF               	goto	u122lld
  2732  06BB  0ACB               	incf	dtoa@n+6,f
  2733  06BC  1D03               	skipz
  2734  06BD  2EBF               	goto	u122lld
  2735  06BE  0ACC               	incf	dtoa@n+7,f
  2736  06BF                     u122lld:	
  2737  06BF                     l313:	
  2738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2739                           
  2740                           
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2742  06BF  0021               	movlb	1	; select bank1
  2743  06C0  1BA5               	btfsc	(_prec+1)^(0+128),7
  2744  06C1  2EC3               	goto	u1231
  2745  06C2  2EC4               	goto	u1230
  2746  06C3                     u1231:	
  2747  06C3  2EC8               	goto	l314
  2748  06C4                     u1230:	
  2749  06C4                     l1490:	
  2750                           
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2752  06C4  30FD               	movlw	253
  2753  06C5  05A6               	andwf	_flags^(0+128),f
  2754  06C6  30FF               	movlw	255
  2755  06C7  05A7               	andwf	(_flags+1)^(0+128),f
  2756  06C8                     l314:	
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2758                           
  2759                           
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2761  06C8  0825               	movf	(_prec+1)^(0+128),w
  2762  06C9  3A80               	xorlw	128
  2763  06CA  0020               	movlb	0	; select bank0
  2764  06CB  00B9               	movwf	??_dtoa
  2765  06CC  3080               	movlw	128
  2766  06CD  0239               	subwf	??_dtoa,w
  2767  06CE  1D03               	skipz
  2768  06CF  2ED3               	goto	u1245
  2769  06D0  3001               	movlw	1
  2770  06D1  0021               	movlb	1	; select bank1
  2771  06D2  0224               	subwf	_prec^(0+128),w
  2772  06D3                     u1245:	
  2773  06D3  1803               	skipnc
  2774  06D4  2ED6               	goto	u1241
  2775  06D5  2ED7               	goto	u1240
  2776  06D6                     u1241:	
  2777  06D6  2EDD               	goto	l1494
  2778  06D7                     u1240:	
  2779  06D7                     l1492:	
  2780  06D7  3001               	movlw	1
  2781  06D8  0020               	movlb	0	; select bank0
  2782  06D9  00BE               	movwf	dtoa@p
  2783  06DA  3000               	movlw	0
  2784  06DB  00BF               	movwf	dtoa@p+1
  2785  06DC  2EE5               	goto	l318
  2786  06DD                     l1494:	
  2787  06DD  0021               	movlb	1	; select bank1
  2788  06DE  0825               	movf	(_prec+1)^(0+128),w
  2789  06DF  0020               	movlb	0	; select bank0
  2790  06E0  00BF               	movwf	dtoa@p+1
  2791  06E1  0021               	movlb	1	; select bank1
  2792  06E2  0824               	movf	_prec^(0+128),w
  2793  06E3  0020               	movlb	0	; select bank0
  2794  06E4  00BE               	movwf	dtoa@p
  2795  06E5                     l318:	
  2796                           
  2797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2798  06E5  0021               	movlb	1	; select bank1
  2799  06E6  0823               	movf	(_width+1)^(0+128),w
  2800  06E7  0020               	movlb	0	; select bank0
  2801  06E8  00C2               	movwf	dtoa@w+1
  2802  06E9  0021               	movlb	1	; select bank1
  2803  06EA  0822               	movf	_width^(0+128),w
  2804  06EB  0020               	movlb	0	; select bank0
  2805  06EC  00C1               	movwf	dtoa@w
  2806  06ED                     l1496:	
  2807                           
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2809  06ED  0843               	movf	dtoa@s,w
  2810  06EE  0444               	iorwf	dtoa@s+1,w
  2811  06EF  1D03               	btfss	3,2
  2812  06F0  2EF2               	goto	u1251
  2813  06F1  2EF3               	goto	u1250
  2814  06F2                     u1251:	
  2815  06F2  2EF8               	goto	l1500
  2816  06F3                     u1250:	
  2817  06F3                     l1498:	
  2818  06F3  0021               	movlb	1	; select bank1
  2819  06F4  1D26               	btfss	_flags^(0+128),2
  2820  06F5  2EF7               	goto	u1261
  2821  06F6  2EF8               	goto	u1260
  2822  06F7                     u1261:	
  2823  06F7  2EFD               	goto	l319
  2824  06F8                     u1260:	
  2825  06F8                     l1500:	
  2826                           
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2828  06F8  30FF               	movlw	255
  2829  06F9  0020               	movlb	0	; select bank0
  2830  06FA  07C1               	addwf	dtoa@w,f
  2831  06FB  30FF               	movlw	255
  2832  06FC  3DC2               	addwfc	dtoa@w+1,f
  2833  06FD                     l319:	
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2835                           
  2836                           
  2837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2838  06FD  301F               	movlw	31
  2839  06FE  0020               	movlb	0	; select bank0
  2840  06FF  00CD               	movwf	dtoa@i
  2841  0700  3000               	movlw	0
  2842  0701  00CE               	movwf	dtoa@i+1
  2843  0702                     l1502:	
  2844                           
  2845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2846  0702  0021               	movlb	1	; select bank1
  2847  0703  01C7               	clrf	(_dbuf^(0+128)+31)
  2848                           
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2850  0704  2F6D               	goto	l322
  2851  0705                     l1504:	
  2852                           
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2854  0705  30FF               	movlw	255
  2855  0706  0020               	movlb	0	; select bank0
  2856  0707  07CD               	addwf	dtoa@i,f
  2857  0708  30FF               	movlw	255
  2858  0709  3DCE               	addwfc	dtoa@i+1,f
  2859  070A                     l1506:	
  2860                           
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2862  070A  300A               	movlw	10
  2863  070B  00A0               	movwf	___aomod@divisor
  2864  070C  01A1               	clrf	___aomod@divisor+1
  2865  070D  01A2               	clrf	___aomod@divisor+2
  2866  070E  01A3               	clrf	___aomod@divisor+3
  2867  070F  01A4               	clrf	___aomod@divisor+4
  2868  0710  01A5               	clrf	___aomod@divisor+5
  2869  0711  01A6               	clrf	___aomod@divisor+6
  2870  0712  01A7               	clrf	___aomod@divisor+7
  2871  0713  0845               	movf	dtoa@n,w
  2872  0714  00A8               	movwf	___aomod@dividend
  2873  0715  0846               	movf	dtoa@n+1,w
  2874  0716  00A9               	movwf	___aomod@dividend+1
  2875  0717  0847               	movf	dtoa@n+2,w
  2876  0718  00AA               	movwf	___aomod@dividend+2
  2877  0719  0848               	movf	dtoa@n+3,w
  2878  071A  00AB               	movwf	___aomod@dividend+3
  2879  071B  0849               	movf	dtoa@n+4,w
  2880  071C  00AC               	movwf	___aomod@dividend+4
  2881  071D  084A               	movf	dtoa@n+5,w
  2882  071E  00AD               	movwf	___aomod@dividend+5
  2883  071F  084B               	movf	dtoa@n+6,w
  2884  0720  00AE               	movwf	___aomod@dividend+6
  2885  0721  084C               	movf	dtoa@n+7,w
  2886  0722  00AF               	movwf	___aomod@dividend+7
  2887  0723  3184  248B  3186   	fcall	___aomod
  2888  0726  0020               	movlb	0	; select bank0
  2889  0727  0821               	movf	?___aomod+1,w
  2890  0728  00F4               	movwf	abs@a+1
  2891  0729  0820               	movf	?___aomod,w
  2892  072A  00F3               	movwf	abs@a
  2893  072B  3180  20CD  3186   	fcall	_abs
  2894  072E  0873               	movf	?_abs,w
  2895  072F  3E30               	addlw	48
  2896  0730  0020               	movlb	0	; select bank0
  2897  0731  00B9               	movwf	??_dtoa
  2898  0732  084D               	movf	dtoa@i,w
  2899  0733  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2900  0734  0086               	movwf	6
  2901  0735  0187               	clrf	7
  2902  0736  0839               	movf	??_dtoa,w
  2903  0737  0081               	movwf	1
  2904  0738                     l1508:	
  2905                           
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2907  0738  30FF               	movlw	255
  2908  0739  07BE               	addwf	dtoa@p,f
  2909  073A  30FF               	movlw	255
  2910  073B  3DBF               	addwfc	dtoa@p+1,f
  2911  073C                     l1510:	
  2912                           
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2914  073C  30FF               	movlw	255
  2915  073D  07C1               	addwf	dtoa@w,f
  2916  073E  30FF               	movlw	255
  2917  073F  3DC2               	addwfc	dtoa@w+1,f
  2918  0740                     l1512:	
  2919                           
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2921  0740  300A               	movlw	10
  2922  0741  00A0               	movwf	___aodiv@divisor
  2923  0742  01A1               	clrf	___aodiv@divisor+1
  2924  0743  01A2               	clrf	___aodiv@divisor+2
  2925  0744  01A3               	clrf	___aodiv@divisor+3
  2926  0745  01A4               	clrf	___aodiv@divisor+4
  2927  0746  01A5               	clrf	___aodiv@divisor+5
  2928  0747  01A6               	clrf	___aodiv@divisor+6
  2929  0748  01A7               	clrf	___aodiv@divisor+7
  2930  0749  0845               	movf	dtoa@n,w
  2931  074A  00A8               	movwf	___aodiv@dividend
  2932  074B  0846               	movf	dtoa@n+1,w
  2933  074C  00A9               	movwf	___aodiv@dividend+1
  2934  074D  0847               	movf	dtoa@n+2,w
  2935  074E  00AA               	movwf	___aodiv@dividend+2
  2936  074F  0848               	movf	dtoa@n+3,w
  2937  0750  00AB               	movwf	___aodiv@dividend+3
  2938  0751  0849               	movf	dtoa@n+4,w
  2939  0752  00AC               	movwf	___aodiv@dividend+4
  2940  0753  084A               	movf	dtoa@n+5,w
  2941  0754  00AD               	movwf	___aodiv@dividend+5
  2942  0755  084B               	movf	dtoa@n+6,w
  2943  0756  00AE               	movwf	___aodiv@dividend+6
  2944  0757  084C               	movf	dtoa@n+7,w
  2945  0758  00AF               	movwf	___aodiv@dividend+7
  2946  0759  3185  2575  3186   	fcall	___aodiv
  2947  075C  0020               	movlb	0	; select bank0
  2948  075D  0820               	movf	?___aodiv,w
  2949  075E  00C5               	movwf	dtoa@n
  2950  075F  0821               	movf	?___aodiv+1,w
  2951  0760  00C6               	movwf	dtoa@n+1
  2952  0761  0822               	movf	?___aodiv+2,w
  2953  0762  00C7               	movwf	dtoa@n+2
  2954  0763  0823               	movf	?___aodiv+3,w
  2955  0764  00C8               	movwf	dtoa@n+3
  2956  0765  0824               	movf	?___aodiv+4,w
  2957  0766  00C9               	movwf	dtoa@n+4
  2958  0767  0825               	movf	?___aodiv+5,w
  2959  0768  00CA               	movwf	dtoa@n+5
  2960  0769  0826               	movf	?___aodiv+6,w
  2961  076A  00CB               	movwf	dtoa@n+6
  2962  076B  0827               	movf	?___aodiv+7,w
  2963  076C  00CC               	movwf	dtoa@n+7
  2964  076D                     l322:	
  2965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2966                           
  2967                           
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2969  076D  0020               	movlb	0	; select bank0
  2970  076E  084E               	movf	dtoa@i+1,w
  2971  076F  3A80               	xorlw	128
  2972  0770  00B9               	movwf	??_dtoa
  2973  0771  3080               	movlw	128
  2974  0772  0239               	subwf	??_dtoa,w
  2975  0773  1D03               	skipz
  2976  0774  2F77               	goto	u1275
  2977  0775  3001               	movlw	1
  2978  0776  024D               	subwf	dtoa@i,w
  2979  0777                     u1275:	
  2980  0777  1C03               	skipc
  2981  0778  2F7A               	goto	u1271
  2982  0779  2F7B               	goto	u1270
  2983  077A                     u1271:	
  2984  077A  2FA8               	goto	l1522
  2985  077B                     u1270:	
  2986  077B                     l1514:	
  2987  077B  0020               	movlb	0	; select bank0
  2988  077C  0845               	movf	dtoa@n,w
  2989  077D  0446               	iorwf	dtoa@n+1,w
  2990  077E  0447               	iorwf	dtoa@n+2,w
  2991  077F  0448               	iorwf	dtoa@n+3,w
  2992  0780  0449               	iorwf	dtoa@n+4,w
  2993  0781  044A               	iorwf	dtoa@n+5,w
  2994  0782  044B               	iorwf	dtoa@n+6,w
  2995  0783  044C               	iorwf	dtoa@n+7,w
  2996  0784  1D03               	skipz
  2997  0785  2F87               	goto	u1281
  2998  0786  2F88               	goto	u1280
  2999  0787                     u1281:	
  3000  0787  2F05               	goto	l1504
  3001  0788                     u1280:	
  3002  0788                     l1516:	
  3003  0788  083F               	movf	dtoa@p+1,w
  3004  0789  3A80               	xorlw	128
  3005  078A  00B9               	movwf	??_dtoa
  3006  078B  3080               	movlw	128
  3007  078C  0239               	subwf	??_dtoa,w
  3008  078D  1D03               	skipz
  3009  078E  2F91               	goto	u1295
  3010  078F  3001               	movlw	1
  3011  0790  023E               	subwf	dtoa@p,w
  3012  0791                     u1295:	
  3013  0791  1803               	skipnc
  3014  0792  2F94               	goto	u1291
  3015  0793  2F95               	goto	u1290
  3016  0794                     u1291:	
  3017  0794  2F05               	goto	l1504
  3018  0795                     u1290:	
  3019  0795                     l1518:	
  3020  0795  0020               	movlb	0	; select bank0
  3021  0796  0842               	movf	dtoa@w+1,w
  3022  0797  3A80               	xorlw	128
  3023  0798  00B9               	movwf	??_dtoa
  3024  0799  3080               	movlw	128
  3025  079A  0239               	subwf	??_dtoa,w
  3026  079B  1D03               	skipz
  3027  079C  2F9F               	goto	u1305
  3028  079D  3001               	movlw	1
  3029  079E  0241               	subwf	dtoa@w,w
  3030  079F                     u1305:	
  3031  079F  1C03               	skipc
  3032  07A0  2FA2               	goto	u1301
  3033  07A1  2FA3               	goto	u1300
  3034  07A2                     u1301:	
  3035  07A2  2FA8               	goto	l1522
  3036  07A3                     u1300:	
  3037  07A3                     l1520:	
  3038  07A3  0021               	movlb	1	; select bank1
  3039  07A4  18A6               	btfsc	_flags^(0+128),1
  3040  07A5  2FA7               	goto	u1311
  3041  07A6  2FA8               	goto	u1310
  3042  07A7                     u1311:	
  3043  07A7  2F05               	goto	l1504
  3044  07A8                     u1310:	
  3045  07A8                     l1522:	
  3046                           
  3047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3048  07A8  0020               	movlb	0	; select bank0
  3049  07A9  0843               	movf	dtoa@s,w
  3050  07AA  0444               	iorwf	dtoa@s+1,w
  3051  07AB  1D03               	btfss	3,2
  3052  07AC  2FAE               	goto	u1321
  3053  07AD  2FAF               	goto	u1320
  3054  07AE                     u1321:	
  3055  07AE  2FB4               	goto	l1526
  3056  07AF                     u1320:	
  3057  07AF                     l1524:	
  3058  07AF  0021               	movlb	1	; select bank1
  3059  07B0  1D26               	btfss	_flags^(0+128),2
  3060  07B1  2FB3               	goto	u1331
  3061  07B2  2FB4               	goto	u1330
  3062  07B3                     u1331:	
  3063  07B3  2FD0               	goto	l1536
  3064  07B4                     u1330:	
  3065  07B4                     l1526:	
  3066                           
  3067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3068  07B4  30FF               	movlw	255
  3069  07B5  0020               	movlb	0	; select bank0
  3070  07B6  07CD               	addwf	dtoa@i,f
  3071  07B7  30FF               	movlw	255
  3072  07B8  3DCE               	addwfc	dtoa@i+1,f
  3073  07B9                     l1528:	
  3074                           
  3075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3076  07B9  0843               	movf	dtoa@s,w
  3077  07BA  0444               	iorwf	dtoa@s+1,w
  3078  07BB  1D03               	btfss	3,2
  3079  07BC  2FBE               	goto	u1341
  3080  07BD  2FBF               	goto	u1340
  3081  07BE                     u1341:	
  3082  07BE  2FC4               	goto	l1532
  3083  07BF                     u1340:	
  3084  07BF                     l1530:	
  3085  07BF  302B               	movlw	43
  3086  07C0  00BC               	movwf	_dtoa$403
  3087  07C1  3000               	movlw	0
  3088  07C2  00BD               	movwf	_dtoa$403+1
  3089  07C3  2FC8               	goto	l1534
  3090  07C4                     l1532:	
  3091  07C4  302D               	movlw	45
  3092  07C5  00BC               	movwf	_dtoa$403
  3093  07C6  3000               	movlw	0
  3094  07C7  00BD               	movwf	_dtoa$403+1
  3095  07C8                     l1534:	
  3096  07C8  083C               	movf	_dtoa$403,w
  3097  07C9  00B9               	movwf	??_dtoa
  3098  07CA  084D               	movf	dtoa@i,w
  3099  07CB  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  3100  07CC  0086               	movwf	6
  3101  07CD  0187               	clrf	7
  3102  07CE  0839               	movf	??_dtoa,w
  3103  07CF  0081               	movwf	1
  3104  07D0                     l1536:	
  3105                           
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3107  07D0  0020               	movlb	0	; select bank0
  3108  07D1  084D               	movf	dtoa@i,w
  3109  07D2  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  3110  07D3  00B9               	movwf	??_dtoa
  3111  07D4  0839               	movf	??_dtoa,w
  3112  07D5  00A8               	movwf	pad@buf
  3113  07D6  0842               	movf	dtoa@w+1,w
  3114  07D7  00AA               	movwf	pad@p+1
  3115  07D8  0841               	movf	dtoa@w,w
  3116  07D9  00A9               	movwf	pad@p
  3117  07DA  0840               	movf	dtoa@fp,w
  3118  07DB  3182  2232  3186   	fcall	_pad
  3119  07DE  0020               	movlb	0	; select bank0
  3120  07DF  0829               	movf	?_pad+1,w
  3121  07E0  00B2               	movwf	?_dtoa+1
  3122  07E1  0828               	movf	?_pad,w
  3123  07E2  00B1               	movwf	?_dtoa
  3124  07E3                     l336:	
  3125  07E3  0008               	return
  3126  07E4                     __end_of_dtoa:	
  3127                           
  3128                           	psect	text15
  3129  0232                     __ptext15:	
  3130 ;; *************** function _pad *****************
  3131 ;; Defined at:
  3132 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  fp              1    wreg     PTR struct _IO_FILE
  3135 ;;		 -> NULL(0), 
  3136 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  3137 ;;		 -> dbuf(32), 
  3138 ;;  p               2    9[BANK0 ] int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  3141 ;;		 -> NULL(0), 
  3142 ;;  w               2   14[BANK0 ] int 
  3143 ;;  i               2   12[BANK0 ] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    8[BANK0 ] int 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3153 ;;      Params:         0       3       0       0       0       0
  3154 ;;      Locals:         0       5       0       0       0       0
  3155 ;;      Temps:          0       1       0       0       0       0
  3156 ;;      Totals:         0       9       0       0       0       0
  3157 ;;Total ram usage:        9 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    6
  3160 ;; This function calls:
  3161 ;;		_fputc
  3162 ;;		_fputs
  3163 ;;		_strlen
  3164 ;; This function is called by:
  3165 ;;		_dtoa
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _pad
  3171  0232                     _pad:	
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3175                           ;pad@fp stored from wreg
  3176  0232  0020               	movlb	0	; select bank0
  3177  0233  00B0               	movwf	pad@fp
  3178  0234                     l1390:	
  3179                           
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3181  0234  0021               	movlb	1	; select bank1
  3182  0235  1C26               	btfss	_flags^(0+128),0
  3183  0236  2A38               	goto	u931
  3184  0237  2A39               	goto	u930
  3185  0238                     u931:	
  3186  0238  2A42               	goto	l1394
  3187  0239                     u930:	
  3188  0239                     l1392:	
  3189                           
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3191  0239  0020               	movlb	0	; select bank0
  3192  023A  0830               	movf	pad@fp,w
  3193  023B  00AB               	movwf	??_pad
  3194  023C  082B               	movf	??_pad,w
  3195  023D  00A0               	movwf	fputs@fp
  3196  023E  0828               	movf	pad@buf,w
  3197  023F  3181  2106  3182   	fcall	_fputs
  3198  0242                     l1394:	
  3199                           
  3200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3201  0242  0020               	movlb	0	; select bank0
  3202  0243  1BAA               	btfsc	pad@p+1,7
  3203  0244  2A46               	goto	u941
  3204  0245  2A47               	goto	u940
  3205  0246                     u941:	
  3206  0246  2A4C               	goto	l1398
  3207  0247                     u940:	
  3208  0247                     l1396:	
  3209  0247  082A               	movf	pad@p+1,w
  3210  0248  00AF               	movwf	pad@w+1
  3211  0249  0829               	movf	pad@p,w
  3212  024A  00AE               	movwf	pad@w
  3213  024B  2A4E               	goto	l305
  3214  024C                     l1398:	
  3215  024C  01AE               	clrf	pad@w
  3216  024D  01AF               	clrf	pad@w+1
  3217  024E                     l305:	
  3218                           
  3219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3220  024E  01AC               	clrf	pad@i
  3221  024F  01AD               	clrf	pad@i+1
  3222                           
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3224  0250  2A62               	goto	l1404
  3225  0251                     l1400:	
  3226                           
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3228  0251  3020               	movlw	32
  3229  0252  00F6               	movwf	fputc@c
  3230  0253  3000               	movlw	0
  3231  0254  00F7               	movwf	fputc@c+1
  3232  0255  0020               	movlb	0	; select bank0
  3233  0256  0830               	movf	pad@fp,w
  3234  0257  00AB               	movwf	??_pad
  3235  0258  082B               	movf	??_pad,w
  3236  0259  00F8               	movwf	fputc@fp
  3237  025A  3181  21F3  3182   	fcall	_fputc
  3238  025D                     l1402:	
  3239                           
  3240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3241  025D  3001               	movlw	1
  3242  025E  0020               	movlb	0	; select bank0
  3243  025F  07AC               	addwf	pad@i,f
  3244  0260  3000               	movlw	0
  3245  0261  3DAD               	addwfc	pad@i+1,f
  3246  0262                     l1404:	
  3247                           
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3249  0262  082D               	movf	pad@i+1,w
  3250  0263  3A80               	xorlw	128
  3251  0264  00AB               	movwf	??_pad
  3252  0265  082F               	movf	pad@w+1,w
  3253  0266  3A80               	xorlw	128
  3254  0267  022B               	subwf	??_pad,w
  3255  0268  1D03               	skipz
  3256  0269  2A6C               	goto	u955
  3257  026A  082E               	movf	pad@w,w
  3258  026B  022C               	subwf	pad@i,w
  3259  026C                     u955:	
  3260  026C  1C03               	skipc
  3261  026D  2A6F               	goto	u951
  3262  026E  2A70               	goto	u950
  3263  026F                     u951:	
  3264  026F  2A51               	goto	l1400
  3265  0270                     u950:	
  3266  0270                     l308:	
  3267                           
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3269  0270  0021               	movlb	1	; select bank1
  3270  0271  1826               	btfsc	_flags^(0+128),0
  3271  0272  2A74               	goto	u961
  3272  0273  2A75               	goto	u960
  3273  0274                     u961:	
  3274  0274  2A7E               	goto	l309
  3275  0275                     u960:	
  3276  0275                     l1406:	
  3277                           
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3279  0275  0020               	movlb	0	; select bank0
  3280  0276  0830               	movf	pad@fp,w
  3281  0277  00AB               	movwf	??_pad
  3282  0278  082B               	movf	??_pad,w
  3283  0279  00A0               	movwf	fputs@fp
  3284  027A  0828               	movf	pad@buf,w
  3285  027B  3181  2106  3182   	fcall	_fputs
  3286  027E                     l309:	
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 92:     }
  3288                           
  3289                           
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3291  027E  0020               	movlb	0	; select bank0
  3292  027F  0828               	movf	pad@buf,w
  3293  0280  3180  2082  3182   	fcall	_strlen
  3294  0283  0020               	movlb	0	; select bank0
  3295  0284  082E               	movf	pad@w,w
  3296  0285  0770               	addwf	?_strlen,w
  3297  0286  00A8               	movwf	?_pad
  3298  0287  082F               	movf	pad@w+1,w
  3299  0288  3D71               	addwfc	?_strlen+1,w
  3300  0289  00A9               	movwf	?_pad+1
  3301  028A                     l310:	
  3302  028A  0008               	return
  3303  028B                     __end_of_pad:	
  3304                           
  3305                           	psect	text16
  3306  0082                     __ptext16:	
  3307 ;; *************** function _strlen *****************
  3308 ;; Defined at:
  3309 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  s               1    wreg     PTR const unsigned char 
  3312 ;;		 -> dbuf(32), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  s               1    4[COMMON] PTR const unsigned char 
  3315 ;;		 -> dbuf(32), 
  3316 ;;  a               1    3[COMMON] PTR const unsigned char 
  3317 ;;		 -> dbuf(32), 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2    0[COMMON] unsigned int 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3327 ;;      Params:         2       0       0       0       0       0
  3328 ;;      Locals:         2       0       0       0       0       0
  3329 ;;      Temps:          1       0       0       0       0       0
  3330 ;;      Totals:         5       0       0       0       0       0
  3331 ;;Total ram usage:        5 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_pad
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _strlen
  3342  0082                     _strlen:	
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3346                           ;strlen@s stored from wreg
  3347  0082  00F4               	movwf	strlen@s
  3348  0083                     l1380:	
  3349  0083  0874               	movf	strlen@s,w
  3350  0084  00F2               	movwf	??_strlen
  3351  0085  0872               	movf	??_strlen,w
  3352  0086  00F3               	movwf	strlen@a
  3353  0087  288C               	goto	l1384
  3354  0088                     l1382:	
  3355  0088  3001               	movlw	1
  3356  0089  00F2               	movwf	??_strlen
  3357  008A  0872               	movf	??_strlen,w
  3358  008B  07F4               	addwf	strlen@s,f
  3359  008C                     l1384:	
  3360  008C  0874               	movf	strlen@s,w
  3361  008D  0086               	movwf	6
  3362  008E  0187               	clrf	7
  3363  008F  0801               	movf	1,w
  3364  0090  1D03               	btfss	3,2
  3365  0091  2893               	goto	u921
  3366  0092  2894               	goto	u920
  3367  0093                     u921:	
  3368  0093  2888               	goto	l1382
  3369  0094                     u920:	
  3370  0094                     l1386:	
  3371  0094  0873               	movf	strlen@a,w
  3372  0095  0274               	subwf	strlen@s,w
  3373  0096  00F0               	movwf	?_strlen
  3374  0097  01F1               	clrf	?_strlen+1
  3375  0098  1BF0               	btfsc	?_strlen,7
  3376  0099  03F1               	decf	?_strlen+1,f
  3377  009A                     l844:	
  3378  009A  0008               	return
  3379  009B                     __end_of_strlen:	
  3380                           
  3381                           	psect	text17
  3382  0106                     __ptext17:	
  3383 ;; *************** function _fputs *****************
  3384 ;; Defined at:
  3385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  s               1    wreg     PTR const unsigned char 
  3388 ;;		 -> dbuf(32), 
  3389 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  3390 ;;		 -> NULL(0), 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  3393 ;;		 -> dbuf(32), 
  3394 ;;  i               2    5[BANK0 ] int 
  3395 ;;  c               1    4[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  2    0[BANK0 ] int 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3405 ;;      Params:         0       1       0       0       0       0
  3406 ;;      Locals:         0       4       0       0       0       0
  3407 ;;      Temps:          0       3       0       0       0       0
  3408 ;;      Totals:         0       8       0       0       0       0
  3409 ;;Total ram usage:        8 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    5
  3412 ;; This function calls:
  3413 ;;		_fputc
  3414 ;; This function is called by:
  3415 ;;		_pad
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _fputs
  3421  0106                     _fputs:	
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3425                           ;fputs@s stored from wreg
  3426  0106  0020               	movlb	0	; select bank0
  3427  0107  00A7               	movwf	fputs@s
  3428  0108                     l1372:	
  3429  0108  01A5               	clrf	fputs@i
  3430  0109  01A6               	clrf	fputs@i+1
  3431  010A  291E               	goto	l1378
  3432  010B                     l1374:	
  3433  010B  0824               	movf	fputs@c,w
  3434  010C  00A1               	movwf	??_fputs
  3435  010D  01A2               	clrf	??_fputs+1
  3436  010E  0821               	movf	??_fputs,w
  3437  010F  00F6               	movwf	fputc@c
  3438  0110  0822               	movf	??_fputs+1,w
  3439  0111  00F7               	movwf	fputc@c+1
  3440  0112  0820               	movf	fputs@fp,w
  3441  0113  00A3               	movwf	??_fputs+2
  3442  0114  0823               	movf	??_fputs+2,w
  3443  0115  00F8               	movwf	fputc@fp
  3444  0116  3181  21F3  3181   	fcall	_fputc
  3445  0119                     l1376:	
  3446  0119  3001               	movlw	1
  3447  011A  0020               	movlb	0	; select bank0
  3448  011B  07A5               	addwf	fputs@i,f
  3449  011C  3000               	movlw	0
  3450  011D  3DA6               	addwfc	fputs@i+1,f
  3451  011E                     l1378:	
  3452  011E  0825               	movf	fputs@i,w
  3453  011F  0727               	addwf	fputs@s,w
  3454  0120  00A1               	movwf	??_fputs
  3455  0121  0821               	movf	??_fputs,w
  3456  0122  0086               	movwf	6
  3457  0123  0187               	clrf	7
  3458  0124  0801               	movf	1,w
  3459  0125  00A2               	movwf	??_fputs+1
  3460  0126  0822               	movf	??_fputs+1,w
  3461  0127  00A4               	movwf	fputs@c
  3462  0128  0824               	movf	fputs@c,w
  3463  0129  1D03               	btfss	3,2
  3464  012A  292C               	goto	u911
  3465  012B  292D               	goto	u910
  3466  012C                     u911:	
  3467  012C  290B               	goto	l1374
  3468  012D                     u910:	
  3469  012D                     l831:	
  3470  012D  0008               	return
  3471  012E                     __end_of_fputs:	
  3472                           
  3473                           	psect	text18
  3474  01F3                     __ptext18:	
  3475 ;; *************** function _fputc *****************
  3476 ;; Defined at:
  3477 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  c               2    6[COMMON] int 
  3480 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3481 ;;		 -> NULL(0), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  2    6[COMMON] int 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3493 ;;      Params:         3       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0
  3495 ;;      Temps:          5       0       0       0       0       0
  3496 ;;      Totals:         8       0       0       0       0       0
  3497 ;;Total ram usage:        8 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    4
  3500 ;; This function calls:
  3501 ;;		_putch
  3502 ;; This function is called by:
  3503 ;;		_pad
  3504 ;;		_vfpfcnvrt
  3505 ;;		_fputs
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _fputc
  3511  01F3                     _fputc:	
  3512  01F3                     l1358:	
  3513                           ;incstack = 0
  3514                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3515                           
  3516  01F3  0878               	movf	fputc@fp,w
  3517  01F4  1903               	btfsc	3,2
  3518  01F5  29F7               	goto	u871
  3519  01F6  29F8               	goto	u870
  3520  01F7                     u871:	
  3521  01F7  29FD               	goto	l1362
  3522  01F8                     u870:	
  3523  01F8                     l1360:	
  3524  01F8  0878               	movf	fputc@fp,w
  3525  01F9  1D03               	btfss	3,2
  3526  01FA  29FC               	goto	u881
  3527  01FB  29FD               	goto	u880
  3528  01FC                     u881:	
  3529  01FC  2A02               	goto	l1364
  3530  01FD                     u880:	
  3531  01FD                     l1362:	
  3532  01FD  0876               	movf	fputc@c,w
  3533  01FE  318F  27D7  3181   	fcall	_putch
  3534  0201  2A31               	goto	l823
  3535  0202                     l1364:	
  3536  0202  0878               	movf	fputc@fp,w
  3537  0203  3E03               	addlw	3
  3538  0204  0086               	movwf	6
  3539  0205  0187               	clrf	7
  3540  0206  0016               	moviw fsr1++
  3541  0207  0401               	iorwf	1,w
  3542  0208  1903               	btfsc	3,2
  3543  0209  2A0B               	goto	u891
  3544  020A  2A0C               	goto	u890
  3545  020B                     u891:	
  3546  020B  2A29               	goto	l1368
  3547  020C                     u890:	
  3548  020C                     l1366:	
  3549  020C  0878               	movf	fputc@fp,w
  3550  020D  3E03               	addlw	3
  3551  020E  0086               	movwf	6
  3552  020F  0187               	clrf	7
  3553  0210  3F40               	moviw [0]fsr1
  3554  0211  00F9               	movwf	??_fputc
  3555  0212  3F41               	moviw [1]fsr1
  3556  0213  00FA               	movwf	??_fputc+1
  3557  0214  0A78               	incf	fputc@fp,w
  3558  0215  0086               	movwf	6
  3559  0216  0187               	clrf	7
  3560  0217  3F40               	moviw [0]fsr1
  3561  0218  00FB               	movwf	??_fputc+2
  3562  0219  3F41               	moviw [1]fsr1
  3563  021A  00FC               	movwf	??_fputc+3
  3564  021B  087C               	movf	??_fputc+3,w
  3565  021C  3A80               	xorlw	128
  3566  021D  00FD               	movwf	??_fputc+4
  3567  021E  087A               	movf	??_fputc+1,w
  3568  021F  3A80               	xorlw	128
  3569  0220  027D               	subwf	??_fputc+4,w
  3570  0221  1D03               	skipz
  3571  0222  2A25               	goto	u905
  3572  0223  0879               	movf	??_fputc,w
  3573  0224  027B               	subwf	??_fputc+2,w
  3574  0225                     u905:	
  3575  0225  1803               	skipnc
  3576  0226  2A28               	goto	u901
  3577  0227  2A29               	goto	u900
  3578  0228                     u901:	
  3579  0228  2A31               	goto	l823
  3580  0229                     u900:	
  3581  0229                     l1368:	
  3582  0229  0A78               	incf	fputc@fp,w
  3583  022A  0086               	movwf	6
  3584  022B  0187               	clrf	7
  3585  022C  3001               	movlw	1
  3586  022D  0781               	addwf	1,f
  3587  022E  3141               	addfsr 1,1
  3588  022F  1803               	skipnc
  3589  0230  0A81               	incf	1,f
  3590  0231                     l823:	
  3591  0231  0008               	return
  3592  0232                     __end_of_fputc:	
  3593                           
  3594                           	psect	text19
  3595  0FD7                     __ptext19:	
  3596 ;; *************** function _putch *****************
  3597 ;; Defined at:
  3598 ;;		line 133 in file "newfile.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  character       1    wreg     unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  character       1    5[COMMON] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3612 ;;      Params:         0       0       0       0       0       0
  3613 ;;      Locals:         1       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0
  3615 ;;      Totals:         1       0       0       0       0       0
  3616 ;;Total ram usage:        1 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    3
  3619 ;; This function calls:
  3620 ;;		_lcd_send_char
  3621 ;; This function is called by:
  3622 ;;		_fputc
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function _putch
  3628  0FD7                     _putch:	
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3632                           ;putch@character stored from wreg
  3633  0FD7  00F5               	movwf	putch@character
  3634  0FD8                     l1354:	
  3635                           
  3636                           ;newfile.c: 134:     lcd_send_char(character);
  3637  0FD8  0875               	movf	putch@character,w
  3638  0FD9  3180  2029  318F   	fcall	_lcd_send_char
  3639  0FDC                     l102:	
  3640  0FDC  0008               	return
  3641  0FDD                     __end_of_putch:	
  3642                           
  3643                           	psect	text20
  3644  0029                     __ptext20:	
  3645 ;; *************** function _lcd_send_char *****************
  3646 ;; Defined at:
  3647 ;;		line 108 in file "newfile.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  data            1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  data            1    4[COMMON] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2   92[None  ] int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3661 ;;      Params:         0       0       0       0       0       0
  3662 ;;      Locals:         1       0       0       0       0       0
  3663 ;;      Temps:          1       0       0       0       0       0
  3664 ;;      Totals:         2       0       0       0       0       0
  3665 ;;Total ram usage:        2 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    2
  3668 ;; This function calls:
  3669 ;;		_lcd_i2c
  3670 ;; This function is called by:
  3671 ;;		_putch
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _lcd_send_char
  3677  0029                     _lcd_send_char:	
  3678                           
  3679                           ;incstack = 0
  3680                           ; Regs used in _lcd_send_char: [wreg+status,2+status,0+pclath+cstack]
  3681                           ;lcd_send_char@data stored from wreg
  3682  0029  00F4               	movwf	lcd_send_char@data
  3683  002A                     l1348:	
  3684                           
  3685                           ;newfile.c: 109:     lcd_i2c(0x40,data);
  3686  002A  0874               	movf	lcd_send_char@data,w
  3687  002B  00F3               	movwf	??_lcd_send_char
  3688  002C  0873               	movf	??_lcd_send_char,w
  3689  002D  00F1               	movwf	lcd_i2c@data
  3690  002E  3040               	movlw	64
  3691  002F  3180  206E  3180   	fcall	_lcd_i2c
  3692  0032                     l1350:	
  3693                           
  3694                           ;newfile.c: 110:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3695  0032  3003               	movlw	3
  3696  0033  00F3               	movwf	??_lcd_send_char
  3697  0034  3098               	movlw	152
  3698  0035                     u1697:	
  3699  0035  0B89               	decfsz	9,f
  3700  0036  2835               	goto	u1697
  3701  0037  0BF3               	decfsz	??_lcd_send_char,f
  3702  0038  2835               	goto	u1697
  3703  0039                     l93:	
  3704  0039  0008               	return
  3705  003A                     __end_of_lcd_send_char:	
  3706                           
  3707                           	psect	text21
  3708  006E                     __ptext21:	
  3709 ;; *************** function _lcd_i2c *****************
  3710 ;; Defined at:
  3711 ;;		line 93 in file "newfile.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  con             1    wreg     unsigned char 
  3714 ;;  data            1    1[COMMON] unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  con             1    2[COMMON] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2    1[COMMON] int 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3726 ;;      Params:         1       0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0
  3729 ;;      Totals:         2       0       0       0       0       0
  3730 ;;Total ram usage:        2 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    1
  3733 ;; This function calls:
  3734 ;;		_i2c_send
  3735 ;;		_i2c_start
  3736 ;;		_i2c_stop
  3737 ;; This function is called by:
  3738 ;;		_lcd_send_com
  3739 ;;		_lcd_send_char
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _lcd_i2c
  3745  006E                     _lcd_i2c:	
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _lcd_i2c: [wreg+status,2+status,0+pclath+cstack]
  3749                           ;lcd_i2c@con stored from wreg
  3750  006E  00F2               	movwf	lcd_i2c@con
  3751  006F                     l1336:	
  3752                           
  3753                           ;newfile.c: 94:     i2c_start();
  3754  006F  318F  27DD  3180   	fcall	_i2c_start
  3755  0072                     l1338:	
  3756                           
  3757                           ;newfile.c: 95:     i2c_send(0x7c);
  3758  0072  307C               	movlw	124
  3759  0073  318F  27F3  3180   	fcall	_i2c_send
  3760  0076                     l1340:	
  3761                           
  3762                           ;newfile.c: 96:     i2c_send(con);
  3763  0076  0872               	movf	lcd_i2c@con,w
  3764  0077  318F  27F3  3180   	fcall	_i2c_send
  3765  007A                     l1342:	
  3766                           
  3767                           ;newfile.c: 97:     i2c_send(data);
  3768  007A  0871               	movf	lcd_i2c@data,w
  3769  007B  318F  27F3  3180   	fcall	_i2c_send
  3770  007E                     l1344:	
  3771                           
  3772                           ;newfile.c: 98:     i2c_stop();
  3773  007E  318F  27E8  3180   	fcall	_i2c_stop
  3774  0081                     l87:	
  3775  0081  0008               	return
  3776  0082                     __end_of_lcd_i2c:	
  3777                           
  3778                           	psect	text22
  3779  0FE8                     __ptext22:	
  3780 ;; *************** function _i2c_stop *****************
  3781 ;; Defined at:
  3782 ;;		line 62 in file "newfile.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2   69[None  ] int 
  3789 ;; Registers used:
  3790 ;;		None
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3796 ;;      Params:         0       0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_lcd_i2c
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _i2c_stop
  3811  0FE8                     _i2c_stop:	
  3812  0FE8                     l1330:	
  3813                           ;incstack = 0
  3814                           ; Regs used in _i2c_stop: []
  3815                           
  3816                           
  3817                           ;newfile.c: 63:     SSP1IF = 0;
  3818  0FE8  0020               	movlb	0	; select bank0
  3819  0FE9  1191               	bcf	17,3	;volatile
  3820                           
  3821                           ;newfile.c: 64:     SSPCON2bits.PEN = 1;
  3822  0FEA  0024               	movlb	4	; select bank4
  3823  0FEB  1516               	bsf	22,2	;volatile
  3824  0FEC                     l70:	
  3825                           ;newfile.c: 65:     while(SSP1IF == 0);
  3826                           
  3827  0FEC  0020               	movlb	0	; select bank0
  3828  0FED  1D91               	btfss	17,3	;volatile
  3829  0FEE  2FF0               	goto	u851
  3830  0FEF  2FF1               	goto	u850
  3831  0FF0                     u851:	
  3832  0FF0  2FEC               	goto	l70
  3833  0FF1                     u850:	
  3834  0FF1                     l72:	
  3835                           
  3836                           ;newfile.c: 66:     SSP1IF = 0;
  3837  0FF1  1191               	bcf	17,3	;volatile
  3838  0FF2                     l73:	
  3839                           ;newfile.c: 67:     return 0;;	Return value of _i2c_stop is never used
  3840                           
  3841  0FF2  0008               	return
  3842  0FF3                     __end_of_i2c_stop:	
  3843                           
  3844                           	psect	text23
  3845  0FDD                     __ptext23:	
  3846 ;; *************** function _i2c_start *****************
  3847 ;; Defined at:
  3848 ;;		line 54 in file "newfile.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  2   63[None  ] int 
  3855 ;; Registers used:
  3856 ;;		None
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3862 ;;      Params:         0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_lcd_i2c
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _i2c_start
  3877  0FDD                     _i2c_start:	
  3878  0FDD                     l1328:	
  3879                           ;incstack = 0
  3880                           ; Regs used in _i2c_start: []
  3881                           
  3882                           
  3883                           ;newfile.c: 55:     SSP1IF = 0;
  3884  0FDD  0020               	movlb	0	; select bank0
  3885  0FDE  1191               	bcf	17,3	;volatile
  3886                           
  3887                           ;newfile.c: 56:     SSPCON2bits.SEN = 1;
  3888  0FDF  0024               	movlb	4	; select bank4
  3889  0FE0  1416               	bsf	22,0	;volatile
  3890  0FE1                     l64:	
  3891                           ;newfile.c: 57:     while(SSP1IF == 0);
  3892                           
  3893  0FE1  0020               	movlb	0	; select bank0
  3894  0FE2  1D91               	btfss	17,3	;volatile
  3895  0FE3  2FE5               	goto	u841
  3896  0FE4  2FE6               	goto	u840
  3897  0FE5                     u841:	
  3898  0FE5  2FE1               	goto	l64
  3899  0FE6                     u840:	
  3900  0FE6                     l66:	
  3901                           
  3902                           ;newfile.c: 58:     SSP1IF = 0;
  3903  0FE6  1191               	bcf	17,3	;volatile
  3904  0FE7                     l67:	
  3905                           ;newfile.c: 59:     return 0;;	Return value of _i2c_start is never used
  3906                           
  3907  0FE7  0008               	return
  3908  0FE8                     __end_of_i2c_start:	
  3909                           
  3910                           	psect	text24
  3911  0FF3                     __ptext24:	
  3912 ;; *************** function _i2c_send *****************
  3913 ;; Defined at:
  3914 ;;		line 70 in file "newfile.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  data            1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  data            1    0[COMMON] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2   75[None  ] int 
  3921 ;; Registers used:
  3922 ;;		wreg
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3928 ;;      Params:         0       0       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0
  3931 ;;      Totals:         1       0       0       0       0       0
  3932 ;;Total ram usage:        1 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_lcd_i2c
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function _i2c_send
  3943  0FF3                     _i2c_send:	
  3944                           
  3945                           ;incstack = 0
  3946                           ; Regs used in _i2c_send: [wreg]
  3947                           ;i2c_send@data stored from wreg
  3948  0FF3  00F0               	movwf	i2c_send@data
  3949  0FF4                     l1332:	
  3950                           
  3951                           ;newfile.c: 71:     SSP1IF = 0;
  3952  0FF4  0020               	movlb	0	; select bank0
  3953  0FF5  1191               	bcf	17,3	;volatile
  3954  0FF6                     l1334:	
  3955                           
  3956                           ;newfile.c: 72:     SSP1BUF = data;
  3957  0FF6  0870               	movf	i2c_send@data,w
  3958  0FF7  0024               	movlb	4	; select bank4
  3959  0FF8  0091               	movwf	17	;volatile
  3960  0FF9                     l76:	
  3961                           ;newfile.c: 73:     while(SSP1IF == 0);
  3962                           
  3963  0FF9  0020               	movlb	0	; select bank0
  3964  0FFA  1D91               	btfss	17,3	;volatile
  3965  0FFB  2FFD               	goto	u861
  3966  0FFC  2FFE               	goto	u860
  3967  0FFD                     u861:	
  3968  0FFD  2FF9               	goto	l76
  3969  0FFE                     u860:	
  3970  0FFE                     l78:	
  3971                           
  3972                           ;newfile.c: 74:     SSP1IF = 0;
  3973  0FFE  1191               	bcf	17,3	;volatile
  3974  0FFF                     l79:	
  3975                           ;newfile.c: 75:     return 0;;	Return value of _i2c_send is never used
  3976                           
  3977  0FFF  0008               	return
  3978  1000                     __end_of_i2c_send:	
  3979                           
  3980                           	psect	text25
  3981  00CD                     __ptext25:	
  3982 ;; *************** function _abs *****************
  3983 ;; Defined at:
  3984 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  a               2    3[COMMON] int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    3[COMMON] int 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3998 ;;      Params:         2       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0
  4000 ;;      Temps:          2       0       0       0       0       0
  4001 ;;      Totals:         4       0       0       0       0       0
  4002 ;;Total ram usage:        4 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_dtoa
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _abs
  4013  00CD                     _abs:	
  4014  00CD                     l1410:	
  4015                           ;incstack = 0
  4016                           ; Regs used in _abs: [wreg+status,2+status,0]
  4017                           
  4018  00CD  0874               	movf	abs@a+1,w
  4019  00CE  3A80               	xorlw	128
  4020  00CF  00F5               	movwf	??_abs
  4021  00D0  3080               	movlw	128
  4022  00D1  0275               	subwf	??_abs,w
  4023  00D2  1D03               	skipz
  4024  00D3  28D6               	goto	u975
  4025  00D4  3001               	movlw	1
  4026  00D5  0273               	subwf	abs@a,w
  4027  00D6                     u975:	
  4028  00D6  1803               	skipnc
  4029  00D7  28D9               	goto	u971
  4030  00D8  28DA               	goto	u970
  4031  00D9                     u971:	
  4032  00D9  28E6               	goto	l808
  4033  00DA                     u970:	
  4034  00DA                     l1412:	
  4035  00DA  0973               	comf	abs@a,w
  4036  00DB  00F5               	movwf	??_abs
  4037  00DC  0974               	comf	abs@a+1,w
  4038  00DD  00F6               	movwf	??_abs+1
  4039  00DE  0AF5               	incf	??_abs,f
  4040  00DF  1903               	skipnz
  4041  00E0  0AF6               	incf	??_abs+1,f
  4042  00E1  0875               	movf	??_abs,w
  4043  00E2  00F3               	movwf	?_abs
  4044  00E3  0876               	movf	??_abs+1,w
  4045  00E4  00F4               	movwf	?_abs+1
  4046  00E5  28E6               	goto	l811
  4047  00E6                     l808:	
  4048  00E6                     l811:	
  4049  00E6  0008               	return
  4050  00E7                     __end_of_abs:	
  4051                           
  4052                           	psect	text26
  4053  048B                     __ptext26:	
  4054 ;; *************** function ___aomod *****************
  4055 ;; Defined at:
  4056 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  divisor         8    0[BANK0 ] long long 
  4059 ;;  dividend        8    8[BANK0 ] long long 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  sign            1    2[COMMON] unsigned char 
  4062 ;;  counter         1    1[COMMON] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  8    0[BANK0 ] long long 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4072 ;;      Params:         0      16       0       0       0       0
  4073 ;;      Locals:         2       0       0       0       0       0
  4074 ;;      Temps:          1       0       0       0       0       0
  4075 ;;      Totals:         3      16       0       0       0       0
  4076 ;;Total ram usage:       19 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_dtoa
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function ___aomod
  4087  048B                     ___aomod:	
  4088  048B                     l1452:	
  4089                           ;incstack = 0
  4090                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4091                           
  4092  048B  01F2               	clrf	___aomod@sign
  4093  048C                     l1454:	
  4094  048C  3028               	movlw	low ___aomod@dividend
  4095  048D  0086               	movwf	6
  4096  048E  3000               	movlw	high ___aomod@dividend
  4097  048F  0087               	movwf	7
  4098  0490  3F47               	moviw [7]fsr1
  4099  0491  00F0               	movwf	??___aomod
  4100  0492  1FF0               	btfss	??___aomod,7
  4101  0493  2C95               	goto	u1091
  4102  0494  2C96               	goto	u1090
  4103  0495                     u1091:	
  4104  0495  2CB7               	goto	l1458
  4105  0496                     u1090:	
  4106  0496                     l1456:	
  4107  0496  0020               	movlb	0	; select bank0
  4108  0497  09A8               	comf	___aomod@dividend,f
  4109  0498  09A9               	comf	___aomod@dividend+1,f
  4110  0499  09AA               	comf	___aomod@dividend+2,f
  4111  049A  09AB               	comf	___aomod@dividend+3,f
  4112  049B  09AC               	comf	___aomod@dividend+4,f
  4113  049C  09AD               	comf	___aomod@dividend+5,f
  4114  049D  09AE               	comf	___aomod@dividend+6,f
  4115  049E  09AF               	comf	___aomod@dividend+7,f
  4116  049F  0AA8               	incf	___aomod@dividend,f
  4117  04A0  1D03               	skipz
  4118  04A1  2CB5               	goto	u110lld
  4119  04A2  0AA9               	incf	___aomod@dividend+1,f
  4120  04A3  1D03               	skipz
  4121  04A4  2CB5               	goto	u110lld
  4122  04A5  0AAA               	incf	___aomod@dividend+2,f
  4123  04A6  1D03               	skipz
  4124  04A7  2CB5               	goto	u110lld
  4125  04A8  0AAB               	incf	___aomod@dividend+3,f
  4126  04A9  1D03               	skipz
  4127  04AA  2CB5               	goto	u110lld
  4128  04AB  0AAC               	incf	___aomod@dividend+4,f
  4129  04AC  1D03               	skipz
  4130  04AD  2CB5               	goto	u110lld
  4131  04AE  0AAD               	incf	___aomod@dividend+5,f
  4132  04AF  1D03               	skipz
  4133  04B0  2CB5               	goto	u110lld
  4134  04B1  0AAE               	incf	___aomod@dividend+6,f
  4135  04B2  1D03               	skipz
  4136  04B3  2CB5               	goto	u110lld
  4137  04B4  0AAF               	incf	___aomod@dividend+7,f
  4138  04B5                     u110lld:	
  4139  04B5  01F2               	clrf	___aomod@sign
  4140  04B6  0AF2               	incf	___aomod@sign,f
  4141  04B7                     l1458:	
  4142  04B7  3020               	movlw	low ___aomod@divisor
  4143  04B8  0086               	movwf	6
  4144  04B9  3000               	movlw	high ___aomod@divisor
  4145  04BA  0087               	movwf	7
  4146  04BB  3F47               	moviw [7]fsr1
  4147  04BC  00F0               	movwf	??___aomod
  4148  04BD  1FF0               	btfss	??___aomod,7
  4149  04BE  2CC0               	goto	u1111
  4150  04BF  2CC1               	goto	u1110
  4151  04C0                     u1111:	
  4152  04C0  2CE0               	goto	l1462
  4153  04C1                     u1110:	
  4154  04C1                     l1460:	
  4155  04C1  0020               	movlb	0	; select bank0
  4156  04C2  09A0               	comf	___aomod@divisor,f
  4157  04C3  09A1               	comf	___aomod@divisor+1,f
  4158  04C4  09A2               	comf	___aomod@divisor+2,f
  4159  04C5  09A3               	comf	___aomod@divisor+3,f
  4160  04C6  09A4               	comf	___aomod@divisor+4,f
  4161  04C7  09A5               	comf	___aomod@divisor+5,f
  4162  04C8  09A6               	comf	___aomod@divisor+6,f
  4163  04C9  09A7               	comf	___aomod@divisor+7,f
  4164  04CA  0AA0               	incf	___aomod@divisor,f
  4165  04CB  1D03               	skipz
  4166  04CC  2CE0               	goto	u112lld
  4167  04CD  0AA1               	incf	___aomod@divisor+1,f
  4168  04CE  1D03               	skipz
  4169  04CF  2CE0               	goto	u112lld
  4170  04D0  0AA2               	incf	___aomod@divisor+2,f
  4171  04D1  1D03               	skipz
  4172  04D2  2CE0               	goto	u112lld
  4173  04D3  0AA3               	incf	___aomod@divisor+3,f
  4174  04D4  1D03               	skipz
  4175  04D5  2CE0               	goto	u112lld
  4176  04D6  0AA4               	incf	___aomod@divisor+4,f
  4177  04D7  1D03               	skipz
  4178  04D8  2CE0               	goto	u112lld
  4179  04D9  0AA5               	incf	___aomod@divisor+5,f
  4180  04DA  1D03               	skipz
  4181  04DB  2CE0               	goto	u112lld
  4182  04DC  0AA6               	incf	___aomod@divisor+6,f
  4183  04DD  1D03               	skipz
  4184  04DE  2CE0               	goto	u112lld
  4185  04DF  0AA7               	incf	___aomod@divisor+7,f
  4186  04E0                     u112lld:	
  4187  04E0                     l1462:	
  4188  04E0  0020               	movlb	0	; select bank0
  4189  04E1  0820               	movf	___aomod@divisor,w
  4190  04E2  0421               	iorwf	___aomod@divisor+1,w
  4191  04E3  0422               	iorwf	___aomod@divisor+2,w
  4192  04E4  0423               	iorwf	___aomod@divisor+3,w
  4193  04E5  0424               	iorwf	___aomod@divisor+4,w
  4194  04E6  0425               	iorwf	___aomod@divisor+5,w
  4195  04E7  0426               	iorwf	___aomod@divisor+6,w
  4196  04E8  0427               	iorwf	___aomod@divisor+7,w
  4197  04E9  1903               	skipnz
  4198  04EA  2CEC               	goto	u1131
  4199  04EB  2CED               	goto	u1130
  4200  04EC                     u1131:	
  4201  04EC  2D40               	goto	l1478
  4202  04ED                     u1130:	
  4203  04ED                     l1464:	
  4204  04ED  01F1               	clrf	___aomod@counter
  4205  04EE  0AF1               	incf	___aomod@counter,f
  4206  04EF  2CFC               	goto	l1470
  4207  04F0                     l1466:	
  4208  04F0  35A0               	lslf	___aomod@divisor,f
  4209  04F1  0DA1               	rlf	___aomod@divisor+1,f
  4210  04F2  0DA2               	rlf	___aomod@divisor+2,f
  4211  04F3  0DA3               	rlf	___aomod@divisor+3,f
  4212  04F4  0DA4               	rlf	___aomod@divisor+4,f
  4213  04F5  0DA5               	rlf	___aomod@divisor+5,f
  4214  04F6  0DA6               	rlf	___aomod@divisor+6,f
  4215  04F7  0DA7               	rlf	___aomod@divisor+7,f
  4216  04F8                     l1468:	
  4217  04F8  3001               	movlw	1
  4218  04F9  00F0               	movwf	??___aomod
  4219  04FA  0870               	movf	??___aomod,w
  4220  04FB  07F1               	addwf	___aomod@counter,f
  4221  04FC                     l1470:	
  4222  04FC  1FA7               	btfss	___aomod@divisor+7,7
  4223  04FD  2CFF               	goto	u1141
  4224  04FE  2D00               	goto	u1140
  4225  04FF                     u1141:	
  4226  04FF  2CF0               	goto	l1466
  4227  0500                     u1140:	
  4228  0500                     l1472:	
  4229  0500  0827               	movf	___aomod@divisor+7,w
  4230  0501  022F               	subwf	___aomod@dividend+7,w
  4231  0502  1D03               	skipz
  4232  0503  2D1E               	goto	u1155
  4233  0504  0826               	movf	___aomod@divisor+6,w
  4234  0505  022E               	subwf	___aomod@dividend+6,w
  4235  0506  1D03               	skipz
  4236  0507  2D1E               	goto	u1155
  4237  0508  0825               	movf	___aomod@divisor+5,w
  4238  0509  022D               	subwf	___aomod@dividend+5,w
  4239  050A  1D03               	skipz
  4240  050B  2D1E               	goto	u1155
  4241  050C  0824               	movf	___aomod@divisor+4,w
  4242  050D  022C               	subwf	___aomod@dividend+4,w
  4243  050E  1D03               	skipz
  4244  050F  2D1E               	goto	u1155
  4245  0510  0823               	movf	___aomod@divisor+3,w
  4246  0511  022B               	subwf	___aomod@dividend+3,w
  4247  0512  1D03               	skipz
  4248  0513  2D1E               	goto	u1155
  4249  0514  0822               	movf	___aomod@divisor+2,w
  4250  0515  022A               	subwf	___aomod@dividend+2,w
  4251  0516  1D03               	skipz
  4252  0517  2D1E               	goto	u1155
  4253  0518  0821               	movf	___aomod@divisor+1,w
  4254  0519  0229               	subwf	___aomod@dividend+1,w
  4255  051A  1D03               	skipz
  4256  051B  2D1E               	goto	u1155
  4257  051C  0820               	movf	___aomod@divisor,w
  4258  051D  0228               	subwf	___aomod@dividend,w
  4259  051E                     u1155:	
  4260  051E  1C03               	skipc
  4261  051F  2D21               	goto	u1151
  4262  0520  2D22               	goto	u1150
  4263  0521                     u1151:	
  4264  0521  2D32               	goto	l1476
  4265  0522                     u1150:	
  4266  0522                     l1474:	
  4267  0522  0820               	movf	___aomod@divisor,w
  4268  0523  02A8               	subwf	___aomod@dividend,f
  4269  0524  0821               	movf	___aomod@divisor+1,w
  4270  0525  3BA9               	subwfb	___aomod@dividend+1,f
  4271  0526  0822               	movf	___aomod@divisor+2,w
  4272  0527  3BAA               	subwfb	___aomod@dividend+2,f
  4273  0528  0823               	movf	___aomod@divisor+3,w
  4274  0529  3BAB               	subwfb	___aomod@dividend+3,f
  4275  052A  0824               	movf	___aomod@divisor+4,w
  4276  052B  3BAC               	subwfb	___aomod@dividend+4,f
  4277  052C  0825               	movf	___aomod@divisor+5,w
  4278  052D  3BAD               	subwfb	___aomod@dividend+5,f
  4279  052E  0826               	movf	___aomod@divisor+6,w
  4280  052F  3BAE               	subwfb	___aomod@dividend+6,f
  4281  0530  0827               	movf	___aomod@divisor+7,w
  4282  0531  3BAF               	subwfb	___aomod@dividend+7,f
  4283  0532                     l1476:	
  4284  0532  36A7               	lsrf	___aomod@divisor+7,f
  4285  0533  0CA6               	rrf	___aomod@divisor+6,f
  4286  0534  0CA5               	rrf	___aomod@divisor+5,f
  4287  0535  0CA4               	rrf	___aomod@divisor+4,f
  4288  0536  0CA3               	rrf	___aomod@divisor+3,f
  4289  0537  0CA2               	rrf	___aomod@divisor+2,f
  4290  0538  0CA1               	rrf	___aomod@divisor+1,f
  4291  0539  0CA0               	rrf	___aomod@divisor,f
  4292  053A  3001               	movlw	1
  4293  053B  02F1               	subwf	___aomod@counter,f
  4294  053C  1D03               	btfss	3,2
  4295  053D  2D3F               	goto	u1161
  4296  053E  2D40               	goto	u1160
  4297  053F                     u1161:	
  4298  053F  2D00               	goto	l1472
  4299  0540                     u1160:	
  4300  0540                     l1478:	
  4301  0540  0872               	movf	___aomod@sign,w
  4302  0541  1903               	btfsc	3,2
  4303  0542  2D44               	goto	u1171
  4304  0543  2D45               	goto	u1170
  4305  0544                     u1171:	
  4306  0544  2D63               	goto	l467
  4307  0545                     u1170:	
  4308  0545                     l1480:	
  4309  0545  09A8               	comf	___aomod@dividend,f
  4310  0546  09A9               	comf	___aomod@dividend+1,f
  4311  0547  09AA               	comf	___aomod@dividend+2,f
  4312  0548  09AB               	comf	___aomod@dividend+3,f
  4313  0549  09AC               	comf	___aomod@dividend+4,f
  4314  054A  09AD               	comf	___aomod@dividend+5,f
  4315  054B  09AE               	comf	___aomod@dividend+6,f
  4316  054C  09AF               	comf	___aomod@dividend+7,f
  4317  054D  0AA8               	incf	___aomod@dividend,f
  4318  054E  1D03               	skipz
  4319  054F  2D63               	goto	u118lld
  4320  0550  0AA9               	incf	___aomod@dividend+1,f
  4321  0551  1D03               	skipz
  4322  0552  2D63               	goto	u118lld
  4323  0553  0AAA               	incf	___aomod@dividend+2,f
  4324  0554  1D03               	skipz
  4325  0555  2D63               	goto	u118lld
  4326  0556  0AAB               	incf	___aomod@dividend+3,f
  4327  0557  1D03               	skipz
  4328  0558  2D63               	goto	u118lld
  4329  0559  0AAC               	incf	___aomod@dividend+4,f
  4330  055A  1D03               	skipz
  4331  055B  2D63               	goto	u118lld
  4332  055C  0AAD               	incf	___aomod@dividend+5,f
  4333  055D  1D03               	skipz
  4334  055E  2D63               	goto	u118lld
  4335  055F  0AAE               	incf	___aomod@dividend+6,f
  4336  0560  1D03               	skipz
  4337  0561  2D63               	goto	u118lld
  4338  0562  0AAF               	incf	___aomod@dividend+7,f
  4339  0563                     u118lld:	
  4340  0563                     l467:	
  4341  0563  0020               	movlb	0	; select bank0
  4342  0564  0828               	movf	___aomod@dividend,w
  4343  0565  00A0               	movwf	?___aomod
  4344  0566  0829               	movf	___aomod@dividend+1,w
  4345  0567  00A1               	movwf	?___aomod+1
  4346  0568  082A               	movf	___aomod@dividend+2,w
  4347  0569  00A2               	movwf	?___aomod+2
  4348  056A  082B               	movf	___aomod@dividend+3,w
  4349  056B  00A3               	movwf	?___aomod+3
  4350  056C  082C               	movf	___aomod@dividend+4,w
  4351  056D  00A4               	movwf	?___aomod+4
  4352  056E  082D               	movf	___aomod@dividend+5,w
  4353  056F  00A5               	movwf	?___aomod+5
  4354  0570  082E               	movf	___aomod@dividend+6,w
  4355  0571  00A6               	movwf	?___aomod+6
  4356  0572  082F               	movf	___aomod@dividend+7,w
  4357  0573  00A7               	movwf	?___aomod+7
  4358  0574                     l468:	
  4359  0574  0008               	return
  4360  0575                     __end_of___aomod:	
  4361                           
  4362                           	psect	text27
  4363  0575                     __ptext27:	
  4364 ;; *************** function ___aodiv *****************
  4365 ;; Defined at:
  4366 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  divisor         8    0[BANK0 ] long long 
  4369 ;;  dividend        8    8[BANK0 ] long long 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  quotient        8    3[COMMON] long long 
  4372 ;;  sign            1    2[COMMON] unsigned char 
  4373 ;;  counter         1    1[COMMON] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  8    0[BANK0 ] long long 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4383 ;;      Params:         0      16       0       0       0       0
  4384 ;;      Locals:        10       0       0       0       0       0
  4385 ;;      Temps:          1       0       0       0       0       0
  4386 ;;      Totals:        11      16       0       0       0       0
  4387 ;;Total ram usage:       27 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_dtoa
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function ___aodiv
  4398  0575                     ___aodiv:	
  4399  0575                     l1414:	
  4400                           ;incstack = 0
  4401                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4402                           
  4403  0575  01F2               	clrf	___aodiv@sign
  4404  0576                     l1416:	
  4405  0576  3020               	movlw	low ___aodiv@divisor
  4406  0577  0086               	movwf	6
  4407  0578  3000               	movlw	high ___aodiv@divisor
  4408  0579  0087               	movwf	7
  4409  057A  3F47               	moviw [7]fsr1
  4410  057B  00F0               	movwf	??___aodiv
  4411  057C  1FF0               	btfss	??___aodiv,7
  4412  057D  2D7F               	goto	u981
  4413  057E  2D80               	goto	u980
  4414  057F                     u981:	
  4415  057F  2DA1               	goto	l1420
  4416  0580                     u980:	
  4417  0580                     l1418:	
  4418  0580  0020               	movlb	0	; select bank0
  4419  0581  09A0               	comf	___aodiv@divisor,f
  4420  0582  09A1               	comf	___aodiv@divisor+1,f
  4421  0583  09A2               	comf	___aodiv@divisor+2,f
  4422  0584  09A3               	comf	___aodiv@divisor+3,f
  4423  0585  09A4               	comf	___aodiv@divisor+4,f
  4424  0586  09A5               	comf	___aodiv@divisor+5,f
  4425  0587  09A6               	comf	___aodiv@divisor+6,f
  4426  0588  09A7               	comf	___aodiv@divisor+7,f
  4427  0589  0AA0               	incf	___aodiv@divisor,f
  4428  058A  1D03               	skipz
  4429  058B  2D9F               	goto	u99lld
  4430  058C  0AA1               	incf	___aodiv@divisor+1,f
  4431  058D  1D03               	skipz
  4432  058E  2D9F               	goto	u99lld
  4433  058F  0AA2               	incf	___aodiv@divisor+2,f
  4434  0590  1D03               	skipz
  4435  0591  2D9F               	goto	u99lld
  4436  0592  0AA3               	incf	___aodiv@divisor+3,f
  4437  0593  1D03               	skipz
  4438  0594  2D9F               	goto	u99lld
  4439  0595  0AA4               	incf	___aodiv@divisor+4,f
  4440  0596  1D03               	skipz
  4441  0597  2D9F               	goto	u99lld
  4442  0598  0AA5               	incf	___aodiv@divisor+5,f
  4443  0599  1D03               	skipz
  4444  059A  2D9F               	goto	u99lld
  4445  059B  0AA6               	incf	___aodiv@divisor+6,f
  4446  059C  1D03               	skipz
  4447  059D  2D9F               	goto	u99lld
  4448  059E  0AA7               	incf	___aodiv@divisor+7,f
  4449  059F                     u99lld:	
  4450  059F  01F2               	clrf	___aodiv@sign
  4451  05A0  0AF2               	incf	___aodiv@sign,f
  4452  05A1                     l1420:	
  4453  05A1  3028               	movlw	low ___aodiv@dividend
  4454  05A2  0086               	movwf	6
  4455  05A3  3000               	movlw	high ___aodiv@dividend
  4456  05A4  0087               	movwf	7
  4457  05A5  3F47               	moviw [7]fsr1
  4458  05A6  00F0               	movwf	??___aodiv
  4459  05A7  1FF0               	btfss	??___aodiv,7
  4460  05A8  2DAA               	goto	u1001
  4461  05A9  2DAB               	goto	u1000
  4462  05AA                     u1001:	
  4463  05AA  2DCE               	goto	l1426
  4464  05AB                     u1000:	
  4465  05AB                     l1422:	
  4466  05AB  0020               	movlb	0	; select bank0
  4467  05AC  09A8               	comf	___aodiv@dividend,f
  4468  05AD  09A9               	comf	___aodiv@dividend+1,f
  4469  05AE  09AA               	comf	___aodiv@dividend+2,f
  4470  05AF  09AB               	comf	___aodiv@dividend+3,f
  4471  05B0  09AC               	comf	___aodiv@dividend+4,f
  4472  05B1  09AD               	comf	___aodiv@dividend+5,f
  4473  05B2  09AE               	comf	___aodiv@dividend+6,f
  4474  05B3  09AF               	comf	___aodiv@dividend+7,f
  4475  05B4  0AA8               	incf	___aodiv@dividend,f
  4476  05B5  1D03               	skipz
  4477  05B6  2DCA               	goto	u101lld
  4478  05B7  0AA9               	incf	___aodiv@dividend+1,f
  4479  05B8  1D03               	skipz
  4480  05B9  2DCA               	goto	u101lld
  4481  05BA  0AAA               	incf	___aodiv@dividend+2,f
  4482  05BB  1D03               	skipz
  4483  05BC  2DCA               	goto	u101lld
  4484  05BD  0AAB               	incf	___aodiv@dividend+3,f
  4485  05BE  1D03               	skipz
  4486  05BF  2DCA               	goto	u101lld
  4487  05C0  0AAC               	incf	___aodiv@dividend+4,f
  4488  05C1  1D03               	skipz
  4489  05C2  2DCA               	goto	u101lld
  4490  05C3  0AAD               	incf	___aodiv@dividend+5,f
  4491  05C4  1D03               	skipz
  4492  05C5  2DCA               	goto	u101lld
  4493  05C6  0AAE               	incf	___aodiv@dividend+6,f
  4494  05C7  1D03               	skipz
  4495  05C8  2DCA               	goto	u101lld
  4496  05C9  0AAF               	incf	___aodiv@dividend+7,f
  4497  05CA                     u101lld:	
  4498  05CA                     l1424:	
  4499  05CA  3001               	movlw	1
  4500  05CB  00F0               	movwf	??___aodiv
  4501  05CC  0870               	movf	??___aodiv,w
  4502  05CD  06F2               	xorwf	___aodiv@sign,f
  4503  05CE                     l1426:	
  4504  05CE  3073               	movlw	low ___aodiv@quotient
  4505  05CF  0086               	movwf	6
  4506  05D0  3000               	movlw	high ___aodiv@quotient
  4507  05D1  0087               	movwf	7
  4508  05D2  3008               	movlw	8
  4509  05D3  00F0               	movwf	??___aodiv
  4510  05D4  3000               	movlw	0
  4511  05D5                     u1020:	
  4512  05D5  001E               	movwi fsr1++
  4513  05D6  0BF0               	decfsz	??___aodiv,f
  4514  05D7  2DD5               	goto	u1020
  4515  05D8                     l1428:	
  4516  05D8  0020               	movlb	0	; select bank0
  4517  05D9  0820               	movf	___aodiv@divisor,w
  4518  05DA  0421               	iorwf	___aodiv@divisor+1,w
  4519  05DB  0422               	iorwf	___aodiv@divisor+2,w
  4520  05DC  0423               	iorwf	___aodiv@divisor+3,w
  4521  05DD  0424               	iorwf	___aodiv@divisor+4,w
  4522  05DE  0425               	iorwf	___aodiv@divisor+5,w
  4523  05DF  0426               	iorwf	___aodiv@divisor+6,w
  4524  05E0  0427               	iorwf	___aodiv@divisor+7,w
  4525  05E1  1903               	skipnz
  4526  05E2  2DE4               	goto	u1031
  4527  05E3  2DE5               	goto	u1030
  4528  05E4                     u1031:	
  4529  05E4  2E41               	goto	l1448
  4530  05E5                     u1030:	
  4531  05E5                     l1430:	
  4532  05E5  01F1               	clrf	___aodiv@counter
  4533  05E6  0AF1               	incf	___aodiv@counter,f
  4534  05E7  2DF4               	goto	l1436
  4535  05E8                     l1432:	
  4536  05E8  35A0               	lslf	___aodiv@divisor,f
  4537  05E9  0DA1               	rlf	___aodiv@divisor+1,f
  4538  05EA  0DA2               	rlf	___aodiv@divisor+2,f
  4539  05EB  0DA3               	rlf	___aodiv@divisor+3,f
  4540  05EC  0DA4               	rlf	___aodiv@divisor+4,f
  4541  05ED  0DA5               	rlf	___aodiv@divisor+5,f
  4542  05EE  0DA6               	rlf	___aodiv@divisor+6,f
  4543  05EF  0DA7               	rlf	___aodiv@divisor+7,f
  4544  05F0                     l1434:	
  4545  05F0  3001               	movlw	1
  4546  05F1  00F0               	movwf	??___aodiv
  4547  05F2  0870               	movf	??___aodiv,w
  4548  05F3  07F1               	addwf	___aodiv@counter,f
  4549  05F4                     l1436:	
  4550  05F4  1FA7               	btfss	___aodiv@divisor+7,7
  4551  05F5  2DF7               	goto	u1041
  4552  05F6  2DF8               	goto	u1040
  4553  05F7                     u1041:	
  4554  05F7  2DE8               	goto	l1432
  4555  05F8                     u1040:	
  4556  05F8                     l1438:	
  4557  05F8  35F3               	lslf	___aodiv@quotient,f
  4558  05F9  0DF4               	rlf	___aodiv@quotient+1,f
  4559  05FA  0DF5               	rlf	___aodiv@quotient+2,f
  4560  05FB  0DF6               	rlf	___aodiv@quotient+3,f
  4561  05FC  0DF7               	rlf	___aodiv@quotient+4,f
  4562  05FD  0DF8               	rlf	___aodiv@quotient+5,f
  4563  05FE  0DF9               	rlf	___aodiv@quotient+6,f
  4564  05FF  0DFA               	rlf	___aodiv@quotient+7,f
  4565  0600                     l1440:	
  4566  0600  0827               	movf	___aodiv@divisor+7,w
  4567  0601  022F               	subwf	___aodiv@dividend+7,w
  4568  0602  1D03               	skipz
  4569  0603  2E1E               	goto	u1055
  4570  0604  0826               	movf	___aodiv@divisor+6,w
  4571  0605  022E               	subwf	___aodiv@dividend+6,w
  4572  0606  1D03               	skipz
  4573  0607  2E1E               	goto	u1055
  4574  0608  0825               	movf	___aodiv@divisor+5,w
  4575  0609  022D               	subwf	___aodiv@dividend+5,w
  4576  060A  1D03               	skipz
  4577  060B  2E1E               	goto	u1055
  4578  060C  0824               	movf	___aodiv@divisor+4,w
  4579  060D  022C               	subwf	___aodiv@dividend+4,w
  4580  060E  1D03               	skipz
  4581  060F  2E1E               	goto	u1055
  4582  0610  0823               	movf	___aodiv@divisor+3,w
  4583  0611  022B               	subwf	___aodiv@dividend+3,w
  4584  0612  1D03               	skipz
  4585  0613  2E1E               	goto	u1055
  4586  0614  0822               	movf	___aodiv@divisor+2,w
  4587  0615  022A               	subwf	___aodiv@dividend+2,w
  4588  0616  1D03               	skipz
  4589  0617  2E1E               	goto	u1055
  4590  0618  0821               	movf	___aodiv@divisor+1,w
  4591  0619  0229               	subwf	___aodiv@dividend+1,w
  4592  061A  1D03               	skipz
  4593  061B  2E1E               	goto	u1055
  4594  061C  0820               	movf	___aodiv@divisor,w
  4595  061D  0228               	subwf	___aodiv@dividend,w
  4596  061E                     u1055:	
  4597  061E  1C03               	skipc
  4598  061F  2E21               	goto	u1051
  4599  0620  2E22               	goto	u1050
  4600  0621                     u1051:	
  4601  0621  2E33               	goto	l1446
  4602  0622                     u1050:	
  4603  0622                     l1442:	
  4604  0622  0820               	movf	___aodiv@divisor,w
  4605  0623  02A8               	subwf	___aodiv@dividend,f
  4606  0624  0821               	movf	___aodiv@divisor+1,w
  4607  0625  3BA9               	subwfb	___aodiv@dividend+1,f
  4608  0626  0822               	movf	___aodiv@divisor+2,w
  4609  0627  3BAA               	subwfb	___aodiv@dividend+2,f
  4610  0628  0823               	movf	___aodiv@divisor+3,w
  4611  0629  3BAB               	subwfb	___aodiv@dividend+3,f
  4612  062A  0824               	movf	___aodiv@divisor+4,w
  4613  062B  3BAC               	subwfb	___aodiv@dividend+4,f
  4614  062C  0825               	movf	___aodiv@divisor+5,w
  4615  062D  3BAD               	subwfb	___aodiv@dividend+5,f
  4616  062E  0826               	movf	___aodiv@divisor+6,w
  4617  062F  3BAE               	subwfb	___aodiv@dividend+6,f
  4618  0630  0827               	movf	___aodiv@divisor+7,w
  4619  0631  3BAF               	subwfb	___aodiv@dividend+7,f
  4620  0632                     l1444:	
  4621  0632  1473               	bsf	___aodiv@quotient,0
  4622  0633                     l1446:	
  4623  0633  36A7               	lsrf	___aodiv@divisor+7,f
  4624  0634  0CA6               	rrf	___aodiv@divisor+6,f
  4625  0635  0CA5               	rrf	___aodiv@divisor+5,f
  4626  0636  0CA4               	rrf	___aodiv@divisor+4,f
  4627  0637  0CA3               	rrf	___aodiv@divisor+3,f
  4628  0638  0CA2               	rrf	___aodiv@divisor+2,f
  4629  0639  0CA1               	rrf	___aodiv@divisor+1,f
  4630  063A  0CA0               	rrf	___aodiv@divisor,f
  4631  063B  3001               	movlw	1
  4632  063C  02F1               	subwf	___aodiv@counter,f
  4633  063D  1D03               	btfss	3,2
  4634  063E  2E40               	goto	u1061
  4635  063F  2E41               	goto	u1060
  4636  0640                     u1061:	
  4637  0640  2DF8               	goto	l1438
  4638  0641                     u1060:	
  4639  0641                     l1448:	
  4640  0641  0872               	movf	___aodiv@sign,w
  4641  0642  1903               	btfsc	3,2
  4642  0643  2E45               	goto	u1071
  4643  0644  2E46               	goto	u1070
  4644  0645                     u1071:	
  4645  0645  2E64               	goto	l454
  4646  0646                     u1070:	
  4647  0646                     l1450:	
  4648  0646  09F3               	comf	___aodiv@quotient,f
  4649  0647  09F4               	comf	___aodiv@quotient+1,f
  4650  0648  09F5               	comf	___aodiv@quotient+2,f
  4651  0649  09F6               	comf	___aodiv@quotient+3,f
  4652  064A  09F7               	comf	___aodiv@quotient+4,f
  4653  064B  09F8               	comf	___aodiv@quotient+5,f
  4654  064C  09F9               	comf	___aodiv@quotient+6,f
  4655  064D  09FA               	comf	___aodiv@quotient+7,f
  4656  064E  0AF3               	incf	___aodiv@quotient,f
  4657  064F  1D03               	skipz
  4658  0650  2E64               	goto	u108lld
  4659  0651  0AF4               	incf	___aodiv@quotient+1,f
  4660  0652  1D03               	skipz
  4661  0653  2E64               	goto	u108lld
  4662  0654  0AF5               	incf	___aodiv@quotient+2,f
  4663  0655  1D03               	skipz
  4664  0656  2E64               	goto	u108lld
  4665  0657  0AF6               	incf	___aodiv@quotient+3,f
  4666  0658  1D03               	skipz
  4667  0659  2E64               	goto	u108lld
  4668  065A  0AF7               	incf	___aodiv@quotient+4,f
  4669  065B  1D03               	skipz
  4670  065C  2E64               	goto	u108lld
  4671  065D  0AF8               	incf	___aodiv@quotient+5,f
  4672  065E  1D03               	skipz
  4673  065F  2E64               	goto	u108lld
  4674  0660  0AF9               	incf	___aodiv@quotient+6,f
  4675  0661  1D03               	skipz
  4676  0662  2E64               	goto	u108lld
  4677  0663  0AFA               	incf	___aodiv@quotient+7,f
  4678  0664                     u108lld:	
  4679  0664                     l454:	
  4680  0664  0873               	movf	___aodiv@quotient,w
  4681  0665  0020               	movlb	0	; select bank0
  4682  0666  00A0               	movwf	?___aodiv
  4683  0667  0874               	movf	___aodiv@quotient+1,w
  4684  0668  00A1               	movwf	?___aodiv+1
  4685  0669  0875               	movf	___aodiv@quotient+2,w
  4686  066A  00A2               	movwf	?___aodiv+2
  4687  066B  0876               	movf	___aodiv@quotient+3,w
  4688  066C  00A3               	movwf	?___aodiv+3
  4689  066D  0877               	movf	___aodiv@quotient+4,w
  4690  066E  00A4               	movwf	?___aodiv+4
  4691  066F  0878               	movf	___aodiv@quotient+5,w
  4692  0670  00A5               	movwf	?___aodiv+5
  4693  0671  0879               	movf	___aodiv@quotient+6,w
  4694  0672  00A6               	movwf	?___aodiv+6
  4695  0673  087A               	movf	___aodiv@quotient+7,w
  4696  0674  00A7               	movwf	?___aodiv+7
  4697  0675                     l455:	
  4698  0675  0008               	return
  4699  0676                     __end_of___aodiv:	
  4700                           
  4701                           	psect	text28
  4702  000B                     __ptext28:	
  4703 ;; *************** function _adc_h *****************
  4704 ;; Defined at:
  4705 ;;		line 138 in file "newfile.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  adc             2    2[COMMON] unsigned int 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  2    0[COMMON] int 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4719 ;;      Params:         2       0       0       0       0       0
  4720 ;;      Locals:         2       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0
  4722 ;;      Totals:         4       0       0       0       0       0
  4723 ;;Total ram usage:        4 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _adc_h
  4734  000B                     _adc_h:	
  4735  000B                     l1688:	
  4736                           ;incstack = 0
  4737                           ; Regs used in _adc_h: [wreg+status,2]
  4738                           
  4739  000B                     l1690:	
  4740                           
  4741                           ;newfile.c: 140:     GO = 1;
  4742  000B  0021               	movlb	1	; select bank1
  4743  000C  149D               	bsf	29,1	;volatile
  4744  000D                     l105:	
  4745                           ;newfile.c: 141:     while(GO);
  4746                           
  4747  000D  189D               	btfsc	29,1	;volatile
  4748  000E  2810               	goto	u1521
  4749  000F  2811               	goto	u1520
  4750  0010                     u1521:	
  4751  0010  280D               	goto	l105
  4752  0011                     u1520:	
  4753  0011                     l1692:	
  4754                           
  4755                           ;newfile.c: 142:     adc = ADRES;
  4756  0011  081C               	movf	28,w	;volatile
  4757  0012  00F3               	movwf	adc_h@adc+1
  4758  0013  081B               	movf	27,w	;volatile
  4759  0014  00F2               	movwf	adc_h@adc
  4760                           
  4761                           ;newfile.c: 143:     return adc;
  4762  0015  0873               	movf	adc_h@adc+1,w
  4763  0016  00F1               	movwf	?_adc_h+1
  4764  0017  0872               	movf	adc_h@adc,w
  4765  0018  00F0               	movwf	?_adc_h
  4766  0019                     l108:	
  4767  0019  0008               	return
  4768  001A                     __end_of_adc_h:	
  4769                           
  4770                           	psect	text29
  4771  02E5                     __ptext29:	
  4772 ;; *************** function ___awdiv *****************
  4773 ;; Defined at:
  4774 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  divisor         2    6[COMMON] int 
  4777 ;;  dividend        2    8[COMMON] int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  quotient        2    2[BANK0 ] int 
  4780 ;;  sign            1    1[BANK0 ] unsigned char 
  4781 ;;  counter         1    0[BANK0 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2    6[COMMON] int 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4791 ;;      Params:         4       0       0       0       0       0
  4792 ;;      Locals:         0       4       0       0       0       0
  4793 ;;      Temps:          1       0       0       0       0       0
  4794 ;;      Totals:         5       4       0       0       0       0
  4795 ;;Total ram usage:        9 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function ___awdiv
  4806  02E5                     ___awdiv:	
  4807  02E5                     l1728:	
  4808                           ;incstack = 0
  4809                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4810                           
  4811  02E5  0020               	movlb	0	; select bank0
  4812  02E6  01A1               	clrf	___awdiv@sign
  4813  02E7                     l1730:	
  4814  02E7  1FF7               	btfss	___awdiv@divisor+1,7
  4815  02E8  2AEA               	goto	u1561
  4816  02E9  2AEB               	goto	u1560
  4817  02EA                     u1561:	
  4818  02EA  2AF2               	goto	l1736
  4819  02EB                     u1560:	
  4820  02EB                     l1732:	
  4821  02EB  09F6               	comf	___awdiv@divisor,f
  4822  02EC  09F7               	comf	___awdiv@divisor+1,f
  4823  02ED  0AF6               	incf	___awdiv@divisor,f
  4824  02EE  1903               	skipnz
  4825  02EF  0AF7               	incf	___awdiv@divisor+1,f
  4826  02F0                     l1734:	
  4827  02F0  01A1               	clrf	___awdiv@sign
  4828  02F1  0AA1               	incf	___awdiv@sign,f
  4829  02F2                     l1736:	
  4830  02F2  1FF9               	btfss	___awdiv@dividend+1,7
  4831  02F3  2AF5               	goto	u1571
  4832  02F4  2AF6               	goto	u1570
  4833  02F5                     u1571:	
  4834  02F5  2AFF               	goto	l1742
  4835  02F6                     u1570:	
  4836  02F6                     l1738:	
  4837  02F6  09F8               	comf	___awdiv@dividend,f
  4838  02F7  09F9               	comf	___awdiv@dividend+1,f
  4839  02F8  0AF8               	incf	___awdiv@dividend,f
  4840  02F9  1903               	skipnz
  4841  02FA  0AF9               	incf	___awdiv@dividend+1,f
  4842  02FB                     l1740:	
  4843  02FB  3001               	movlw	1
  4844  02FC  00FA               	movwf	??___awdiv
  4845  02FD  087A               	movf	??___awdiv,w
  4846  02FE  06A1               	xorwf	___awdiv@sign,f
  4847  02FF                     l1742:	
  4848  02FF  01A2               	clrf	___awdiv@quotient
  4849  0300  01A3               	clrf	___awdiv@quotient+1
  4850  0301                     l1744:	
  4851  0301  0876               	movf	___awdiv@divisor,w
  4852  0302  0477               	iorwf	___awdiv@divisor+1,w
  4853  0303  1903               	btfsc	3,2
  4854  0304  2B06               	goto	u1581
  4855  0305  2B07               	goto	u1580
  4856  0306                     u1581:	
  4857  0306  2B36               	goto	l1764
  4858  0307                     u1580:	
  4859  0307                     l1746:	
  4860  0307  01A0               	clrf	___awdiv@counter
  4861  0308  0AA0               	incf	___awdiv@counter,f
  4862  0309  2B13               	goto	l1752
  4863  030A                     l1748:	
  4864  030A  3001               	movlw	1
  4865  030B                     u1595:	
  4866  030B  35F6               	lslf	___awdiv@divisor,f
  4867  030C  0DF7               	rlf	___awdiv@divisor+1,f
  4868  030D  0B89               	decfsz	9,f
  4869  030E  2B0B               	goto	u1595
  4870  030F                     l1750:	
  4871  030F  3001               	movlw	1
  4872  0310  00FA               	movwf	??___awdiv
  4873  0311  087A               	movf	??___awdiv,w
  4874  0312  07A0               	addwf	___awdiv@counter,f
  4875  0313                     l1752:	
  4876  0313  1FF7               	btfss	___awdiv@divisor+1,7
  4877  0314  2B16               	goto	u1601
  4878  0315  2B17               	goto	u1600
  4879  0316                     u1601:	
  4880  0316  2B0A               	goto	l1748
  4881  0317                     u1600:	
  4882  0317                     l1754:	
  4883  0317  3001               	movlw	1
  4884  0318                     u1615:	
  4885  0318  35A2               	lslf	___awdiv@quotient,f
  4886  0319  0DA3               	rlf	___awdiv@quotient+1,f
  4887  031A  0B89               	decfsz	9,f
  4888  031B  2B18               	goto	u1615
  4889  031C  0877               	movf	___awdiv@divisor+1,w
  4890  031D  0279               	subwf	___awdiv@dividend+1,w
  4891  031E  1D03               	skipz
  4892  031F  2B22               	goto	u1625
  4893  0320  0876               	movf	___awdiv@divisor,w
  4894  0321  0278               	subwf	___awdiv@dividend,w
  4895  0322                     u1625:	
  4896  0322  1C03               	skipc
  4897  0323  2B25               	goto	u1621
  4898  0324  2B26               	goto	u1620
  4899  0325                     u1621:	
  4900  0325  2B2B               	goto	l1760
  4901  0326                     u1620:	
  4902  0326                     l1756:	
  4903  0326  0876               	movf	___awdiv@divisor,w
  4904  0327  02F8               	subwf	___awdiv@dividend,f
  4905  0328  0877               	movf	___awdiv@divisor+1,w
  4906  0329  3BF9               	subwfb	___awdiv@dividend+1,f
  4907  032A                     l1758:	
  4908  032A  1422               	bsf	___awdiv@quotient,0
  4909  032B                     l1760:	
  4910  032B  3001               	movlw	1
  4911  032C                     u1635:	
  4912  032C  36F7               	lsrf	___awdiv@divisor+1,f
  4913  032D  0CF6               	rrf	___awdiv@divisor,f
  4914  032E  0B89               	decfsz	9,f
  4915  032F  2B2C               	goto	u1635
  4916  0330                     l1762:	
  4917  0330  3001               	movlw	1
  4918  0331  02A0               	subwf	___awdiv@counter,f
  4919  0332  1D03               	btfss	3,2
  4920  0333  2B35               	goto	u1641
  4921  0334  2B36               	goto	u1640
  4922  0335                     u1641:	
  4923  0335  2B17               	goto	l1754
  4924  0336                     u1640:	
  4925  0336                     l1764:	
  4926  0336  0821               	movf	___awdiv@sign,w
  4927  0337  1903               	btfsc	3,2
  4928  0338  2B3A               	goto	u1651
  4929  0339  2B3B               	goto	u1650
  4930  033A                     u1651:	
  4931  033A  2B40               	goto	l1768
  4932  033B                     u1650:	
  4933  033B                     l1766:	
  4934  033B  09A2               	comf	___awdiv@quotient,f
  4935  033C  09A3               	comf	___awdiv@quotient+1,f
  4936  033D  0AA2               	incf	___awdiv@quotient,f
  4937  033E  1903               	skipnz
  4938  033F  0AA3               	incf	___awdiv@quotient+1,f
  4939  0340                     l1768:	
  4940  0340  0823               	movf	___awdiv@quotient+1,w
  4941  0341  00F7               	movwf	?___awdiv+1
  4942  0342  0822               	movf	___awdiv@quotient,w
  4943  0343  00F6               	movwf	?___awdiv
  4944  0344                     l507:	
  4945  0344  0008               	return
  4946  0345                     __end_of___awdiv:	
  4947  007E                     btemp	set	126	;btemp
  4948  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        4
    BSS         40
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80      6      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S702_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[6]), STR_2(CODE[6]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMMON

    _pwm_h->___wmul
    _picinit->___lldiv
    _lcd_pos->_lcd_send_com
    _lcd_init->_lcd_send_com
    _lcd_send_com->_lcd_i2c
    _vfpfcnvrt->_fputc
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_lcd_send_char
    _lcd_send_char->_lcd_i2c
    _lcd_i2c->_i2c_send
    _abs->___aomod
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _reset_o->_printf
    _pwm_lcd->_printf
    _dir_o->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_pwm_lcd

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   23336
                                              2 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _adc_h
                              _dir_o
                           _lcd_init
                            _lcd_pos
                            _picinit
                              _pwm_h
                            _pwm_lcd
                            _reset_o
 ---------------------------------------------------------------------------------
 (1) _reset_o                                              0     0      0    6894
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pwm_lcd                                              2     0      2    6992
                                              0 BANK1      2     0      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pwm_h                                               10     6      4     542
                                              6 COMMON     6     2      4
                                              0 BANK0      4     4      0
                             ___wmul
                              _adc_h (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _picinit                                              0     0      0     314
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_pos                                              3     2      1     588
                                              5 COMMON     3     2      1
                       _lcd_send_com
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     240
                                              5 COMMON     2     2      0
                       _lcd_send_com
 ---------------------------------------------------------------------------------
 (2) _lcd_send_com                                         2     2      0     240
                                              3 COMMON     2     2      0
                            _lcd_i2c
 ---------------------------------------------------------------------------------
 (1) _dir_o                                                0     0      0    6894
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    6894
                                             71 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    6460
                                             63 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    6132
                                             47 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                30    22      8    4569
                                             17 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2946
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1345
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1030
                                              6 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     262
                                              5 COMMON     1     1      0
                      _lcd_send_char
 ---------------------------------------------------------------------------------
 (7) _lcd_send_char                                        2     2      0     240
                                              3 COMMON     2     2      0
                            _lcd_i2c
 ---------------------------------------------------------------------------------
 (8) _lcd_i2c                                              2     1      1     218
                                              1 COMMON     2     1      1
                           _i2c_send
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (9) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_send                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _adc_h                                                4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _adc_h
   _dir_o
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _lcd_send_char
                     _lcd_i2c
                       _i2c_send
                       _i2c_start
                       _i2c_stop
               _fputs
                 _fputc
                   _putch
                     _lcd_send_char
                       _lcd_i2c
                         _i2c_send
                         _i2c_start
                         _i2c_stop
               _strlen
           _fputc
             _putch
               _lcd_send_char
                 _lcd_i2c
                   _i2c_send
                   _i2c_start
                   _i2c_stop
   _lcd_init
     _lcd_send_com
       _lcd_i2c
         _i2c_send
         _i2c_start
         _i2c_stop
   _lcd_pos
     _lcd_send_com
       _lcd_i2c
         _i2c_send
         _i2c_start
         _i2c_stop
   _picinit
     ___lldiv
   _pwm_h
     ___wmul
     _adc_h (ARG)
   _pwm_lcd
     ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
     _printf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _lcd_send_char
                     _lcd_i2c
                       _i2c_send
                       _i2c_start
                       _i2c_stop
               _fputs
                 _fputc
                   _putch
                     _lcd_send_char
                       _lcd_i2c
                         _i2c_send
                         _i2c_start
                         _i2c_stop
               _strlen
           _fputc
             _putch
               _lcd_send_char
                 _lcd_i2c
                   _i2c_send
                   _i2c_start
                   _i2c_stop
   _reset_o
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _lcd_send_char
                     _lcd_i2c
                       _i2c_send
                       _i2c_start
                       _i2c_stop
               _fputs
                 _fputc
                   _putch
                     _lcd_send_char
                       _lcd_i2c
                         _i2c_send
                         _i2c_start
                         _i2c_stop
               _strlen
           _fputc
             _putch
               _lcd_send_char
                 _lcd_i2c
                   _i2c_send
                   _i2c_start
                   _i2c_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      8F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 25 01:50:55 2020

          ?_lcd_send_com 0070              __CFG_CP$OFF 0000           ?_lcd_send_char 0070  
                     l61 01F2                       l70 0FEC                       l64 0FE1  
                     l72 0FF1                       l73 0FF2                       l66 0FE6  
                     l90 004A                       l67 0FE7                       l76 0FF9  
                     l93 0039                       l78 0FFE                       l79 0FFF  
                     l87 0081                       l96 01B7                       _GO 04E9  
                     l99 0028             ___awdiv@sign 0021      ___wmul@multiplicand 0072  
            __CFG_LVP$ON 0000                      l102 0FDC                      l111 0155  
                    l105 000D                      l114 005B                      l108 0019  
                    l124 00CC                      l310 028A                      l119 00B3  
                    l305 024E                      l313 06BF                      l322 076D  
                    l314 06C8                      l308 0270                      l309 027E  
                    l318 06E5                      l350 0186                      l319 06FD  
                    l343 048A                      l336 07E3                      l354 00F1  
                    l507 0344                      l356 0105                      l454 0664  
                    l390 02E4                      l455 0675                      l467 0563  
                    l811 00E6                      l468 0574                      l823 0231  
                    l831 012D                      l808 00E6                      l844 009A  
                    l838 006D                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA4 0064                      _PR2 001B  
           __CFG_CPD$OFF 0000                      u900 0229                      u901 0228  
                    u910 012D                      u911 012C                      u840 0FE6  
                    u920 0094                      u841 0FE5                      u905 0225  
                    u921 0093                      u850 0FF1                      u930 0239  
                    u851 0FF0                      u931 0238                      u860 0FFE  
                    u940 0247                      u861 0FFD                      u941 0246  
                    u870 01F8                      u950 0270                      u871 01F7  
                    u951 026F                      u880 01FD                      u960 0275  
                    u881 01FC                      u961 0274                      u970 00DA  
                    u890 020C                      u971 00D9                      u891 020B  
                    u955 026C                      u980 0580                      u981 057F  
                    u975 00D6                      _abs 00CD                      _pad 0232  
           __CFG_BORV$LO 0000                      wreg 0009                     ?_abs 0073  
                   l1400 0251                     l1410 00CD                     l1330 0FE8  
                   l1402 025D                     l1420 05A1                     l1412 00DA  
                   l1332 0FF4                     l1340 0076                     l1404 0262  
                   l1500 06F8                     l1430 05E5                     l1422 05AB  
                   l1414 0575                     l1334 0FF6                     l1342 007A  
                   l1350 0032                     l1406 0275                     l1510 073C  
                   l1502 0702                     l1440 0600                     l1432 05E8  
                   l1424 05CA                     l1416 0576                     l1328 0FDD  
                   l1344 007E                     l1336 006F                     l1360 01F8  
                   l1520 07A3                     l1512 0740                     l1504 0705  
                   l1450 0646                     l1442 0622                     l1434 05F0  
                   l1426 05CE                     l1418 0580                     l1338 0072  
                   l1354 0FD8                     l1362 01FD                     l1530 07BF  
                   l1514 077B                     l1522 07A8                     l1506 070A  
                   l1602 005C                     l1610 00E9                     l1444 0632  
                   l1436 05F4                     l1428 05D8                     l1460 04C1  
                   l1452 048B                     l1348 002A                     l1364 0202  
                   l1372 0108                     l1380 0083                     l1532 07C4  
                   l1524 07AF                     l1516 0788                     l1508 0738  
                   l1540 03B2                     l1604 0061                     l1612 00ED  
                   l1700 0144                     l1446 0633                     l1438 05F8  
                   l1470 04FC                     l1462 04E0                     l1454 048C  
                   l1366 020C                     l1358 01F3                     l1374 010B  
                   l1382 0088                     l1390 0234                     l1534 07C8  
                   l1526 07B4                     l1518 0795                     l1550 03E6  
                   l1542 03C3                     l1710 00A0                     l1630 02AD  
                   l1622 028B                     l1614 00F6                     l1702 0151  
                   l1448 0641                     l1480 0545                     l1472 0500  
                   l1464 04ED                     l1456 0496                     l1368 0229  
                   l1376 0119                     l1384 008C                     l1392 0239  
                   l1528 07B9                     l1536 07D0                     l1560 0432  
                   l1552 03F7                     l1544 03CB                     l1712 00A7  
                   l1640 02D6                     l1632 02B4                     l1624 029B  
                   l1616 00FB                     l1608 00E7                     l1720 00B9  
                   l1730 02E7                     l1474 0522                     l1466 04F0  
                   l1458 04B7                     l1378 011E                     l1386 0094  
                   l1394 0242                     l1490 06C4                     l1482 0678  
                   l1562 0443                     l1570 045C                     l1554 03FF  
                   l1546 03D0                     l1714 00AA                     l1634 02C6  
                   l1626 029E                     l1642 02DC                     l1650 01BF  
                   l1618 0101                     l1706 004B                     l1722 00C0  
                   l1740 02FB                     l1732 02EB                     l1476 0532  
                   l1468 04F8                     l1396 0247                     l1492 06D7  
                   l1484 0688                     l1572 0464                     l1564 044B  
                   l1556 0418                     l1548 03D4                     l1716 00B1  
                   l1708 009B                     l1636 02CE                     l1628 02A9  
                   l1660 01CB                     l1652 01C2                     l1724 00C3  
                   l1750 030F                     l1742 02FF                     l1734 02F0  
                   l1478 0540                     l1398 024C                     l1494 06DD  
                   l1486 069B                     l1566 0456                     l1590 0174  
                   l1638 02CF                     l1670 01F0                     l1662 01CE  
                   l1654 01C4                     l1646 01B8                     l1726 00CA  
                   l1718 00B4                     l1760 032B                     l1752 0313  
                   l1744 0301                     l1736 02F2                     l1728 02E5  
                   l1496 06ED                     l1488 06A1                     l1576 0467  
                   l1592 017E                     l1584 0158                     l1680 01B3  
                   l1672 0187                     l1664 01D0                     l1656 01C8  
                   l1648 01BE                     l1762 0330                     l1754 0317  
                   l1746 0307                     l1738 02F6                     l1690 000B  
                   l1498 06F3                     l1578 0480                     l1586 015C  
                   l1674 019F                     l1666 01D3                     l1658 01C9  
                   l1756 0326                     l1748 030A                     l1764 0336  
                   l1692 0011                     l1588 0160                     l1596 003B  
                   l1676 01AB                     l1684 001B                     l1668 01D8  
                   l1780 035D                     l1772 0345                     l1766 033B  
                   l1758 032A                     l1598 0043                     l1678 01AF  
                   l1790 03A5                     l1782 036F                     l1774 0348  
                   l1768 0340                     l1688 000B                     l1696 012E  
                   l1792 03AA                     l1784 0375                     l1776 0355  
                   l1698 0131                     l1786 039D                     l1778 0358  
                   l1788 03A2                     ?_pad 0028                     STR_1 0800  
                   STR_2 0825                     STR_3 081F                     STR_4 0816  
                   STR_5 080D                     u1000 05AB                     u1001 05AA  
                   u1020 05D5                     u1030 05E5                     u1110 04C1  
                   u1031 05E4                     u1111 04C0                     u1040 05F8  
                   u1200 0694                     u1041 05F7                     u1050 0622  
                   u1130 04ED                     u1210 06A1                     u1051 0621  
                   u1131 04EC                     u1211 06A0                     u1060 0641  
                   u1140 0500                     u1300 07A3                     u1061 0640  
                   u1141 04FF                     u1301 07A2                     u1070 0646  
                   u1150 0522                     u1310 07A8                     u1230 06C4  
                   u1071 0645                     u1055 061E                     u1151 0521  
                   u1311 07A7                     u1231 06C3                     u1160 0540  
                   u1320 07AF                     u1240 06D7                     u1400 00ED  
                   u1161 053F                     u1321 07AE                     u1305 079F  
                   u1241 06D6                     u1401 00EC                     u1170 0545  
                   u1090 0496                     u1330 07B4                     u1250 06F3  
                   u1171 0544                     u1155 051E                     u1091 0495  
                   u1331 07B3                     u1251 06F2                     u1340 07BF  
                   u1260 06F8                     u1500 02DC                     u1341 07BE  
                   u1261 06F7                     u1245 06D3                     u1501 02DB  
                   u1270 077B                     u1190 0693                     u1350 03C3  
                   u1430 0101                     u1271 077A                     u1191 0691  
                   u1351 03C2                     u1431 0100                     u1415 00F2  
                   u1600 0317                     u1520 0011                     u1280 0788  
                   u1360 03E6                     u1440 029B                     u1601 0316  
                   u1521 0010                     u1281 0787                     u1361 03E5  
                   u1441 029A                     u1425 00F7                     u1290 0795  
                   u1370 03F7                     u1291 0794                     u1275 0777  
                   u1371 03F6                     u1515 001E                     u1620 0326  
                   u1380 0443                     u1540 00A0                     u1460 02AD  
                   u1621 0325                     u1381 0442                     u1541 009F  
                   u1461 02AC                     u1390 017E                     u1550 00B9  
                   u1615 0318                     u1295 0791                     u1391 017D  
                   u1455 029F                     u1535 0149                     u1551 00B8  
                   u1640 0336                     u1560 02EB                     u1480 02C6  
                   u1641 0335                     u1625 0322                     u1561 02EA  
                   u1481 02C5                     u1650 033B                     u1570 02F6  
                   u1651 033A                     u1635 032C                     u1571 02F5  
                   u1475 02AE                     u1580 0307                     u1581 0306  
                   u1485 02C2                     u1495 02D0                     u1595 030B  
                   u1667 034E                     u1677 01A4                     u1687 0046  
                   u1697 0035             __CFG_WRT$OFF 0000                     abs@a 0073  
                   _dbuf 00A8                     _main 0345                     _dtoa 0676  
                   _prec 00A4                     _nout 00A0                     pad@i 002C  
                   pad@p 0029                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     pad@w 002E                     btemp 007E  
                   start 0002            __CFG_IESO$OFF 0000           ??_lcd_send_com 0073  
                  ??_abs 0075                    ??_pad 002B             lcd_pos@pos_x 0077  
           lcd_pos@pos_y 0075          __end_of___aodiv 0676                    ?_main 0070  
                  ?_dtoa 0031          __end_of___aomod 0575          __end_of___awdiv 0345  
                  _ADRES 009B            __CFG_WDTE$OFF 0000          __end_of___lldiv 02E5  
        ___awdiv@divisor 0076                    _T2CON 001C          ___awdiv@counter 0020  
           vfpfcnvrt@fmt 004F                    _TRISA 008C                    _TRISB 008D  
                  u99lld 059F          __end_of_lcd_i2c 0082           __CFG_FCMEN$OFF 0000  
        __end_of_lcd_pos 0029                    _adc_h 000B                    _dir_o 009B  
                  _flags 00A6                    _fputc 01F3                    _fputs 0106  
                  pad@fp 0030                    _pwm_h 012E                    _width 00A2  
        __end_of_picinit 01F3                    _putch 0FD7                    dtoa@d 0031  
                  dtoa@i 004D                    dtoa@n 0045                    dtoa@p 003E  
                  dtoa@s 0043                    dtoa@w 0041           __CFG_BOREN$OFF 0000  
        __end_of_reset_o 00CD          __end_of_pwm_lcd 005C                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 07E4  
        ??_lcd_send_char 0073             __end_of_main 03B0             __end_of_dtoa 07E4  
       __end_of_i2c_send 1000         __end_of_i2c_stop 0FF3            pwm_h@poripori 0022  
                 ??_main 00CA                   ??_dtoa 0039           __CFG_PLLEN$OFF 0000  
                 ?_adc_h 0070                   ?_dir_o 0070                   _ADCON0 009D  
                 _ADCON1 009E                   ?_fputc 0076                   ?_fputs 0020  
                 _CCPR3L 0311         ___awdiv@dividend 0078                   ?_pwm_h 0076  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELB 018D  
                 u101lld 05CA                   u110lld 04B5                   _OSCCON 0099  
                 u112lld 04E0                   u122lld 06BF                   u108lld 0664  
                 u118lld 0563                   _SSP1IF 008B       __size_of_i2c_start 000B  
         __CFG_PWRTE$OFF 0000             i2c_send@data 0070             vfprintf@cfmt 0065  
       __end_of_lcd_init 01B8                ??___aodiv 0070                ??___aomod 0070  
                 ___wmul 00E7                ??___awdiv 007A                ??___lldiv 0078  
       ___awdiv@quotient 0022                   _printf 005C                ??_lcd_i2c 0072  
                 pad@buf 0028                   dtoa@fp 0040                   _strlen 0082  
              ??_lcd_pos 0076                   fputc@c 0076                   fputs@c 0024  
                 fputs@i 0025                   fputs@s 0027                ??_picinit 007E  
              ??_reset_o 007E                ??_pwm_lcd 007E         __end_of_vfprintf 0187  
   __end_of_lcd_send_com 004B  __end_of__initialization 07FD           __pcstackCOMMON 0070  
           __pidataBANK1 0FD3            __end_of_adc_h 001A            __end_of_dir_o 00B4  
          __end_of_fputc 0232            __end_of_fputs 012E            __end_of_pwm_h 0156  
          __end_of_putch 0FDD        __end_of_i2c_start 0FE8                  ??_adc_h 0072  
                ??_dir_o 007E                  ??_fputc 0079                  ??_fputs 0021  
                ??_pwm_h 007A                  ??_putch 0075               __pbssBANK1 00A0  
              ?_i2c_send 0070                ?_i2c_stop 0070               __pmaintext 0345  
                ?___wmul 0070                  _CCP3CON 0313                  _CCPTMRS 029E  
                ?_printf 0067                  ?_strlen 0070       __size_of_vfpfcnvrt 00DB  
                _SSP1ADD 0212                  _SSP1BUF 0211                ?_lcd_init 0070  
             ??_i2c_send 0070               ??_i2c_stop 0070                  ___aodiv 0575  
                ___aomod 048B                  ___awdiv 02E5                  ___lldiv 028B  
        __size_of___wmul 001F                ?_vfprintf 005F          __CFG_STVREN$OFF 0000  
                _lcd_i2c 006E                  __ptext1 00B4                  __ptext2 004B  
                __ptext3 012E                  __ptext4 00E7                  __ptext5 01B8  
                __ptext6 028B                  __ptext7 001A                  __ptext8 0187  
                __ptext9 003A          __size_of_printf 0012                  _lcd_pos 001A  
        __size_of_strlen 0019    __size_of_lcd_send_com 0011             __size_of_abs 001A  
           __size_of_pad 0059                  _picinit 01B8                  _reset_o 00B4  
                _pwm_lcd 004B                  clrloop0 0006               ??_lcd_init 0075  
   end_of_initialization 07FD                  fputc@fp 0078                  fputs@fp 0020  
        ___lldiv@divisor 0070          ___lldiv@counter 007D        __end_of_vfpfcnvrt 048B  
           _lcd_send_com 003A               lcd_i2c@con 0072    __end_of_lcd_send_char 003A  
             ??_vfprintf 0062                  strlen@a 0073                  strlen@s 0074  
       __CFG_FOSC$INTOSC 0000           putch@character 0075              vfpfcnvrt@ap 0050  
            vfpfcnvrt@fp 005E              vfpfcnvrt@ll 0056           __end_of___wmul 0106  
         __end_of_printf 006E           __end_of_strlen 009B              pwm_lcd@duty 00C8  
    start_initialization 07E4              __end_of_abs 00E7                _i2c_start 0FDD  
            __end_of_pad 028B        __size_of_i2c_send 000D        __size_of_i2c_stop 000B  
    lcd_send_com@command 0074              vfprintf@fmt 005F                 ??___wmul 0074  
            __pdataBANK1 00CE                 ??_printf 006B                 ??_strlen 0072  
              ___latbits 0001            __pcstackBANK0 0020            __pcstackBANK1 00C8  
       ___aodiv@dividend 0028               ?_i2c_start 0070        lcd_send_char@data 0074  
      __size_of_lcd_init 0031                 ?___aodiv 0020                 ?___aomod 0020  
               ?___awdiv 0076         ___aodiv@quotient 0073                 ?___lldiv 0070  
               ?_lcd_i2c 0071        __size_of_vfprintf 0031                 ?_lcd_pos 0075  
               ?_picinit 0070                 ?_reset_o 0070           __size_of_adc_h 000F  
               ?_pwm_lcd 00C8           __size_of_dir_o 0019           __size_of_fputc 003F  
         __size_of_fputs 0028           __size_of_pwm_h 0028           __size_of_putch 0006  
         ___wmul@product 0074                clear_ram0 0005                 _SSP1CON1 0215  
               _SSP1CON3 0217                 _SSP1STAT 0214                _vfpfcnvrt 03B0  
      ___wmul@multiplier 0070              ??_i2c_start 0070                 _i2c_send 0FF3  
               _i2c_stop 0FE8               vfprintf@ap 0061               vfprintf@fp 0064  
       __size_of___aodiv 0101         __size_of___aomod 00EA         __size_of___awdiv 0060  
       __size_of___lldiv 005A               ?_vfpfcnvrt 004F          ___aodiv@divisor 0020  
        ___aodiv@counter 0071         __size_of_lcd_i2c 0014         __size_of_lcd_pos 000F  
               adc_h@adc 0072                 _dtoa$403 003C         __size_of_picinit 003B  
               __ptext10 009B                 __ptext11 005C                 __ptext20 0029  
               __ptext12 0156                 __ptext21 006E                 __ptext13 03B0  
               __ptext22 0FE8                 __ptext14 0676                 __ptext23 0FDD  
               __ptext15 0232                 __ptext24 0FF3                 __ptext16 0082  
               __ptext25 00CD                 __ptext17 0106                 __ptext26 048B  
               __ptext18 01F3                 __ptext27 0575                 __ptext19 0FD7  
               __ptext28 000B                 __ptext29 02E5         __size_of_reset_o 0019  
           _SSP1CON2bits 0216                 _lcd_init 0187         __size_of_pwm_lcd 0011  
 __size_of_lcd_send_char 0011            __size_of_main 006B            __size_of_dtoa 016E  
               _pwm_freq 00CE                 _vfprintf 0156                printf@fmt 0067  
              pwm_h@volt 0076         ___aomod@dividend 0028         ___lldiv@dividend 0074  
      __CFG_CLKOUTEN$OFF 0000                 printf@ap 006E                 pwm_h@pwm 0020  
        ___aomod@divisor 0020              ??_vfpfcnvrt 0051          ___aomod@counter 0071  
          _lcd_send_char 0029            __pstringtext1 0800            __pstringtext2 080D  
          __pstringtext3 0816            __pstringtext4 081F            __pstringtext5 0825  
          __pstringtext6 0000              lcd_i2c@data 0071         ___lldiv@quotient 0079  
            _SSPCON2bits 0216             ___aodiv@sign 0072             ___aomod@sign 0072  
